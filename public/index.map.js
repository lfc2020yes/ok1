function trim(e){return rtrim(ltrim(e))}function ltrim(e){return e.replace(/^\s+/,"")}function rtrim(e){return e.replace(/\s+$/,"")}function disableAllTheseDays(e){var t=e.getMonth(),a=e.getDate(),n=e.getFullYear();for(i=0;i<disabledDays.length;i++)if(-1!=$.inArray(t+1+"-"+a+"-"+n,disabledDays))return[!1];return[!0]}function getRandomInt(e,t){return Math.floor(Math.random()*(t-e+1))+e}function AjaxClient(e,t,i,a,n,s,r,o,l,c){if(0==r)var d=a;else d=jQuery("#"+r).serialize();var u="";null!=s&&(u="string"==typeof s?',"'+s+'"':","+s);var p=!0;if(void 0===l||(p=l),void 0===c)var h="Ajax/"+e+"/"+t+".php";else if("local"==c)h=window.location.href;else h=c;void 0!==o&&0!=o||($(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")),jQuery.ajax({url:h,type:i,dataType:"json",cache:p,data:d,success:function(e){void 0!==o&&0!=o||($(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")),window.jsozn=e,""!=jsozn.debug&&void 0!==jsozn.debug&&alert_message("error","Ошибка №"+jsozn.debug),$.globalEval(n+"(jsozn"+u+")")},error:function(e){}})}!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(f,e){function t(e,t){return t.toUpperCase()}var i=[],d=i.slice,m=i.concat,o=i.push,n=i.indexOf,a={},s=a.toString,v=a.hasOwnProperty,g={},_=f.document,r="2.1.1",w=function(e,t){return new w.fn.init(e,t)},l=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,c=/^-ms-/,u=/-([\da-z])/gi;function p(e){var t=e.length,i=w.type(e);return"function"!==i&&!w.isWindow(e)&&(!(1!==e.nodeType||!t)||("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e))}w.fn=w.prototype={jquery:r,constructor:w,selector:"",length:0,toArray:function(){return d.call(this)},get:function(e){return null!=e?e<0?this[e+this.length]:this[e]:d.call(this)},pushStack:function(e){var t=w.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return w.each(this,e,t)},map:function(i){return this.pushStack(w.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:o,sort:i.sort,splice:i.splice},w.extend=w.fn.extend=function(){var e,t,i,a,n,s,r=arguments[0]||{},o=1,l=arguments.length,c=!1;for("boolean"==typeof r&&(c=r,r=arguments[o]||{},o++),"object"==typeof r||w.isFunction(r)||(r={}),o===l&&(r=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)i=r[t],r!==(a=e[t])&&(c&&a&&(w.isPlainObject(a)||(n=w.isArray(a)))?(s=n?(n=!1,i&&w.isArray(i)?i:[]):i&&w.isPlainObject(i)?i:{},r[t]=w.extend(c,s,a)):void 0!==a&&(r[t]=a));return r},w.extend({expando:"jQuery"+(r+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===w.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){return!w.isArray(e)&&0<=e-parseFloat(e)},isPlainObject:function(e){return"object"===w.type(e)&&!e.nodeType&&!w.isWindow(e)&&!(e.constructor&&!v.call(e.constructor.prototype,"isPrototypeOf"))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?a[s.call(e)]||"object":typeof e},globalEval:function(e){var t,i=eval;(e=w.trim(e))&&(1===e.indexOf("use strict")?((t=_.createElement("script")).text=e,_.head.appendChild(t).parentNode.removeChild(t)):i(e))},camelCase:function(e){return e.replace(c,"ms-").replace(u,t)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,i){var a=0,n=e.length,s=p(e);if(i){if(s)for(;a<n&&!1!==t.apply(e[a],i);a++);else for(a in e)if(!1===t.apply(e[a],i))break}else if(s)for(;a<n&&!1!==t.call(e[a],a,e[a]);a++);else for(a in e)if(!1===t.call(e[a],a,e[a]))break;return e},trim:function(e){return null==e?"":(e+"").replace(l,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(p(Object(e))?w.merge(i,"string"==typeof e?[e]:e):o.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:n.call(t,e,i)},merge:function(e,t){for(var i=+t.length,a=0,n=e.length;a<i;a++)e[n++]=t[a];return e.length=n,e},grep:function(e,t,i){for(var a=[],n=0,s=e.length,r=!i;n<s;n++)!t(e[n],n)!=r&&a.push(e[n]);return a},map:function(e,t,i){var a,n=0,s=e.length,r=[];if(p(e))for(;n<s;n++)null!=(a=t(e[n],n,i))&&r.push(a);else for(n in e)null!=(a=t(e[n],n,i))&&r.push(a);return m.apply([],r)},guid:1,proxy:function(e,t){var i,a,n;return"string"==typeof t&&(i=e[t],t=e,e=i),w.isFunction(e)?(a=d.call(arguments,2),(n=function(){return e.apply(t||this,a.concat(d.call(arguments)))}).guid=e.guid=e.guid||w.guid++,n):void 0},now:Date.now,support:g}),w.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){a["[object "+t+"]"]=t.toLowerCase()});var h=function(i){function u(e,t,i){var a="0x"+t-65536;return a!=a||i?t:a<0?String.fromCharCode(65536+a):String.fromCharCode(a>>10|55296,1023&a|56320)}var e,f,b,s,a,m,p,v,k,c,d,g,$,n,_,y,r,o,w,x="sizzle"+-new Date,C=i.document,j=0,h=0,l=ne(),S=ne(),T=ne(),A=function(e,t){return e===t&&(d=!0),0},E="undefined",D={}.hasOwnProperty,t=[],M=t.pop,I=t.push,P=t.push,O=t.slice,F=t.indexOf||function(e){for(var t=0,i=this.length;t<i;t++)if(this[t]===e)return t;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",N="[\\x20\\t\\r\\n\\f]",R="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",B=R.replace("w","w#"),H="\\["+N+"*("+R+")(?:"+N+"*([*^$|!~]?=)"+N+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+B+"))|)"+N+"*\\]",z=":("+R+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+H+")*)|.*)\\)|)",U=new RegExp("^"+N+"+|((?:^|[^\\\\])(?:\\\\.)*)"+N+"+$","g"),q=new RegExp("^"+N+"*,"+N+"*"),W=new RegExp("^"+N+"*([>+~]|"+N+")"+N+"*"),Y=new RegExp("="+N+"*([^\\]'\"]*?)"+N+"*\\]","g"),V=new RegExp(z),G=new RegExp("^"+B+"$"),X={ID:new RegExp("^#("+R+")"),CLASS:new RegExp("^\\.("+R+")"),TAG:new RegExp("^("+R.replace("w","w*")+")"),ATTR:new RegExp("^"+H),PSEUDO:new RegExp("^"+z),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+N+"*(even|odd|(([+-]|)(\\d*)n|)"+N+"*(?:([+-]|)"+N+"*(\\d+)|))"+N+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+N+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+N+"*((?:-\\d)?\\d*)"+N+"*\\)|)(?=[^-]|$)","i")},K=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=/'|\\/g,ie=new RegExp("\\\\([\\da-f]{1,6}"+N+"?|("+N+")|.)","ig");try{P.apply(t=O.call(C.childNodes),C.childNodes),t[C.childNodes.length].nodeType}catch(e){P={apply:t.length?function(e,t){I.apply(e,O.call(t))}:function(e,t){for(var i=e.length,a=0;e[i++]=t[a++];);e.length=i-1}}}function ae(e,t,i,a){var n,s,r,o,l,c,d,u,p,h;if((t?t.ownerDocument||t:C)!==$&&g(t),i=i||[],!e||"string"!=typeof e)return i;if(1!==(o=(t=t||$).nodeType)&&9!==o)return[];if(_&&!a){if(n=J.exec(e))if(r=n[1]){if(9===o){if(!(s=t.getElementById(r))||!s.parentNode)return i;if(s.id===r)return i.push(s),i}else if(t.ownerDocument&&(s=t.ownerDocument.getElementById(r))&&w(t,s)&&s.id===r)return i.push(s),i}else{if(n[2])return P.apply(i,t.getElementsByTagName(e)),i;if((r=n[3])&&f.getElementsByClassName&&t.getElementsByClassName)return P.apply(i,t.getElementsByClassName(r)),i}if(f.qsa&&(!y||!y.test(e))){if(u=d=x,p=t,h=9===o&&e,1===o&&"object"!==t.nodeName.toLowerCase()){for(c=m(e),(d=t.getAttribute("id"))?u=d.replace(te,"\\$&"):t.setAttribute("id",u),u="[id='"+u+"'] ",l=c.length;l--;)c[l]=u+fe(c[l]);p=ee.test(e)&&pe(t.parentNode)||t,h=c.join(",")}if(h)try{return P.apply(i,p.querySelectorAll(h)),i}catch(e){}finally{d||t.removeAttribute("id")}}}return v(e.replace(U,"$1"),t,i,a)}function ne(){var a=[];return function e(t,i){return a.push(t+" ")>b.cacheLength&&delete e[a.shift()],e[t+" "]=i}}function se(e){return e[x]=!0,e}function re(e){var t=$.createElement("div");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function oe(e,t){for(var i=e.split("|"),a=e.length;a--;)b.attrHandle[i[a]]=t}function le(e,t){var i=t&&e,a=i&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||1<<31)-(~e.sourceIndex||1<<31);if(a)return a;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function ce(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function de(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function ue(r){return se(function(s){return s=+s,se(function(e,t){for(var i,a=r([],e.length,s),n=a.length;n--;)e[i=a[n]]&&(e[i]=!(t[i]=e[i]))})})}function pe(e){return e&&typeof e.getElementsByTagName!==E&&e}for(e in f=ae.support={},a=ae.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},g=ae.setDocument=function(e){var t,l=e?e.ownerDocument||e:C,i=l.defaultView;return l!==$&&9===l.nodeType&&l.documentElement?(n=($=l).documentElement,_=!a(l),i&&i!==i.top&&(i.addEventListener?i.addEventListener("unload",function(){g()},!1):i.attachEvent&&i.attachEvent("onunload",function(){g()})),f.attributes=re(function(e){return e.className="i",!e.getAttribute("className")}),f.getElementsByTagName=re(function(e){return e.appendChild(l.createComment("")),!e.getElementsByTagName("*").length}),f.getElementsByClassName=Z.test(l.getElementsByClassName)&&re(function(e){return e.innerHTML="<div class='a'></div><div class='a i'></div>",e.firstChild.className="i",2===e.getElementsByClassName("i").length}),f.getById=re(function(e){return n.appendChild(e).id=x,!l.getElementsByName||!l.getElementsByName(x).length}),f.getById?(b.find.ID=function(e,t){if(typeof t.getElementById!==E&&_){var i=t.getElementById(e);return i&&i.parentNode?[i]:[]}},b.filter.ID=function(e){var t=e.replace(ie,u);return function(e){return e.getAttribute("id")===t}}):(delete b.find.ID,b.filter.ID=function(e){var i=e.replace(ie,u);return function(e){var t=typeof e.getAttributeNode!==E&&e.getAttributeNode("id");return t&&t.value===i}}),b.find.TAG=f.getElementsByTagName?function(e,t){return typeof t.getElementsByTagName!==E?t.getElementsByTagName(e):void 0}:function(e,t){var i,a=[],n=0,s=t.getElementsByTagName(e);if("*"!==e)return s;for(;i=s[n++];)1===i.nodeType&&a.push(i);return a},b.find.CLASS=f.getElementsByClassName&&function(e,t){return typeof t.getElementsByClassName!==E&&_?t.getElementsByClassName(e):void 0},r=[],y=[],(f.qsa=Z.test(l.querySelectorAll))&&(re(function(e){e.innerHTML="<select msallowclip=''><option selected=''></option></select>",e.querySelectorAll("[msallowclip^='']").length&&y.push("[*^$]="+N+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||y.push("\\["+N+"*(?:value|"+L+")"),e.querySelectorAll(":checked").length||y.push(":checked")}),re(function(e){var t=l.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&y.push("name"+N+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||y.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),y.push(",.*:")})),(f.matchesSelector=Z.test(o=n.matches||n.webkitMatchesSelector||n.mozMatchesSelector||n.oMatchesSelector||n.msMatchesSelector))&&re(function(e){f.disconnectedMatch=o.call(e,"div"),o.call(e,"[s!='']:x"),r.push("!=",z)}),y=y.length&&new RegExp(y.join("|")),r=r.length&&new RegExp(r.join("|")),t=Z.test(n.compareDocumentPosition),w=t||Z.test(n.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,a=t&&t.parentNode;return e===a||!(!a||1!==a.nodeType||!(i.contains?i.contains(a):e.compareDocumentPosition&&16&e.compareDocumentPosition(a)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},A=t?function(e,t){if(e===t)return d=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!f.sortDetached&&t.compareDocumentPosition(e)===i?e===l||e.ownerDocument===C&&w(C,e)?-1:t===l||t.ownerDocument===C&&w(C,t)?1:c?F.call(c,e)-F.call(c,t):0:4&i?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,a=0,n=e.parentNode,s=t.parentNode,r=[e],o=[t];if(!n||!s)return e===l?-1:t===l?1:n?-1:s?1:c?F.call(c,e)-F.call(c,t):0;if(n===s)return le(e,t);for(i=e;i=i.parentNode;)r.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;r[a]===o[a];)a++;return a?le(r[a],o[a]):r[a]===C?-1:o[a]===C?1:0},l):$},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if((e.ownerDocument||e)!==$&&g(e),t=t.replace(Y,"='$1']"),!(!f.matchesSelector||!_||r&&r.test(t)||y&&y.test(t)))try{var i=o.call(e,t);if(i||f.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){}return 0<ae(t,$,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!==$&&g(e),w(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!==$&&g(e);var i=b.attrHandle[t.toLowerCase()],a=i&&D.call(b.attrHandle,t.toLowerCase())?i(e,t,!_):void 0;return void 0!==a?a:f.attributes||!_?e.getAttribute(t):(a=e.getAttributeNode(t))&&a.specified?a.value:null},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,i=[],a=0,n=0;if(d=!f.detectDuplicates,c=!f.sortStable&&e.slice(0),e.sort(A),d){for(;t=e[n++];)t===e[n]&&(a=i.push(n));for(;a--;)e.splice(i[a],1)}return c=null,e},s=ae.getText=function(e){var t,i="",a=0,n=e.nodeType;if(n){if(1===n||9===n||11===n){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=s(e)}else if(3===n||4===n)return e.nodeValue}else for(;t=e[a++];)i+=s(t);return i},(b=ae.selectors={cacheLength:50,createPseudo:se,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ie,u),e[3]=(e[3]||e[4]||e[5]||"").replace(ie,u),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return X.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&V.test(i)&&(t=m(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ie,u).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=l[e+" "];return t||(t=new RegExp("(^|"+N+")"+e+"("+N+"|$)"))&&l(e,function(e){return t.test("string"==typeof e.className&&e.className||typeof e.getAttribute!==E&&e.getAttribute("class")||"")})},ATTR:function(i,a,n){return function(e){var t=ae.attr(e,i);return null==t?"!="===a:!a||(t+="","="===a?t===n:"!="===a?t!==n:"^="===a?n&&0===t.indexOf(n):"*="===a?n&&-1<t.indexOf(n):"$="===a?n&&t.slice(-n.length)===n:"~="===a?-1<(" "+t+" ").indexOf(n):"|="===a&&(t===n||t.slice(0,n.length+1)===n+"-"))}},CHILD:function(h,e,t,f,m){var v="nth"!==h.slice(0,3),g="last"!==h.slice(-4),_="of-type"===e;return 1===f&&0===m?function(e){return!!e.parentNode}:function(e,t,i){var a,n,s,r,o,l,c=v!=g?"nextSibling":"previousSibling",d=e.parentNode,u=_&&e.nodeName.toLowerCase(),p=!i&&!_;if(d){if(v){for(;c;){for(s=e;s=s[c];)if(_?s.nodeName.toLowerCase()===u:1===s.nodeType)return!1;l=c="only"===h&&!l&&"nextSibling"}return!0}if(l=[g?d.firstChild:d.lastChild],g&&p){for(o=(a=(n=d[x]||(d[x]={}))[h]||[])[0]===j&&a[1],r=a[0]===j&&a[2],s=o&&d.childNodes[o];s=++o&&s&&s[c]||(r=o=0)||l.pop();)if(1===s.nodeType&&++r&&s===e){n[h]=[j,o,r];break}}else if(p&&(a=(e[x]||(e[x]={}))[h])&&a[0]===j)r=a[1];else for(;(s=++o&&s&&s[c]||(r=o=0)||l.pop())&&((_?s.nodeName.toLowerCase()!==u:1!==s.nodeType)||!++r||(p&&((s[x]||(s[x]={}))[h]=[j,r]),s!==e)););return(r-=m)===f||r%f==0&&0<=r/f}}},PSEUDO:function(e,s){var t,r=b.pseudos[e]||b.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return r[x]?r(s):1<r.length?(t=[e,e,"",s],b.setFilters.hasOwnProperty(e.toLowerCase())?se(function(e,t){for(var i,a=r(e,s),n=a.length;n--;)e[i=F.call(e,a[n])]=!(t[i]=a[n])}):function(e){return r(e,0,t)}):r}},pseudos:{not:se(function(e){var a=[],n=[],o=p(e.replace(U,"$1"));return o[x]?se(function(e,t,i,a){for(var n,s=o(e,null,a,[]),r=e.length;r--;)(n=s[r])&&(e[r]=!(t[r]=n))}):function(e,t,i){return a[0]=e,o(a,null,i,n),!n.pop()}}),has:se(function(t){return function(e){return 0<ae(t,e).length}}),contains:se(function(t){return function(e){return-1<(e.textContent||e.innerText||s(e)).indexOf(t)}}),lang:se(function(i){return G.test(i||"")||ae.error("unsupported lang: "+i),i=i.replace(ie,u).toLowerCase(),function(e){var t;do{if(t=_?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===n},focus:function(e){return e===$.activeElement&&(!$.hasFocus||$.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return!1===e.disabled},disabled:function(e){return!0===e.disabled},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return K.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ue(function(){return[0]}),last:ue(function(e,t){return[t-1]}),eq:ue(function(e,t,i){return[i<0?i+t:i]}),even:ue(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:ue(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:ue(function(e,t,i){for(var a=i<0?i+t:i;0<=--a;)e.push(a);return e}),gt:ue(function(e,t,i){for(var a=i<0?i+t:i;++a<t;)e.push(a);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=ce(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=de(e);function he(){}function fe(e){for(var t=0,i=e.length,a="";t<i;t++)a+=e[t].value;return a}function me(r,e,t){var o=e.dir,l=t&&"parentNode"===o,c=h++;return e.first?function(e,t,i){for(;e=e[o];)if(1===e.nodeType||l)return r(e,t,i)}:function(e,t,i){var a,n,s=[j,c];if(i){for(;e=e[o];)if((1===e.nodeType||l)&&r(e,t,i))return!0}else for(;e=e[o];)if(1===e.nodeType||l){if((a=(n=e[x]||(e[x]={}))[o])&&a[0]===j&&a[1]===c)return s[2]=a[2];if((n[o]=s)[2]=r(e,t,i))return!0}}}function ve(n){return 1<n.length?function(e,t,i){for(var a=n.length;a--;)if(!n[a](e,t,i))return!1;return!0}:n[0]}function ge(e,t,i,a,n){for(var s,r=[],o=0,l=e.length,c=null!=t;o<l;o++)!(s=e[o])||i&&!i(s,a,n)||(r.push(s),c&&t.push(o));return r}function _e(h,f,m,v,g,e){return v&&!v[x]&&(v=_e(v)),g&&!g[x]&&(g=_e(g,e)),se(function(e,t,i,a){var n,s,r,o=[],l=[],c=t.length,d=e||function(e,t,i){for(var a=0,n=t.length;a<n;a++)ae(e,t[a],i);return i}(f||"*",i.nodeType?[i]:i,[]),u=!h||!e&&f?d:ge(d,o,h,i,a),p=m?g||(e?h:c||v)?[]:t:u;if(m&&m(u,p,i,a),v)for(n=ge(p,l),v(n,[],i,a),s=n.length;s--;)(r=n[s])&&(p[l[s]]=!(u[l[s]]=r));if(e){if(g||h){if(g){for(n=[],s=p.length;s--;)(r=p[s])&&n.push(u[s]=r);g(null,p=[],n,a)}for(s=p.length;s--;)(r=p[s])&&-1<(n=g?F.call(e,r):o[s])&&(e[n]=!(t[n]=r))}}else p=ge(p===t?p.splice(c,p.length):p),g?g(null,t,p,a):P.apply(t,p)})}function ye(e){for(var a,t,i,n=e.length,s=b.relative[e[0].type],r=s||b.relative[" "],o=s?1:0,l=me(function(e){return e===a},r,!0),c=me(function(e){return-1<F.call(a,e)},r,!0),d=[function(e,t,i){return!s&&(i||t!==k)||((a=t).nodeType?l:c)(e,t,i)}];o<n;o++)if(t=b.relative[e[o].type])d=[me(ve(d),t)];else{if((t=b.filter[e[o].type].apply(null,e[o].matches))[x]){for(i=++o;i<n&&!b.relative[e[i].type];i++);return _e(1<o&&ve(d),1<o&&fe(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(U,"$1"),t,o<i&&ye(e.slice(o,i)),i<n&&ye(e=e.slice(i)),i<n&&fe(e))}d.push(t)}return ve(d)}function be(v,g){function e(e,t,i,a,n){var s,r,o,l=0,c="0",d=e&&[],u=[],p=k,h=e||y&&b.find.TAG("*",n),f=j+=null==p?1:Math.random()||.1,m=h.length;for(n&&(k=t!==$&&t);c!==m&&null!=(s=h[c]);c++){if(y&&s){for(r=0;o=v[r++];)if(o(s,t,i)){a.push(s);break}n&&(j=f)}_&&((s=!o&&s)&&l--,e&&d.push(s))}if(l+=c,_&&c!==l){for(r=0;o=g[r++];)o(d,u,t,i);if(e){if(0<l)for(;c--;)d[c]||u[c]||(u[c]=M.call(a));u=ge(u)}P.apply(a,u),n&&!e&&0<u.length&&1<l+g.length&&ae.uniqueSort(a)}return n&&(j=f,k=p),d}var _=0<g.length,y=0<v.length;return _?se(e):e}return he.prototype=b.filters=b.pseudos,b.setFilters=new he,m=ae.tokenize=function(e,t){var i,a,n,s,r,o,l,c=S[e+" "];if(c)return t?0:c.slice(0);for(r=e,o=[],l=b.preFilter;r;){for(s in i&&!(a=q.exec(r))||(a&&(r=r.slice(a[0].length)||r),o.push(n=[])),i=!1,(a=W.exec(r))&&(i=a.shift(),n.push({value:i,type:a[0].replace(U," ")}),r=r.slice(i.length)),b.filter)!(a=X[s].exec(r))||l[s]&&!(a=l[s](a))||(i=a.shift(),n.push({value:i,type:s,matches:a}),r=r.slice(i.length));if(!i)break}return t?r.length:r?ae.error(e):S(e,o).slice(0)},p=ae.compile=function(e,t){var i,a=[],n=[],s=T[e+" "];if(!s){for(i=(t=t||m(e)).length;i--;)(s=ye(t[i]))[x]?a.push(s):n.push(s);(s=T(e,be(n,a))).selector=e}return s},v=ae.select=function(e,t,i,a){var n,s,r,o,l,c="function"==typeof e&&e,d=!a&&m(e=c.selector||e);if(i=i||[],1===d.length){if(2<(s=d[0]=d[0].slice(0)).length&&"ID"===(r=s[0]).type&&f.getById&&9===t.nodeType&&_&&b.relative[s[1].type]){if(!(t=(b.find.ID(r.matches[0].replace(ie,u),t)||[])[0]))return i;c&&(t=t.parentNode),e=e.slice(s.shift().value.length)}for(n=X.needsContext.test(e)?0:s.length;n--&&(r=s[n],!b.relative[o=r.type]);)if((l=b.find[o])&&(a=l(r.matches[0].replace(ie,u),ee.test(s[0].type)&&pe(t.parentNode)||t))){if(s.splice(n,1),!(e=a.length&&fe(s)))return P.apply(i,a),i;break}}return(c||p(e,d))(a,t,!_,i,ee.test(e)&&pe(t.parentNode)||t),i},f.sortStable=x.split("").sort(A).join("")===x,f.detectDuplicates=!!d,g(),f.sortDetached=re(function(e){return 1&e.compareDocumentPosition($.createElement("div"))}),re(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||oe("type|href|height|width",function(e,t,i){return i?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),f.attributes&&re(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||oe("value",function(e,t,i){return i||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),re(function(e){return null==e.getAttribute("disabled")})||oe(L,function(e,t,i){var a;return i?void 0:!0===e[t]?t.toLowerCase():(a=e.getAttributeNode(t))&&a.specified?a.value:null}),ae}(f);w.find=h,w.expr=h.selectors,w.expr[":"]=w.expr.pseudos,w.unique=h.uniqueSort,w.text=h.getText,w.isXMLDoc=h.isXML,w.contains=h.contains;var y=w.expr.match.needsContext,b=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,k=/^.[^:#\[\.,]*$/;function $(e,i,a){if(w.isFunction(i))return w.grep(e,function(e,t){return!!i.call(e,t,e)!==a});if(i.nodeType)return w.grep(e,function(e){return e===i!==a});if("string"==typeof i){if(k.test(i))return w.filter(i,e,a);i=w.filter(i,e)}return w.grep(e,function(e){return 0<=n.call(i,e)!==a})}w.filter=function(e,t,i){var a=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===a.nodeType?w.find.matchesSelector(a,e)?[a]:[]:w.find.matches(e,w.grep(t,function(e){return 1===e.nodeType}))},w.fn.extend({find:function(e){var t,i=this.length,a=[],n=this;if("string"!=typeof e)return this.pushStack(w(e).filter(function(){for(t=0;t<i;t++)if(w.contains(n[t],this))return!0}));for(t=0;t<i;t++)w.find(e,n[t],a);return(a=this.pushStack(1<i?w.unique(a):a)).selector=this.selector?this.selector+" "+e:e,a},filter:function(e){return this.pushStack($(this,e||[],!1))},not:function(e){return this.pushStack($(this,e||[],!0))},is:function(e){return!!$(this,"string"==typeof e&&y.test(e)?w(e):e||[],!1).length}});var x,C=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;(w.fn.init=function(e,t){var i,a;if(!e)return this;if("string"!=typeof e)return e.nodeType?(this.context=this[0]=e,this.length=1,this):w.isFunction(e)?void 0!==x.ready?x.ready(e):e(w):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),w.makeArray(e,this));if(!(i="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:C.exec(e))||!i[1]&&t)return!t||t.jquery?(t||x).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof w?t[0]:t,w.merge(this,w.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:_,!0)),b.test(i[1])&&w.isPlainObject(t))for(i in t)w.isFunction(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(a=_.getElementById(i[2]))&&a.parentNode&&(this.length=1,this[0]=a),this.context=_,this.selector=e,this}).prototype=w.fn,x=w(_);var j=/^(?:parents|prev(?:Until|All))/,S={children:!0,contents:!0,next:!0,prev:!0};function T(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}w.extend({dir:function(e,t,i){for(var a=[],n=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(n&&w(e).is(i))break;a.push(e)}return a},sibling:function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}}),w.fn.extend({has:function(e){var t=w(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(w.contains(this,t[e]))return!0})},closest:function(e,t){for(var i,a=0,n=this.length,s=[],r=y.test(e)||"string"!=typeof e?w(e,t||this.context):0;a<n;a++)for(i=this[a];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&w.find.matchesSelector(i,e))){s.push(i);break}return this.pushStack(1<s.length?w.unique(s):s)},index:function(e){return e?"string"==typeof e?n.call(w(e),this[0]):n.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(w.unique(w.merge(this.get(),w(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),w.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return w.dir(e,"parentNode")},parentsUntil:function(e,t,i){return w.dir(e,"parentNode",i)},next:function(e){return T(e,"nextSibling")},prev:function(e){return T(e,"previousSibling")},nextAll:function(e){return w.dir(e,"nextSibling")},prevAll:function(e){return w.dir(e,"previousSibling")},nextUntil:function(e,t,i){return w.dir(e,"nextSibling",i)},prevUntil:function(e,t,i){return w.dir(e,"previousSibling",i)},siblings:function(e){return w.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return w.sibling(e.firstChild)},contents:function(e){return e.contentDocument||w.merge([],e.childNodes)}},function(a,n){w.fn[a]=function(e,t){var i=w.map(this,n,e);return"Until"!==a.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=w.filter(t,i)),1<this.length&&(S[a]||w.unique(i),j.test(a)&&i.reverse()),this.pushStack(i)}});var A,E=/\S+/g,D={};function M(){_.removeEventListener("DOMContentLoaded",M,!1),f.removeEventListener("load",M,!1),w.ready()}w.Callbacks=function(n){var e,i;n="string"==typeof n?D[n]||(i=D[e=n]={},w.each(e.match(E)||[],function(e,t){i[t]=!0}),i):w.extend({},n);var t,a,s,r,o,l,c=[],d=!n.once&&[],u=function(e){for(t=n.memory&&e,a=!0,l=r||0,r=0,o=c.length,s=!0;c&&l<o;l++)if(!1===c[l].apply(e[0],e[1])&&n.stopOnFalse){t=!1;break}s=!1,c&&(d?d.length&&u(d.shift()):t?c=[]:p.disable())},p={add:function(){if(c){var e=c.length;!function a(e){w.each(e,function(e,t){var i=w.type(t);"function"===i?n.unique&&p.has(t)||c.push(t):t&&t.length&&"string"!==i&&a(t)})}(arguments),s?o=c.length:t&&(r=e,u(t))}return this},remove:function(){return c&&w.each(arguments,function(e,t){for(var i;-1<(i=w.inArray(t,c,i));)c.splice(i,1),s&&(i<=o&&o--,i<=l&&l--)}),this},has:function(e){return e?-1<w.inArray(e,c):!(!c||!c.length)},empty:function(){return c=[],o=0,this},disable:function(){return c=d=t=void 0,this},disabled:function(){return!c},lock:function(){return d=void 0,t||p.disable(),this},locked:function(){return!d},fireWith:function(e,t){return!c||a&&!d||(t=[e,(t=t||[]).slice?t.slice():t],s?d.push(t):u(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!a}};return p},w.extend({Deferred:function(e){var s=[["resolve","done",w.Callbacks("once memory"),"resolved"],["reject","fail",w.Callbacks("once memory"),"rejected"],["notify","progress",w.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},then:function(){var n=arguments;return w.Deferred(function(a){w.each(s,function(e,t){var i=w.isFunction(n[e])&&n[e];o[t[1]](function(){var e=i&&i.apply(this,arguments);e&&w.isFunction(e.promise)?e.promise().done(a.resolve).fail(a.reject).progress(a.notify):a[t[0]+"With"](this===r?a.promise():this,i?[e]:arguments)})}),n=null}).promise()},promise:function(e){return null!=e?w.extend(e,r):r}},o={};return r.pipe=r.then,w.each(s,function(e,t){var i=t[2],a=t[3];r[t[1]]=i.add,a&&i.add(function(){n=a},s[1^e][2].disable,s[2][2].lock),o[t[0]]=function(){return o[t[0]+"With"](this===o?r:this,arguments),this},o[t[0]+"With"]=i.fireWith}),r.promise(o),e&&e.call(o,o),o},when:function(e){function t(t,i,a){return function(e){i[t]=this,a[t]=1<arguments.length?d.call(arguments):e,a===n?c.notifyWith(i,a):--l||c.resolveWith(i,a)}}var n,i,a,s=0,r=d.call(arguments),o=r.length,l=1!==o||e&&w.isFunction(e.promise)?o:0,c=1===l?e:w.Deferred();if(1<o)for(n=new Array(o),i=new Array(o),a=new Array(o);s<o;s++)r[s]&&w.isFunction(r[s].promise)?r[s].promise().done(t(s,a,r)).fail(c.reject).progress(t(s,i,n)):--l;return l||c.resolveWith(a,r),c.promise()}}),w.fn.ready=function(e){return w.ready.promise().done(e),this},w.extend({isReady:!1,readyWait:1,holdReady:function(e){e?w.readyWait++:w.ready(!0)},ready:function(e){(!0===e?--w.readyWait:w.isReady)||((w.isReady=!0)!==e&&0<--w.readyWait||(A.resolveWith(_,[w]),w.fn.triggerHandler&&(w(_).triggerHandler("ready"),w(_).off("ready"))))}}),w.ready.promise=function(e){return A||(A=w.Deferred(),"complete"===_.readyState?setTimeout(w.ready):(_.addEventListener("DOMContentLoaded",M,!1),f.addEventListener("load",M,!1))),A.promise(e)},w.ready.promise();var I=w.access=function(e,t,i,a,n,s,r){var o=0,l=e.length,c=null==i;if("object"===w.type(i))for(o in n=!0,i)w.access(e,t,o,i[o],!0,s,r);else if(void 0!==a&&(n=!0,w.isFunction(a)||(r=!0),c&&(t=r?(t.call(e,a),null):(c=t,function(e,t,i){return c.call(w(e),i)})),t))for(;o<l;o++)t(e[o],i,r?a:a.call(e[o],o,t(e[o],i)));return n?e:c?t.call(e):l?t(e[0],i):s};function P(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=w.expando+Math.random()}w.acceptData=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType},P.uid=1,P.accepts=w.acceptData,P.prototype={key:function(t){if(!P.accepts(t))return 0;var i={},a=t[this.expando];if(!a){a=P.uid++;try{i[this.expando]={value:a},Object.defineProperties(t,i)}catch(e){i[this.expando]=a,w.extend(t,i)}}return this.cache[a]||(this.cache[a]={}),a},set:function(e,t,i){var a,n=this.key(e),s=this.cache[n];if("string"==typeof t)s[t]=i;else if(w.isEmptyObject(s))w.extend(this.cache[n],t);else for(a in t)s[a]=t[a];return s},get:function(e,t){var i=this.cache[this.key(e)];return void 0===t?i:i[t]},access:function(e,t,i){var a;return void 0===t||t&&"string"==typeof t&&void 0===i?void 0!==(a=this.get(e,t))?a:this.get(e,w.camelCase(t)):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,a,n,s=this.key(e),r=this.cache[s];if(void 0===t)this.cache[s]={};else{i=(a=w.isArray(t)?t.concat(t.map(w.camelCase)):(n=w.camelCase(t),t in r?[t,n]:(a=n)in r?[a]:a.match(E)||[])).length;for(;i--;)delete r[a[i]]}},hasData:function(e){return!w.isEmptyObject(this.cache[e[this.expando]]||{})},discard:function(e){e[this.expando]&&delete this.cache[e[this.expando]]}};var O=new P,F=new P,L=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/([A-Z])/g;function R(e,t,i){var a;if(void 0===i&&1===e.nodeType)if(a="data-"+t.replace(N,"-$1").toLowerCase(),"string"==typeof(i=e.getAttribute(a))){try{i="true"===i||"false"!==i&&("null"===i?null:+i+""===i?+i:L.test(i)?w.parseJSON(i):i)}catch(e){}F.set(e,t,i)}else i=void 0;return i}w.extend({hasData:function(e){return F.hasData(e)||O.hasData(e)},data:function(e,t,i){return F.access(e,t,i)},removeData:function(e,t){F.remove(e,t)},_data:function(e,t,i){return O.access(e,t,i)},_removeData:function(e,t){O.remove(e,t)}}),w.fn.extend({data:function(a,e){var t,i,n,s=this[0],r=s&&s.attributes;if(void 0!==a)return"object"==typeof a?this.each(function(){F.set(this,a)}):I(this,function(t){var e,i=w.camelCase(a);if(s&&void 0===t){if(void 0!==(e=F.get(s,a)))return e;if(void 0!==(e=F.get(s,i)))return e;if(void 0!==(e=R(s,i,void 0)))return e}else this.each(function(){var e=F.get(this,i);F.set(this,i,t),-1!==a.indexOf("-")&&void 0!==e&&F.set(this,a,t)})},null,e,1<arguments.length,null,!0);if(this.length&&(n=F.get(s),1===s.nodeType&&!O.get(s,"hasDataAttrs"))){for(t=r.length;t--;)r[t]&&(0===(i=r[t].name).indexOf("data-")&&(i=w.camelCase(i.slice(5)),R(s,i,n[i])));O.set(s,"hasDataAttrs",!0)}return n},removeData:function(e){return this.each(function(){F.remove(this,e)})}}),w.extend({queue:function(e,t,i){var a;return e?(t=(t||"fx")+"queue",a=O.get(e,t),i&&(!a||w.isArray(i)?a=O.access(e,t,w.makeArray(i)):a.push(i)),a||[]):void 0},dequeue:function(e,t){t=t||"fx";var i=w.queue(e,t),a=i.length,n=i.shift(),s=w._queueHooks(e,t);"inprogress"===n&&(n=i.shift(),a--),n&&("fx"===t&&i.unshift("inprogress"),delete s.stop,n.call(e,function(){w.dequeue(e,t)},s)),!a&&s&&s.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return O.get(e,i)||O.access(e,i,{empty:w.Callbacks("once memory").add(function(){O.remove(e,[t+"queue",i])})})}}),w.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?w.queue(this[0],t):void 0===i?this:this.each(function(){var e=w.queue(this,t,i);w._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&w.dequeue(this,t)})},dequeue:function(e){return this.each(function(){w.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--n||s.resolveWith(r,[r])}var a,n=1,s=w.Deferred(),r=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(a=O.get(r[o],e+"queueHooks"))&&a.empty&&(n++,a.empty.add(i));return i(),s.promise(t)}});function B(e,t){return e=t||e,"none"===w.css(e,"display")||!w.contains(e.ownerDocument,e)}var H,z,U=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,q=["Top","Right","Bottom","Left"],W=/^(?:checkbox|radio)$/i;H=_.createDocumentFragment().appendChild(_.createElement("div")),(z=_.createElement("input")).setAttribute("type","radio"),z.setAttribute("checked","checked"),z.setAttribute("name","t"),H.appendChild(z),g.checkClone=H.cloneNode(!0).cloneNode(!0).lastChild.checked,H.innerHTML="<textarea>x</textarea>",g.noCloneChecked=!!H.cloneNode(!0).lastChild.defaultValue;var Y="undefined";g.focusinBubbles="onfocusin"in f;var V=/^key/,G=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,K=/^([^.]*)(?:\.(.+)|)$/;function Q(){return!0}function Z(){return!1}function J(){try{return _.activeElement}catch(e){}}w.event={global:{},add:function(t,e,i,a,n){var s,r,o,l,c,d,u,p,h,f,m,v=O.get(t);if(v)for(i.handler&&(i=(s=i).handler,n=s.selector),i.guid||(i.guid=w.guid++),(l=v.events)||(l=v.events={}),(r=v.handle)||(r=v.handle=function(e){return typeof w!=Y&&w.event.triggered!==e.type?w.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(E)||[""]).length;c--;)h=m=(o=K.exec(e[c])||[])[1],f=(o[2]||"").split(".").sort(),h&&(u=w.event.special[h]||{},h=(n?u.delegateType:u.bindType)||h,u=w.event.special[h]||{},d=w.extend({type:h,origType:m,data:a,handler:i,guid:i.guid,selector:n,needsContext:n&&w.expr.match.needsContext.test(n),namespace:f.join(".")},s),(p=l[h])||((p=l[h]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,a,f,r)||t.addEventListener&&t.addEventListener(h,r,!1)),u.add&&(u.add.call(t,d),d.handler.guid||(d.handler.guid=i.guid)),n?p.splice(p.delegateCount++,0,d):p.push(d),w.event.global[h]=!0)},remove:function(e,t,i,a,n){var s,r,o,l,c,d,u,p,h,f,m,v=O.hasData(e)&&O.get(e);if(v&&(l=v.events)){for(c=(t=(t||"").match(E)||[""]).length;c--;)if(h=m=(o=K.exec(t[c])||[])[1],f=(o[2]||"").split(".").sort(),h){for(u=w.event.special[h]||{},p=l[h=(a?u.delegateType:u.bindType)||h]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=s=p.length;s--;)d=p[s],!n&&m!==d.origType||i&&i.guid!==d.guid||o&&!o.test(d.namespace)||a&&a!==d.selector&&("**"!==a||!d.selector)||(p.splice(s,1),d.selector&&p.delegateCount--,u.remove&&u.remove.call(e,d));r&&!p.length&&(u.teardown&&!1!==u.teardown.call(e,f,v.handle)||w.removeEvent(e,h,v.handle),delete l[h])}else for(h in l)w.event.remove(e,h+t[c],i,a,!0);w.isEmptyObject(l)&&(delete v.handle,O.remove(e,"events"))}},trigger:function(e,t,i,a){var n,s,r,o,l,c,d,u=[i||_],p=v.call(e,"type")?e.type:e,h=v.call(e,"namespace")?e.namespace.split("."):[];if(s=r=i=i||_,3!==i.nodeType&&8!==i.nodeType&&!X.test(p+w.event.triggered)&&(0<=p.indexOf(".")&&(p=(h=p.split(".")).shift(),h.sort()),l=p.indexOf(":")<0&&"on"+p,(e=e[w.expando]?e:new w.Event(p,"object"==typeof e&&e)).isTrigger=a?2:3,e.namespace=h.join("."),e.namespace_re=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:w.makeArray(t,[e]),d=w.event.special[p]||{},a||!d.trigger||!1!==d.trigger.apply(i,t))){if(!a&&!d.noBubble&&!w.isWindow(i)){for(o=d.delegateType||p,X.test(o+p)||(s=s.parentNode);s;s=s.parentNode)u.push(s),r=s;r===(i.ownerDocument||_)&&u.push(r.defaultView||r.parentWindow||f)}for(n=0;(s=u[n++])&&!e.isPropagationStopped();)e.type=1<n?o:d.bindType||p,(c=(O.get(s,"events")||{})[e.type]&&O.get(s,"handle"))&&c.apply(s,t),(c=l&&s[l])&&c.apply&&w.acceptData(s)&&(e.result=c.apply(s,t),!1===e.result&&e.preventDefault());return e.type=p,a||e.isDefaultPrevented()||d._default&&!1!==d._default.apply(u.pop(),t)||!w.acceptData(i)||l&&w.isFunction(i[p])&&!w.isWindow(i)&&((r=i[l])&&(i[l]=null),i[w.event.triggered=p](),w.event.triggered=void 0,r&&(i[l]=r)),e.result}},dispatch:function(e){e=w.event.fix(e);var t,i,a,n,s,r=[],o=d.call(arguments),l=(O.get(this,"events")||{})[e.type]||[],c=w.event.special[e.type]||{};if((o[0]=e).delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,e)){for(r=w.event.handlers.call(this,e,l),t=0;(n=r[t++])&&!e.isPropagationStopped();)for(e.currentTarget=n.elem,i=0;(s=n.handlers[i++])&&!e.isImmediatePropagationStopped();)e.namespace_re&&!e.namespace_re.test(s.namespace)||(e.handleObj=s,e.data=s.data,void 0!==(a=((w.event.special[s.origType]||{}).handle||s.handler).apply(n.elem,o))&&!1===(e.result=a)&&(e.preventDefault(),e.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,t){var i,a,n,s,r=[],o=t.delegateCount,l=e.target;if(o&&l.nodeType&&(!e.button||"click"!==e.type))for(;l!==this;l=l.parentNode||this)if(!0!==l.disabled||"click"!==e.type){for(a=[],i=0;i<o;i++)void 0===a[n=(s=t[i]).selector+" "]&&(a[n]=s.needsContext?0<=w(n,this).index(l):w.find(n,this,null,[l]).length),a[n]&&a.push(s);a.length&&r.push({elem:l,handlers:a})}return o<t.length&&r.push({elem:this,handlers:t.slice(o)}),r},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var i,a,n,s=t.button;return null==e.pageX&&null!=t.clientX&&(a=(i=e.target.ownerDocument||_).documentElement,n=i.body,e.pageX=t.clientX+(a&&a.scrollLeft||n&&n.scrollLeft||0)-(a&&a.clientLeft||n&&n.clientLeft||0),e.pageY=t.clientY+(a&&a.scrollTop||n&&n.scrollTop||0)-(a&&a.clientTop||n&&n.clientTop||0)),e.which||void 0===s||(e.which=1&s?1:2&s?3:4&s?2:0),e}},fix:function(e){if(e[w.expando])return e;var t,i,a,n=e.type,s=e,r=this.fixHooks[n];for(r||(this.fixHooks[n]=r=G.test(n)?this.mouseHooks:V.test(n)?this.keyHooks:{}),a=r.props?this.props.concat(r.props):this.props,e=new w.Event(s),t=a.length;t--;)e[i=a[t]]=s[i];return e.target||(e.target=_),3===e.target.nodeType&&(e.target=e.target.parentNode),r.filter?r.filter(e,s):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==J()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===J()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&w.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return w.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,i,a){var n=w.extend(new w.Event,i,{type:e,isSimulated:!0,originalEvent:{}});a?w.event.trigger(n,null,t):w.event.dispatch.call(t,n),n.isDefaultPrevented()&&i.preventDefault()}},w.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i,!1)},w.Event=function(e,t){return this instanceof w.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Q:Z):this.type=e,t&&w.extend(this,t),this.timeStamp=e&&e.timeStamp||w.now(),void(this[w.expando]=!0)):new w.Event(e,t)},w.Event.prototype={isDefaultPrevented:Z,isPropagationStopped:Z,isImmediatePropagationStopped:Z,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Q,e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Q,e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Q,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},w.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,n){w.event.special[e]={delegateType:n,bindType:n,handle:function(e){var t,i=e.relatedTarget,a=e.handleObj;return i&&(i===this||w.contains(this,i))||(e.type=a.origType,t=a.handler.apply(this,arguments),e.type=n),t}}}),g.focusinBubbles||w.each({focus:"focusin",blur:"focusout"},function(i,a){function n(e){w.event.simulate(a,e.target,w.event.fix(e),!0)}w.event.special[a]={setup:function(){var e=this.ownerDocument||this,t=O.access(e,a);t||e.addEventListener(i,n,!0),O.access(e,a,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=O.access(e,a)-1;t?O.access(e,a,t):(e.removeEventListener(i,n,!0),O.remove(e,a))}}}),w.fn.extend({on:function(e,t,i,a,n){var s,r;if("object"==typeof e){for(r in"string"!=typeof t&&(i=i||t,t=void 0),e)this.on(r,t,i,e[r],n);return this}if(null==i&&null==a?(a=t,i=t=void 0):null==a&&("string"==typeof t?(a=i,i=void 0):(a=i,i=t,t=void 0)),!1===a)a=Z;else if(!a)return this;return 1===n&&(s=a,(a=function(e){return w().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=w.guid++)),this.each(function(){w.event.add(this,e,a,i,t)})},one:function(e,t,i,a){return this.on(e,t,i,a,1)},off:function(e,t,i){var a,n;if(e&&e.preventDefault&&e.handleObj)return a=e.handleObj,w(e.delegateTarget).off(a.namespace?a.origType+"."+a.namespace:a.origType,a.selector,a.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Z),this.each(function(){w.event.remove(this,e,i,t)});for(n in e)this.off(n,t,e[n]);return this},trigger:function(e,t){return this.each(function(){w.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];return i?w.event.trigger(e,t,i,!0):void 0}});var ee=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,te=/<([\w:]+)/,ie=/<|&#?\w+;/,ae=/<(?:script|style|link)/i,ne=/checked\s*(?:[^=]|=\s*.checked.)/i,se=/^$|\/(?:java|ecma)script/i,re=/^true\/(.*)/,oe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,le={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ce(e,t){return w.nodeName(e,"table")&&w.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function de(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function ue(e){var t=re.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function pe(e,t){for(var i=0,a=e.length;i<a;i++)O.set(e[i],"globalEval",!t||O.get(t[i],"globalEval"))}function he(e,t){var i,a,n,s,r,o,l,c;if(1===t.nodeType){if(O.hasData(e)&&(s=O.access(e),r=O.set(t,s),c=s.events))for(n in delete r.handle,r.events={},c)for(i=0,a=c[n].length;i<a;i++)w.event.add(t,n,c[n][i]);F.hasData(e)&&(o=F.access(e),l=w.extend({},o),F.set(t,l))}}function fe(e,t){var i=e.getElementsByTagName?e.getElementsByTagName(t||"*"):e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&w.nodeName(e,t)?w.merge([e],i):i}le.optgroup=le.option,le.tbody=le.tfoot=le.colgroup=le.caption=le.thead,le.th=le.td,w.extend({clone:function(e,t,i){var a,n,s,r,o,l,c,d=e.cloneNode(!0),u=w.contains(e.ownerDocument,e);if(!(g.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||w.isXMLDoc(e)))for(r=fe(d),a=0,n=(s=fe(e)).length;a<n;a++)o=s[a],l=r[a],"input"===(c=l.nodeName.toLowerCase())&&W.test(o.type)?l.checked=o.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=o.defaultValue);if(t)if(i)for(s=s||fe(e),r=r||fe(d),a=0,n=s.length;a<n;a++)he(s[a],r[a]);else he(e,d);return 0<(r=fe(d,"script")).length&&pe(r,!u&&fe(e,"script")),d},buildFragment:function(e,t,i,a){for(var n,s,r,o,l,c,d=t.createDocumentFragment(),u=[],p=0,h=e.length;p<h;p++)if((n=e[p])||0===n)if("object"===w.type(n))w.merge(u,n.nodeType?[n]:n);else if(ie.test(n)){for(s=s||d.appendChild(t.createElement("div")),r=(te.exec(n)||["",""])[1].toLowerCase(),o=le[r]||le._default,s.innerHTML=o[1]+n.replace(ee,"<$1><$2>")+o[2],c=o[0];c--;)s=s.lastChild;w.merge(u,s.childNodes),(s=d.firstChild).textContent=""}else u.push(t.createTextNode(n));for(d.textContent="",p=0;n=u[p++];)if((!a||-1===w.inArray(n,a))&&(l=w.contains(n.ownerDocument,n),s=fe(d.appendChild(n),"script"),l&&pe(s),i))for(c=0;n=s[c++];)se.test(n.type||"")&&i.push(n);return d},cleanData:function(e){for(var t,i,a,n,s=w.event.special,r=0;void 0!==(i=e[r]);r++){if(w.acceptData(i)&&((n=i[O.expando])&&(t=O.cache[n]))){if(t.events)for(a in t.events)s[a]?w.event.remove(i,a):w.removeEvent(i,a,t.handle);O.cache[n]&&delete O.cache[n]}delete F.cache[i[F.expando]]}}}),w.fn.extend({text:function(e){return I(this,function(e){return void 0===e?w.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||ce(this,e).appendChild(e)})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=ce(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var i,a=e?w.filter(e,this):this,n=0;null!=(i=a[n]);n++)t||1!==i.nodeType||w.cleanData(fe(i)),i.parentNode&&(t&&w.contains(i.ownerDocument,i)&&pe(fe(i,"script")),i.parentNode.removeChild(i));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(w.cleanData(fe(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return w.clone(this,e,t)})},html:function(e){return I(this,function(e){var t=this[0]||{},i=0,a=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!ae.test(e)&&!le[(te.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(ee,"<$1><$2>");try{for(;i<a;i++)1===(t=this[i]||{}).nodeType&&(w.cleanData(fe(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var t=arguments[0];return this.domManip(arguments,function(e){t=this.parentNode,w.cleanData(fe(this)),t&&t.replaceChild(e,this)}),t&&(t.length||t.nodeType)?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(i,a){i=m.apply([],i);var e,t,n,s,r,o,l=0,c=this.length,d=this,u=c-1,p=i[0],h=w.isFunction(p);if(h||1<c&&"string"==typeof p&&!g.checkClone&&ne.test(p))return this.each(function(e){var t=d.eq(e);h&&(i[0]=p.call(this,e,t.html())),t.domManip(i,a)});if(c&&(t=(e=w.buildFragment(i,this[0].ownerDocument,!1,this)).firstChild,1===e.childNodes.length&&(e=t),t)){for(s=(n=w.map(fe(e,"script"),de)).length;l<c;l++)r=e,l!==u&&(r=w.clone(r,!0,!0),s&&w.merge(n,fe(r,"script"))),a.call(this[l],r,l);if(s)for(o=n[n.length-1].ownerDocument,w.map(n,ue),l=0;l<s;l++)r=n[l],se.test(r.type||"")&&!O.access(r,"globalEval")&&w.contains(o,r)&&(r.src?w._evalUrl&&w._evalUrl(r.src):w.globalEval(r.textContent.replace(oe,"")))}return this}}),w.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,r){w.fn[e]=function(e){for(var t,i=[],a=w(e),n=a.length-1,s=0;s<=n;s++)t=s===n?this:this.clone(!0),w(a[s])[r](t),o.apply(i,t.get());return this.pushStack(i)}});var me,ve={};function ge(e,t){var i,a=w(t.createElement(e)).appendTo(t.body),n=f.getDefaultComputedStyle&&(i=f.getDefaultComputedStyle(a[0]))?i.display:w.css(a[0],"display");return a.detach(),n}function _e(e){var t=_,i=ve[e];return i||("none"!==(i=ge(e,t))&&i||((t=(me=(me||w("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement))[0].contentDocument).write(),t.close(),i=ge(e,t),me.detach()),ve[e]=i),i}var ye=/^margin/,be=new RegExp("^("+U+")(?!px)[a-z%]+$","i"),ke=function(e){return e.ownerDocument.defaultView.getComputedStyle(e,null)};function $e(e,t,i){var a,n,s,r,o=e.style;return(i=i||ke(e))&&(r=i.getPropertyValue(t)||i[t]),i&&(""!==r||w.contains(e.ownerDocument,e)||(r=w.style(e,t)),be.test(r)&&ye.test(t)&&(a=o.width,n=o.minWidth,s=o.maxWidth,o.minWidth=o.maxWidth=o.width=r,r=i.width,o.width=a,o.minWidth=n,o.maxWidth=s)),void 0!==r?r+"":r}function we(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}!function(){var t,i,a=_.documentElement,n=_.createElement("div"),s=_.createElement("div");if(s.style){function e(){s.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",s.innerHTML="",a.appendChild(n);var e=f.getComputedStyle(s,null);t="1%"!==e.top,i="4px"===e.width,a.removeChild(n)}s.style.backgroundClip="content-box",s.cloneNode(!0).style.backgroundClip="",g.clearCloneStyle="content-box"===s.style.backgroundClip,n.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",n.appendChild(s),f.getComputedStyle&&w.extend(g,{pixelPosition:function(){return e(),t},boxSizingReliable:function(){return null==i&&e(),i},reliableMarginRight:function(){var e,t=s.appendChild(_.createElement("div"));return t.style.cssText=s.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",t.style.marginRight=t.style.width="0",s.style.width="1px",a.appendChild(n),e=!parseFloat(f.getComputedStyle(t,null).marginRight),a.removeChild(n),e}})}}(),w.swap=function(e,t,i,a){var n,s,r={};for(s in t)r[s]=e.style[s],e.style[s]=t[s];for(s in n=i.apply(e,a||[]),t)e.style[s]=r[s];return n};var xe=/^(none|table(?!-c[ea]).+)/,Ce=new RegExp("^("+U+")(.*)$","i"),je=new RegExp("^([+-])=("+U+")","i"),Se={position:"absolute",visibility:"hidden",display:"block"},Te={letterSpacing:"0",fontWeight:"400"},Ae=["Webkit","O","Moz","ms"];function Ee(e,t){if(t in e)return t;for(var i=t[0].toUpperCase()+t.slice(1),a=t,n=Ae.length;n--;)if((t=Ae[n]+i)in e)return t;return a}function De(e,t,i){var a=Ce.exec(t);return a?Math.max(0,a[1]-(i||0))+(a[2]||"px"):t}function Me(e,t,i,a,n){for(var s=i===(a?"border":"content")?4:"width"===t?1:0,r=0;s<4;s+=2)"margin"===i&&(r+=w.css(e,i+q[s],!0,n)),a?("content"===i&&(r-=w.css(e,"padding"+q[s],!0,n)),"margin"!==i&&(r-=w.css(e,"border"+q[s]+"Width",!0,n))):(r+=w.css(e,"padding"+q[s],!0,n),"padding"!==i&&(r+=w.css(e,"border"+q[s]+"Width",!0,n)));return r}function Ie(e,t,i){var a=!0,n="width"===t?e.offsetWidth:e.offsetHeight,s=ke(e),r="border-box"===w.css(e,"boxSizing",!1,s);if(n<=0||null==n){if(((n=$e(e,t,s))<0||null==n)&&(n=e.style[t]),be.test(n))return n;a=r&&(g.boxSizingReliable()||n===e.style[t]),n=parseFloat(n)||0}return n+Me(e,t,i||(r?"border":"content"),a,s)+"px"}function Pe(e,t){for(var i,a,n,s=[],r=0,o=e.length;r<o;r++)(a=e[r]).style&&(s[r]=O.get(a,"olddisplay"),i=a.style.display,t?(s[r]||"none"!==i||(a.style.display=""),""===a.style.display&&B(a)&&(s[r]=O.access(a,"olddisplay",_e(a.nodeName)))):(n=B(a),"none"===i&&n||O.set(a,"olddisplay",n?i:w.css(a,"display"))));for(r=0;r<o;r++)(a=e[r]).style&&(t&&"none"!==a.style.display&&""!==a.style.display||(a.style.display=t?s[r]||"":"none"));return e}function Oe(e,t,i,a,n){return new Oe.prototype.init(e,t,i,a,n)}w.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=$e(e,"opacity");return""===i?"1":i}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(e,t,i,a){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var n,s,r,o=w.camelCase(t),l=e.style;return t=w.cssProps[o]||(w.cssProps[o]=Ee(l,o)),r=w.cssHooks[t]||w.cssHooks[o],void 0===i?r&&"get"in r&&void 0!==(n=r.get(e,!1,a))?n:l[t]:("string"===(s=typeof i)&&(n=je.exec(i))&&(i=(n[1]+1)*n[2]+parseFloat(w.css(e,t)),s="number"),void(null!=i&&i==i&&("number"!==s||w.cssNumber[o]||(i+="px"),g.clearCloneStyle||""!==i||0!==t.indexOf("background")||(l[t]="inherit"),r&&"set"in r&&void 0===(i=r.set(e,i,a))||(l[t]=i))))}},css:function(e,t,i,a){var n,s,r,o=w.camelCase(t);return t=w.cssProps[o]||(w.cssProps[o]=Ee(e.style,o)),(r=w.cssHooks[t]||w.cssHooks[o])&&"get"in r&&(n=r.get(e,!0,i)),void 0===n&&(n=$e(e,t,a)),"normal"===n&&t in Te&&(n=Te[t]),""===i||i?(s=parseFloat(n),!0===i||w.isNumeric(s)?s||0:n):n}}),w.each(["height","width"],function(e,n){w.cssHooks[n]={get:function(e,t,i){return t?xe.test(w.css(e,"display"))&&0===e.offsetWidth?w.swap(e,Se,function(){return Ie(e,n,i)}):Ie(e,n,i):void 0},set:function(e,t,i){var a=i&&ke(e);return De(0,t,i?Me(e,n,i,"border-box"===w.css(e,"boxSizing",!1,a),a):0)}}}),w.cssHooks.marginRight=we(g.reliableMarginRight,function(e,t){return t?w.swap(e,{display:"inline-block"},$e,[e,"marginRight"]):void 0}),w.each({margin:"",padding:"",border:"Width"},function(n,s){w.cssHooks[n+s]={expand:function(e){for(var t=0,i={},a="string"==typeof e?e.split(" "):[e];t<4;t++)i[n+q[t]+s]=a[t]||a[t-2]||a[0];return i}},ye.test(n)||(w.cssHooks[n+s].set=De)}),w.fn.extend({css:function(e,t){return I(this,function(e,t,i){var a,n,s={},r=0;if(w.isArray(t)){for(a=ke(e),n=t.length;r<n;r++)s[t[r]]=w.css(e,t[r],!1,a);return s}return void 0!==i?w.style(e,t,i):w.css(e,t)},e,t,1<arguments.length)},show:function(){return Pe(this,!0)},hide:function(){return Pe(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){B(this)?w(this).show():w(this).hide()})}}),((w.Tween=Oe).prototype={constructor:Oe,init:function(e,t,i,a,n,s){this.elem=e,this.prop=i,this.easing=n||"swing",this.options=t,this.start=this.now=this.cur(),this.end=a,this.unit=s||(w.cssNumber[i]?"":"px")},cur:function(){var e=Oe.propHooks[this.prop];return e&&e.get?e.get(this):Oe.propHooks._default.get(this)},run:function(e){var t,i=Oe.propHooks[this.prop];return this.pos=t=this.options.duration?w.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):Oe.propHooks._default.set(this),this}}).init.prototype=Oe.prototype,(Oe.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=w.css(e.elem,e.prop,""))&&"auto"!==t?t:0:e.elem[e.prop]},set:function(e){w.fx.step[e.prop]?w.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[w.cssProps[e.prop]]||w.cssHooks[e.prop])?w.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}}).scrollTop=Oe.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},w.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},w.fx=Oe.prototype.init,w.fx.step={};var Fe,Le,Ne,Re,Be,He=/^(?:toggle|show|hide)$/,ze=new RegExp("^(?:([+-])=|)("+U+")([a-z%]*)$","i"),Ue=/queueHooks$/,qe=[function(t,e,i){var a,n,s,r,o,l,c,d=this,u={},p=t.style,h=t.nodeType&&B(t),f=O.get(t,"fxshow");for(a in i.queue||(null==(o=w._queueHooks(t,"fx")).unqueued&&(o.unqueued=0,l=o.empty.fire,o.empty.fire=function(){o.unqueued||l()}),o.unqueued++,d.always(function(){d.always(function(){o.unqueued--,w.queue(t,"fx").length||o.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],c=w.css(t,"display"),"inline"===("none"===c?O.get(t,"olddisplay")||_e(t.nodeName):c)&&"none"===w.css(t,"float")&&(p.display="inline-block")),i.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]})),e)if(n=e[a],He.exec(n)){if(delete e[a],s=s||"toggle"===n,n===(h?"hide":"show")){if("show"!==n||!f||void 0===f[a])continue;h=!0}u[a]=f&&f[a]||w.style(t,a)}else c=void 0;if(w.isEmptyObject(u))"inline"===("none"===c?_e(t.nodeName):c)&&(p.display=c);else for(a in f?"hidden"in f&&(h=f.hidden):f=O.access(t,"fxshow",{}),s&&(f.hidden=!h),h?w(t).show():d.done(function(){w(t).hide()}),d.done(function(){var e;for(e in O.remove(t,"fxshow"),u)w.style(t,e,u[e])}),u)r=Ge(h?f[a]:0,a,d),a in f||(f[a]=r.start,h&&(r.end=r.start,r.start="width"===a||"height"===a?1:0))}],We={"*":[function(e,t){var i=this.createTween(e,t),a=i.cur(),n=ze.exec(t),s=n&&n[3]||(w.cssNumber[e]?"":"px"),r=(w.cssNumber[e]||"px"!==s&&+a)&&ze.exec(w.css(i.elem,e)),o=1,l=20;if(r&&r[3]!==s)for(s=s||r[3],n=n||[],r=+a||1;r/=o=o||".5",w.style(i.elem,e,r+s),o!==(o=i.cur()/a)&&1!==o&&--l;);return n&&(r=i.start=+r||+a||0,i.unit=s,i.end=n[1]?r+(n[1]+1)*n[2]:+n[2]),i}]};function Ye(){return setTimeout(function(){Fe=void 0}),Fe=w.now()}function Ve(e,t){var i,a=0,n={height:e};for(t=t?1:0;a<4;a+=2-t)n["margin"+(i=q[a])]=n["padding"+i]=e;return t&&(n.opacity=n.width=e),n}function Ge(e,t,i){for(var a,n=(We[t]||[]).concat(We["*"]),s=0,r=n.length;s<r;s++)if(a=n[s].call(i,t,e))return a}function Xe(s,e,t){var i,r,a=0,n=qe.length,o=w.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=Fe||Ye(),t=Math.max(0,c.startTime+c.duration-e),i=1-(t/c.duration||0),a=0,n=c.tweens.length;a<n;a++)c.tweens[a].run(i);return o.notifyWith(s,[c,i,t]),i<1&&n?t:(o.resolveWith(s,[c]),!1)},c=o.promise({elem:s,props:w.extend({},e),opts:w.extend(!0,{specialEasing:{}},t),originalProperties:e,originalOptions:t,startTime:Fe||Ye(),duration:t.duration,tweens:[],createTween:function(e,t){var i=w.Tween(s,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(i),i},stop:function(e){var t=0,i=e?c.tweens.length:0;if(r)return this;for(r=!0;t<i;t++)c.tweens[t].run(1);return e?o.resolveWith(s,[c,e]):o.rejectWith(s,[c,e]),this}}),d=c.props;for(function(e,t){var i,a,n,s,r;for(i in e)if(n=t[a=w.camelCase(i)],s=e[i],w.isArray(s)&&(n=s[1],s=e[i]=s[0]),i!==a&&(e[a]=s,delete e[i]),(r=w.cssHooks[a])&&"expand"in r)for(i in s=r.expand(s),delete e[a],s)i in e||(e[i]=s[i],t[i]=n);else t[a]=n}(d,c.opts.specialEasing);a<n;a++)if(i=qe[a].call(c,s,d,c.opts))return i;return w.map(d,Ge,c),w.isFunction(c.opts.start)&&c.opts.start.call(s,c),w.fx.timer(w.extend(l,{elem:s,anim:c,queue:c.opts.queue})),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always)}w.Animation=w.extend(Xe,{tweener:function(e,t){for(var i,a=0,n=(e=w.isFunction(e)?(t=e,["*"]):e.split(" ")).length;a<n;a++)i=e[a],We[i]=We[i]||[],We[i].unshift(t)},prefilter:function(e,t){t?qe.unshift(e):qe.push(e)}}),w.speed=function(e,t,i){var a=e&&"object"==typeof e?w.extend({},e):{complete:i||!i&&t||w.isFunction(e)&&e,duration:e,easing:i&&t||t&&!w.isFunction(t)&&t};return a.duration=w.fx.off?0:"number"==typeof a.duration?a.duration:a.duration in w.fx.speeds?w.fx.speeds[a.duration]:w.fx.speeds._default,null!=a.queue&&!0!==a.queue||(a.queue="fx"),a.old=a.complete,a.complete=function(){w.isFunction(a.old)&&a.old.call(this),a.queue&&w.dequeue(this,a.queue)},a},w.fn.extend({fadeTo:function(e,t,i,a){return this.filter(B).css("opacity",0).show().end().animate({opacity:t},e,i,a)},animate:function(t,e,i,a){function n(){var e=Xe(this,w.extend({},t),r);(s||O.get(this,"finish"))&&e.stop(!0)}var s=w.isEmptyObject(t),r=w.speed(e,i,a);return n.finish=n,s||!1===r.queue?this.each(n):this.queue(r.queue,n)},stop:function(n,e,s){function r(e){var t=e.stop;delete e.stop,t(s)}return"string"!=typeof n&&(s=e,e=n,n=void 0),e&&!1!==n&&this.queue(n||"fx",[]),this.each(function(){var e=!0,t=null!=n&&n+"queueHooks",i=w.timers,a=O.get(this);if(t)a[t]&&a[t].stop&&r(a[t]);else for(t in a)a[t]&&a[t].stop&&Ue.test(t)&&r(a[t]);for(t=i.length;t--;)i[t].elem!==this||null!=n&&i[t].queue!==n||(i[t].anim.stop(s),e=!1,i.splice(t,1));!e&&s||w.dequeue(this,n)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var e,t=O.get(this),i=t[r+"queue"],a=t[r+"queueHooks"],n=w.timers,s=i?i.length:0;for(t.finish=!0,w.queue(this,r,[]),a&&a.stop&&a.stop.call(this,!0),e=n.length;e--;)n[e].elem===this&&n[e].queue===r&&(n[e].anim.stop(!0),n.splice(e,1));for(e=0;e<s;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),w.each(["toggle","show","hide"],function(e,a){var n=w.fn[a];w.fn[a]=function(e,t,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(Ve(a,!0),e,t,i)}}),w.each({slideDown:Ve("show"),slideUp:Ve("hide"),slideToggle:Ve("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,a){w.fn[e]=function(e,t,i){return this.animate(a,e,t,i)}}),w.timers=[],w.fx.tick=function(){var e,t=0,i=w.timers;for(Fe=w.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||w.fx.stop(),Fe=void 0},w.fx.timer=function(e){w.timers.push(e),e()?w.fx.start():w.timers.pop()},w.fx.interval=13,w.fx.start=function(){Le=Le||setInterval(w.fx.tick,w.fx.interval)},w.fx.stop=function(){clearInterval(Le),Le=null},w.fx.speeds={slow:600,fast:200,_default:400},w.fn.delay=function(a,e){return a=w.fx&&w.fx.speeds[a]||a,e=e||"fx",this.queue(e,function(e,t){var i=setTimeout(e,a);t.stop=function(){clearTimeout(i)}})},Ne=_.createElement("input"),Re=_.createElement("select"),Be=Re.appendChild(_.createElement("option")),Ne.type="checkbox",g.checkOn=""!==Ne.value,g.optSelected=Be.selected,Re.disabled=!0,g.optDisabled=!Be.disabled,(Ne=_.createElement("input")).value="t",Ne.type="radio",g.radioValue="t"===Ne.value;var Ke,Qe=w.expr.attrHandle;w.fn.extend({attr:function(e,t){return I(this,w.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){w.removeAttr(this,e)})}}),w.extend({attr:function(e,t,i){var a,n,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return typeof e.getAttribute==Y?w.prop(e,t,i):(1===s&&w.isXMLDoc(e)||(t=t.toLowerCase(),a=w.attrHooks[t]||(w.expr.match.bool.test(t)?Ke:void 0)),void 0===i?a&&"get"in a&&null!==(n=a.get(e,t))?n:null==(n=w.find.attr(e,t))?void 0:n:null!==i?a&&"set"in a&&void 0!==(n=a.set(e,i,t))?n:(e.setAttribute(t,i+""),i):void w.removeAttr(e,t))},removeAttr:function(e,t){var i,a,n=0,s=t&&t.match(E);if(s&&1===e.nodeType)for(;i=s[n++];)a=w.propFix[i]||i,w.expr.match.bool.test(i)&&(e[a]=!1),e.removeAttribute(i)},attrHooks:{type:{set:function(e,t){if(!g.radioValue&&"radio"===t&&w.nodeName(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}}}),Ke={set:function(e,t,i){return!1===t?w.removeAttr(e,i):e.setAttribute(i,i),i}},w.each(w.expr.match.bool.source.match(/\w+/g),function(e,t){var s=Qe[t]||w.find.attr;Qe[t]=function(e,t,i){var a,n;return i||(n=Qe[t],Qe[t]=a,a=null!=s(e,t,i)?t.toLowerCase():null,Qe[t]=n),a}});var Ze=/^(?:input|select|textarea|button)$/i;w.fn.extend({prop:function(e,t){return I(this,w.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[w.propFix[e]||e]})}}),w.extend({propFix:{for:"htmlFor",class:"className"},prop:function(e,t,i){var a,n,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return(1!==s||!w.isXMLDoc(e))&&(t=w.propFix[t]||t,n=w.propHooks[t]),void 0!==i?n&&"set"in n&&void 0!==(a=n.set(e,i,t))?a:e[t]=i:n&&"get"in n&&null!==(a=n.get(e,t))?a:e[t]},propHooks:{tabIndex:{get:function(e){return e.hasAttribute("tabindex")||Ze.test(e.nodeName)||e.href?e.tabIndex:-1}}}}),g.optSelected||(w.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}}),w.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){w.propFix[this.toLowerCase()]=this});var Je=/[\t\r\n\f]/g;w.fn.extend({addClass:function(t){var e,i,a,n,s,r,o="string"==typeof t&&t,l=0,c=this.length;if(w.isFunction(t))return this.each(function(e){w(this).addClass(t.call(this,e,this.className))});if(o)for(e=(t||"").match(E)||[];l<c;l++)if(a=1===(i=this[l]).nodeType&&(i.className?(" "+i.className+" ").replace(Je," "):" ")){for(s=0;n=e[s++];)a.indexOf(" "+n+" ")<0&&(a+=n+" ");r=w.trim(a),i.className!==r&&(i.className=r)}return this},removeClass:function(t){var e,i,a,n,s,r,o=0===arguments.length||"string"==typeof t&&t,l=0,c=this.length;if(w.isFunction(t))return this.each(function(e){w(this).removeClass(t.call(this,e,this.className))});if(o)for(e=(t||"").match(E)||[];l<c;l++)if(a=1===(i=this[l]).nodeType&&(i.className?(" "+i.className+" ").replace(Je," "):"")){for(s=0;n=e[s++];)for(;0<=a.indexOf(" "+n+" ");)a=a.replace(" "+n+" "," ");r=t?w.trim(a):"",i.className!==r&&(i.className=r)}return this},toggleClass:function(n,t){var s=typeof n;return"boolean"==typeof t&&"string"==s?t?this.addClass(n):this.removeClass(n):this.each(w.isFunction(n)?function(e){w(this).toggleClass(n.call(this,e,this.className,t),t)}:function(){if("string"==s)for(var e,t=0,i=w(this),a=n.match(E)||[];e=a[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else s!=Y&&"boolean"!=s||(this.className&&O.set(this,"__className__",this.className),this.className=!this.className&&!1!==n&&O.get(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",i=0,a=this.length;i<a;i++)if(1===this[i].nodeType&&0<=(" "+this[i].className+" ").replace(Je," ").indexOf(t))return!0;return!1}});var et=/\r/g;w.fn.extend({val:function(i){var a,e,n,t=this[0];return arguments.length?(n=w.isFunction(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=n?i.call(this,e,w(this).val()):i)?t="":"number"==typeof t?t+="":w.isArray(t)&&(t=w.map(t,function(e){return null==e?"":e+""})),(a=w.valHooks[this.type]||w.valHooks[this.nodeName.toLowerCase()])&&"set"in a&&void 0!==a.set(this,t,"value")||(this.value=t))})):t?(a=w.valHooks[t.type]||w.valHooks[t.nodeName.toLowerCase()])&&"get"in a&&void 0!==(e=a.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(et,""):null==e?"":e:void 0}}),w.extend({valHooks:{option:{get:function(e){var t=w.find.attr(e,"value");return null!=t?t:w.trim(w.text(e))}},select:{get:function(e){for(var t,i,a=e.options,n=e.selectedIndex,s="select-one"===e.type||n<0,r=s?null:[],o=s?n+1:a.length,l=n<0?o:s?n:0;l<o;l++)if(!(!(i=a[l]).selected&&l!==n||(g.optDisabled?i.disabled:null!==i.getAttribute("disabled"))||i.parentNode.disabled&&w.nodeName(i.parentNode,"optgroup"))){if(t=w(i).val(),s)return t;r.push(t)}return r},set:function(e,t){for(var i,a,n=e.options,s=w.makeArray(t),r=n.length;r--;)((a=n[r]).selected=0<=w.inArray(a.value,s))&&(i=!0);return i||(e.selectedIndex=-1),s}}}}),w.each(["radio","checkbox"],function(){w.valHooks[this]={set:function(e,t){return w.isArray(t)?e.checked=0<=w.inArray(w(e).val(),t):void 0}},g.checkOn||(w.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),w.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,i){w.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}}),w.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,a){return this.on(t,e,i,a)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}});var tt=w.now(),it=/\?/;w.parseJSON=function(e){return JSON.parse(e+"")},w.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||w.error("Invalid XML: "+e),t};var at,nt,st=/#.*$/,rt=/([?&])_=[^&]*/,ot=/^(.*?):[ \t]*([^\r\n]*)$/gm,lt=/^(?:GET|HEAD)$/,ct=/^\/\//,dt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,ut={},pt={},ht="*/".concat("*");try{nt=location.href}catch(e){(nt=_.createElement("a")).href="",nt=nt.href}function ft(s){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,a=0,n=e.toLowerCase().match(E)||[];if(w.isFunction(t))for(;i=n[a++];)"+"===i[0]?(i=i.slice(1)||"*",(s[i]=s[i]||[]).unshift(t)):(s[i]=s[i]||[]).push(t)}}function mt(t,n,s,r){var o={},l=t===pt;function c(e){var a;return o[e]=!0,w.each(t[e]||[],function(e,t){var i=t(n,s,r);return"string"!=typeof i||l||o[i]?l?!(a=i):void 0:(n.dataTypes.unshift(i),c(i),!1)}),a}return c(n.dataTypes[0])||!o["*"]&&c("*")}function vt(e,t){var i,a,n=w.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((n[i]?e:a=a||{})[i]=t[i]);return a&&w.extend(!0,e,a),e}at=dt.exec(nt.toLowerCase())||[],w.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:nt,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(at[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":ht,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":w.parseJSON,"text xml":w.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?vt(vt(e,w.ajaxSettings),t):vt(w.ajaxSettings,e)},ajaxPrefilter:ft(ut),ajaxTransport:ft(pt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var d,u,p,i,h,a,f,n,m=w.ajaxSetup({},t),v=m.context||m,g=m.context&&(v.nodeType||v.jquery)?w(v):w.event,_=w.Deferred(),y=w.Callbacks("once memory"),b=m.statusCode||{},s={},r={},k=0,o="canceled",$={readyState:0,getResponseHeader:function(e){var t;if(2===k){if(!i)for(i={};t=ot.exec(p);)i[t[1].toLowerCase()]=t[2];t=i[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===k?p:null},setRequestHeader:function(e,t){var i=e.toLowerCase();return k||(e=r[i]=r[i]||e,s[e]=t),this},overrideMimeType:function(e){return k||(m.mimeType=e),this},statusCode:function(e){var t;if(e)if(k<2)for(t in e)b[t]=[b[t],e[t]];else $.always(e[$.status]);return this},abort:function(e){var t=e||o;return d&&d.abort(t),l(0,t),this}};if(_.promise($).complete=y.add,$.success=$.done,$.error=$.fail,m.url=((e||m.url||nt)+"").replace(st,"").replace(ct,at[1]+"//"),m.type=t.method||t.type||m.method||m.type,m.dataTypes=w.trim(m.dataType||"*").toLowerCase().match(E)||[""],null==m.crossDomain&&(a=dt.exec(m.url.toLowerCase()),m.crossDomain=!(!a||a[1]===at[1]&&a[2]===at[2]&&(a[3]||("http:"===a[1]?"80":"443"))===(at[3]||("http:"===at[1]?"80":"443")))),m.data&&m.processData&&"string"!=typeof m.data&&(m.data=w.param(m.data,m.traditional)),mt(ut,m,t,$),2===k)return $;for(n in(f=m.global)&&0==w.active++&&w.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!lt.test(m.type),u=m.url,m.hasContent||(m.data&&(u=m.url+=(it.test(u)?"&":"?")+m.data,delete m.data),!1===m.cache&&(m.url=rt.test(u)?u.replace(rt,"$1_="+tt++):u+(it.test(u)?"&":"?")+"_="+tt++)),m.ifModified&&(w.lastModified[u]&&$.setRequestHeader("If-Modified-Since",w.lastModified[u]),w.etag[u]&&$.setRequestHeader("If-None-Match",w.etag[u])),(m.data&&m.hasContent&&!1!==m.contentType||t.contentType)&&$.setRequestHeader("Content-Type",m.contentType),$.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+ht+"; q=0.01":""):m.accepts["*"]),m.headers)$.setRequestHeader(n,m.headers[n]);if(m.beforeSend&&(!1===m.beforeSend.call(v,$,m)||2===k))return $.abort();for(n in o="abort",{success:1,error:1,complete:1})$[n](m[n]);if(d=mt(pt,m,t,$)){$.readyState=1,f&&g.trigger("ajaxSend",[$,m]),m.async&&0<m.timeout&&(h=setTimeout(function(){$.abort("timeout")},m.timeout));try{k=1,d.send(s,l)}catch(e){if(!(k<2))throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,i,a){var n,s,r,o,l,c=t;2!==k&&(k=2,h&&clearTimeout(h),d=void 0,p=a||"",$.readyState=0<e?4:0,n=200<=e&&e<300||304===e,i&&(o=function(e,t,i){for(var a,n,s,r,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===a&&(a=e.mimeType||t.getResponseHeader("Content-Type"));if(a)for(n in o)if(o[n]&&o[n].test(a)){l.unshift(n);break}if(l[0]in i)s=l[0];else{for(n in i){if(!l[0]||e.converters[n+" "+l[0]]){s=n;break}r=r||n}s=s||r}return s?(s!==l[0]&&l.unshift(s),i[s]):void 0}(m,$,i)),o=function(e,t,i,a){var n,s,r,o,l,c={},d=e.dataTypes.slice();if(d[1])for(r in e.converters)c[r.toLowerCase()]=e.converters[r];for(s=d.shift();s;)if(e.responseFields[s]&&(i[e.responseFields[s]]=t),!l&&a&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=s,s=d.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(!(r=c[l+" "+s]||c["* "+s]))for(n in c)if((o=n.split(" "))[1]===s&&(r=c[l+" "+o[0]]||c["* "+o[0]])){!0===r?r=c[n]:!0!==c[n]&&(s=o[0],d.unshift(o[1]));break}if(!0!==r)if(r&&e.throws)t=r(t);else try{t=r(t)}catch(e){return{state:"parsererror",error:r?e:"No conversion from "+l+" to "+s}}}return{state:"success",data:t}}(m,o,$,n),n?(m.ifModified&&((l=$.getResponseHeader("Last-Modified"))&&(w.lastModified[u]=l),(l=$.getResponseHeader("etag"))&&(w.etag[u]=l)),204===e||"HEAD"===m.type?c="nocontent":304===e?c="notmodified":(c=o.state,s=o.data,n=!(r=o.error))):(r=c,!e&&c||(c="error",e<0&&(e=0))),$.status=e,$.statusText=(t||c)+"",n?_.resolveWith(v,[s,c,$]):_.rejectWith(v,[$,c,r]),$.statusCode(b),b=void 0,f&&g.trigger(n?"ajaxSuccess":"ajaxError",[$,m,n?s:r]),y.fireWith(v,[$,c]),f&&(g.trigger("ajaxComplete",[$,m]),--w.active||w.event.trigger("ajaxStop")))}return $},getJSON:function(e,t,i){return w.get(e,t,i,"json")},getScript:function(e,t){return w.get(e,void 0,t,"script")}}),w.each(["get","post"],function(e,n){w[n]=function(e,t,i,a){return w.isFunction(t)&&(a=a||i,i=t,t=void 0),w.ajax({url:e,type:n,dataType:a,data:t,success:i})}}),w.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){w.fn[t]=function(e){return this.on(t,e)}}),w._evalUrl=function(e){return w.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,throws:!0})},w.fn.extend({wrapAll:function(t){var e;return w.isFunction(t)?this.each(function(e){w(this).wrapAll(t.call(this,e))}):(this[0]&&(e=w(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(i){return this.each(w.isFunction(i)?function(e){w(this).wrapInner(i.call(this,e))}:function(){var e=w(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=w.isFunction(t);return this.each(function(e){w(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(){return this.parent().each(function(){w.nodeName(this,"body")||w(this).replaceWith(this.childNodes)}).end()}}),w.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0},w.expr.filters.visible=function(e){return!w.expr.filters.hidden(e)};var gt=/%20/g,_t=/\[\]$/,yt=/\r?\n/g,bt=/^(?:submit|button|image|reset|file)$/i,kt=/^(?:input|select|textarea|keygen)/i;function $t(i,e,a,n){var t;if(w.isArray(e))w.each(e,function(e,t){a||_t.test(i)?n(i,t):$t(i+"["+("object"==typeof t?e:"")+"]",t,a,n)});else if(a||"object"!==w.type(e))n(i,e);else for(t in e)$t(i+"["+t+"]",e[t],a,n)}w.param=function(e,t){function i(e,t){t=w.isFunction(t)?t():null==t?"":t,n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)}var a,n=[];if(void 0===t&&(t=w.ajaxSettings&&w.ajaxSettings.traditional),w.isArray(e)||e.jquery&&!w.isPlainObject(e))w.each(e,function(){i(this.name,this.value)});else for(a in e)$t(a,e[a],t,i);return n.join("&").replace(gt,"+")},w.fn.extend({serialize:function(){return w.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=w.prop(this,"elements");return e?w.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!w(this).is(":disabled")&&kt.test(this.nodeName)&&!bt.test(e)&&(this.checked||!W.test(e))}).map(function(e,t){var i=w(this).val();return null==i?null:w.isArray(i)?w.map(i,function(e){return{name:t.name,value:e.replace(yt,"\r\n")}}):{name:t.name,value:i.replace(yt,"\r\n")}}).get()}}),w.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(e){}};var wt=0,xt={},Ct={0:200,1223:204},jt=w.ajaxSettings.xhr();f.ActiveXObject&&w(f).on("unload",function(){for(var e in xt)xt[e]()}),g.cors=!!jt&&"withCredentials"in jt,g.ajax=jt=!!jt,w.ajaxTransport(function(s){var r;return g.cors||jt&&!s.crossDomain?{send:function(e,t){var i,a=s.xhr(),n=++wt;if(a.open(s.type,s.url,s.async,s.username,s.password),s.xhrFields)for(i in s.xhrFields)a[i]=s.xhrFields[i];for(i in s.mimeType&&a.overrideMimeType&&a.overrideMimeType(s.mimeType),s.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)a.setRequestHeader(i,e[i]);r=function(e){return function(){r&&(delete xt[n],r=a.onload=a.onerror=null,"abort"===e?a.abort():"error"===e?t(a.status,a.statusText):t(Ct[a.status]||a.status,a.statusText,"string"==typeof a.responseText?{text:a.responseText}:void 0,a.getAllResponseHeaders()))}},a.onload=r(),a.onerror=r("error"),r=xt[n]=r("abort");try{a.send(s.hasContent&&s.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}:void 0}),w.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return w.globalEval(e),e}}}),w.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),w.ajaxTransport("script",function(i){var a,n;if(i.crossDomain)return{send:function(e,t){a=w("<script>").prop({async:!0,charset:i.scriptCharset,src:i.url}).on("load error",n=function(e){a.remove(),n=null,e&&t("error"===e.type?404:200,e.type)}),_.head.appendChild(a[0])},abort:function(){n&&n()}}});var St=[],Tt=/(=)\?(?=&|$)|\?\?/;w.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=St.pop()||w.expando+"_"+tt++;return this[e]=!0,e}}),w.ajaxPrefilter("json jsonp",function(e,t,i){var a,n,s,r=!1!==e.jsonp&&(Tt.test(e.url)?"url":"string"==typeof e.data&&!(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Tt.test(e.data)&&"data");return r||"jsonp"===e.dataTypes[0]?(a=e.jsonpCallback=w.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,r?e[r]=e[r].replace(Tt,"$1"+a):!1!==e.jsonp&&(e.url+=(it.test(e.url)?"&":"?")+e.jsonp+"="+a),e.converters["script json"]=function(){return s||w.error(a+" was not called"),s[0]},e.dataTypes[0]="json",n=f[a],f[a]=function(){s=arguments},i.always(function(){f[a]=n,e[a]&&(e.jsonpCallback=t.jsonpCallback,St.push(a)),s&&w.isFunction(n)&&n(s[0]),s=n=void 0}),"script"):void 0}),w.parseHTML=function(e,t,i){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(i=t,t=!1),t=t||_;var a=b.exec(e),n=!i&&[];return a?[t.createElement(a[1])]:(a=w.buildFragment([e],t,n),n&&n.length&&w(n).remove(),w.merge([],a.childNodes))};var At=w.fn.load;w.fn.load=function(e,t,i){if("string"!=typeof e&&At)return At.apply(this,arguments);var a,n,s,r=this,o=e.indexOf(" ");return 0<=o&&(a=w.trim(e.slice(o)),e=e.slice(0,o)),w.isFunction(t)?(i=t,t=void 0):t&&"object"==typeof t&&(n="POST"),0<r.length&&w.ajax({url:e,type:n,dataType:"html",data:t}).done(function(e){s=arguments,r.html(a?w("<div>").append(w.parseHTML(e)).find(a):e)}).complete(i&&function(e,t){r.each(i,s||[e.responseText,t,e])}),this},w.expr.filters.animated=function(t){return w.grep(w.timers,function(e){return t===e.elem}).length};var Et=f.document.documentElement;function Dt(e){return w.isWindow(e)?e:9===e.nodeType&&e.defaultView}w.offset={setOffset:function(e,t,i){var a,n,s,r,o,l,c=w.css(e,"position"),d=w(e),u={};"static"===c&&(e.style.position="relative"),o=d.offset(),s=w.css(e,"top"),l=w.css(e,"left"),n=("absolute"===c||"fixed"===c)&&-1<(s+l).indexOf("auto")?(r=(a=d.position()).top,a.left):(r=parseFloat(s)||0,parseFloat(l)||0),w.isFunction(t)&&(t=t.call(e,i,o)),null!=t.top&&(u.top=t.top-o.top+r),null!=t.left&&(u.left=t.left-o.left+n),"using"in t?t.using.call(e,u):d.css(u)}},w.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){w.offset.setOffset(this,t,e)});var e,i,a=this[0],n={top:0,left:0},s=a&&a.ownerDocument;return s?(e=s.documentElement,w.contains(e,a)?(typeof a.getBoundingClientRect!=Y&&(n=a.getBoundingClientRect()),i=Dt(s),{top:n.top+i.pageYOffset-e.clientTop,left:n.left+i.pageXOffset-e.clientLeft}):n):void 0},position:function(){if(this[0]){var e,t,i=this[0],a={top:0,left:0};return"fixed"===w.css(i,"position")?t=i.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),w.nodeName(e[0],"html")||(a=e.offset()),a.top+=w.css(e[0],"borderTopWidth",!0),a.left+=w.css(e[0],"borderLeftWidth",!0)),{top:t.top-a.top-w.css(i,"marginTop",!0),left:t.left-a.left-w.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||Et;e&&!w.nodeName(e,"html")&&"static"===w.css(e,"position");)e=e.offsetParent;return e||Et})}}),w.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,n){var s="pageYOffset"===n;w.fn[t]=function(e){return I(this,function(e,t,i){var a=Dt(e);return void 0===i?a?a[n]:e[t]:void(a?a.scrollTo(s?f.pageXOffset:i,s?i:f.pageYOffset):e[t]=i)},t,e,arguments.length,null)}}),w.each(["top","left"],function(e,i){w.cssHooks[i]=we(g.pixelPosition,function(e,t){return t?(t=$e(e,i),be.test(t)?w(e).position()[i]+"px":t):void 0})}),w.each({Height:"height",Width:"width"},function(s,r){w.each({padding:"inner"+s,content:r,"":"outer"+s},function(a,e){w.fn[e]=function(e,t){var i=arguments.length&&(a||"boolean"!=typeof e),n=a||(!0===e||!0===t?"margin":"border");return I(this,function(e,t,i){var a;return w.isWindow(e)?e.document.documentElement["client"+s]:9===e.nodeType?(a=e.documentElement,Math.max(e.body["scroll"+s],a["scroll"+s],e.body["offset"+s],a["offset"+s],a["client"+s])):void 0===i?w.css(e,t,n):w.style(e,t,i,n)},r,i?e:void 0,i,null)}})}),w.fn.size=function(){return this.length},w.fn.andSelf=w.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return w});var Mt=f.jQuery,It=f.$;return w.noConflict=function(e){return f.$===w&&(f.$=It),e&&f.jQuery===w&&(f.jQuery=Mt),w},typeof e==Y&&(f.jQuery=f.$=w),w}),jQuery.cookie=function(e,t,i){if(void 0===t){var a=null;if(document.cookie&&""!=document.cookie)for(var n=document.cookie.split(";"),s=0;s<n.length;s++){var r=jQuery.trim(n[s]);if(r.substring(0,e.length+1)==e+"="){a=decodeURIComponent(r.substring(e.length+1));break}}return a}i=i||{},null===t&&(t="",i.expires=-1);var o,l="";i.expires&&("number"==typeof i.expires||i.expires.toUTCString)&&("number"==typeof i.expires?(o=new Date).setTime(o.getTime()+24*i.expires*60*60*1e3):o=i.expires,l="; expires="+o.toUTCString());var c=i.path?"; path="+i.path:"",d=i.domain?"; domain="+i.domain:"",u=i.secure?"; secure":"",p=i.samesite?"; samesite="+i.samesite:"";document.cookie=[e,"=",encodeURIComponent(t),l,c,d,u,p].join("")},jQuery(document).ready(function(){}),function(o){var i={type:"html",content:"",url:"",ajax:{},ajax_request:null,closeOnEsc:!0,closeOnOverlayClick:!1,clone:!1,overlay:{block:void 0,tpl:'<div class="arcticmodal-overlay"></div>',css:{backgroundColor:"#000",opacity:.2}},container:{block:void 0,tpl:'<div class="arcticmodal-container"><table class="arcticmodal-container_i"><tr><td class="arcticmodal-container_i2"></td></tr></table></div>'},wrap:void 0,body:void 0,errors:{tpl:'<div class="arcticmodal-error arcticmodal-close"></div>',autoclose_delay:2e3,ajax_unsuccessful_load:"Error"},openEffect:{type:"fade",speed:400},closeEffect:{type:"fade",speed:400},beforeOpen:o.noop,afterOpen:o.noop,beforeClose:o.noop,afterClose:o.noop,afterLoading:o.noop,afterLoadingOnShow:o.noop,errorLoading:o.noop},l=0,c=o([]),d=function(e,t){var i=!0;return o(e).each(function(){o(t.target).get(0)==o(this).get(0)&&(i=!1),0==o(t.target).closest("HTML",o(this).get(0)).length&&(i=!1)}),i},u={getParentEl:function(e){var t=o(e);return(t.data("arcticmodal")||!!(t=o(e).closest(".arcticmodal-container").data("arcticmodalParentEl")))&&t},transition:function(e,t,i,a){switch(a=null==a?o.noop:a,i.type){case"fade":"show"==t?e.fadeIn(i.speed,a):e.fadeOut(i.speed,a);break;case"none":"show"==t?e.show():e.hide(),a()}},prepare_body:function(e,t){o(".arcticmodal-close",e.body).unbind("click.arcticmodal").bind("click.arcticmodal",function(){return t.arcticmodal("close"),!1})},init_el:function(t,e){var i=t.data("arcticmodal");if(!i){if(l++,(i=e).modalID=l,i.overlay.block=o(i.overlay.tpl),i.overlay.block.css(i.overlay.css),i.container.block=o(i.container.tpl),i.body=o(".arcticmodal-container_i2",i.container.block),e.clone?i.body.html(t.clone(!0)):(t.before('<div id="arcticmodalReserve'+i.modalID+'" style="display: none" />'),i.body.html(t)),u.prepare_body(i,t),i.closeOnOverlayClick&&i.overlay.block.add(i.container.block).click(function(e){d(o(">*",i.body),e)&&t.arcticmodal("close")}),i.container.block.data("arcticmodalParentEl",t),t.data("arcticmodal",i),c=o.merge(c,t),o.proxy(p.show,t)(),"html"==i.type)return t;if(null!=i.ajax.beforeSend){var a=i.ajax.beforeSend;delete i.ajax.beforeSend}if(null!=i.ajax.success){var n=i.ajax.success;delete i.ajax.success}if(null!=i.ajax.error){var s=i.ajax.error;delete i.ajax.error}var r=o.extend(!0,{url:i.url,beforeSend:function(){null==a?i.body.html('<div class="arcticmodal-loading"><div class="b_loading"><div class="b_loading_circle_wrapper"><div class="b_loading_circle_one"></div><div class="b_loading_circle_one b_loading_circle_delayed"></div></div></div></div>'):a(i,t)},success:function(e){t.trigger("afterLoading"),i.afterLoading(i,t,e),null==n?i.body.html(e):n(i,t,e),u.prepare_body(i,t),t.trigger("afterLoadingOnShow"),i.afterLoadingOnShow(i,t,e)},error:function(){t.trigger("errorLoading"),i.errorLoading(i,t),null==s?(i.body.html(i.errors.tpl),o(".arcticmodal-error",i.body).html(i.errors.ajax_unsuccessful_load),o(".arcticmodal-close",i.body).click(function(){return t.arcticmodal("close"),!1}),i.errors.autoclose_delay&&setTimeout(function(){t.arcticmodal("close")},i.errors.autoclose_delay)):s(i,t)}},i.ajax);i.ajax_request=o.ajax(r),t.data("arcticmodal",i)}},init:function(e){if(e=o.extend(!0,{},i,e),!o.isFunction(this))return this.each(function(){u.init_el(o(this),o.extend(!0,{},e))});if(null==e)o.error("jquery.arcticmodal: Uncorrect parameters");else if(""==e.type)o.error('jquery.arcticmodal: Don\'t set parameter "type"');else switch(e.type){case"html":if(""==e.content){o.error('jquery.arcticmodal: Don\'t set parameter "content"');break}var t=e.content;return e.content="",u.init_el(o(t),e);case"ajax":if(""!=e.url)return u.init_el(o("<div />"),e);o.error('jquery.arcticmodal: Don\'t set parameter "url"')}}},p={show:function(){var e=u.getParentEl(this);if(!1!==e){var t=e.data("arcticmodal");if(t.overlay.block.hide(),t.container.block.hide(),o("BODY").append(t.overlay.block),o("BODY").append(t.container.block),t.beforeOpen(t,e),e.trigger("beforeOpen"),"hidden"!=t.wrap.css("overflow")){t.wrap.data("arcticmodalOverflow",t.wrap.css("overflow"));var i=t.wrap.outerWidth(!0);t.wrap.css("overflow","hidden");var a=t.wrap.outerWidth(!0);a!=i&&t.wrap.css("marginRight",a-i+"px")}return c.not(e).each(function(){o(this).data("arcticmodal").overlay.block.hide()}),u.transition(t.overlay.block,"show",1<c.length?{type:"none"}:t.openEffect),u.transition(t.container.block,"show",1<c.length?{type:"none"}:t.openEffect,function(){t.afterOpen(t,e),e.trigger("afterOpen")}),e}o.error("jquery.arcticmodal: Uncorrect call")},close:function(){if(!o.isFunction(this))return this.each(function(){var e=u.getParentEl(this);if(!1===e)o.error("jquery.arcticmodal: Uncorrect call");else{var t=e.data("arcticmodal");!1!==t.beforeClose(t,e)&&(e.trigger("beforeClose"),c.not(e).last().each(function(){o(this).data("arcticmodal").overlay.block.show()}),u.transition(t.overlay.block,"hide",1<c.length?{type:"none"}:t.closeEffect),u.transition(t.container.block,"hide",1<c.length?{type:"none"}:t.closeEffect,function(){t.afterClose(t,e),e.trigger("afterClose"),t.clone||o("#arcticmodalReserve"+t.modalID).replaceWith(t.body.find(">*")),t.overlay.block.remove(),t.container.block.remove(),e.data("arcticmodal",null),o(".arcticmodal-container").length||(t.wrap.data("arcticmodalOverflow")&&t.wrap.css("overflow",t.wrap.data("arcticmodalOverflow")),t.wrap.css("marginRight",0))}),"ajax"==t.type&&t.ajax_request.abort(),c=c.not(e))}});c.each(function(){o(this).arcticmodal("close")})},setDefault:function(e){o.extend(!0,i,e)}};o(function(){i.wrap=o(document.all&&!document.querySelector?"html":"body")}),o(document).bind("keyup.arcticmodal",function(e){var t=c.last();t.length&&t.data("arcticmodal").closeOnEsc&&27===e.keyCode&&t.arcticmodal("close")}),o.arcticmodal=o.fn.arcticmodal=function(e){return p[e]?p[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void o.error("jquery.arcticmodal: Method "+e+" does not exist"):u.init.apply(this,arguments)}}(jQuery),function(d,u){function p(e,t,i){var a=v[t.type]||{};return null==e?i||!t.def?null:t.def:(e=a.floor?~~e:parseFloat(e),isNaN(e)?t.def:a.mod?(e+a.mod)%a.mod:e<0?0:a.max<e?a.max:e)}function o(r){var o=f(),l=o._rgba=[];return r=r.toLowerCase(),g(e,function(e,t){var i,a=t.re.exec(r),n=a&&t.parse(a),s=t.space||"rgba";if(n)return i=o[s](n),o[m[s].cache]=i[m[s].cache],l=o._rgba=i._rgba,!1}),l.length?("0,0,0,0"===l.join()&&d.extend(l,c.transparent),o):c[r]}function l(e,t,i){return 6*(i=(i+1)%1)<1?e+(t-e)*i*6:2*i<1?t:3*i<2?e+(t-e)*(2/3-i)*6:e}var c,h=/^([\-+])=\s*(\d+\.?\d*)/,e=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[2.55*e[1],2.55*e[2],2.55*e[3],e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],f=d.Color=function(e,t,i,a){return new d.Color.fn.parse(e,t,i,a)},m={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},v={byte:{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},r=f.support={},t=d("<p>")[0],g=d.each;t.style.cssText="background-color:rgba(1,1,1,.5)",r.rgba=-1<t.style.backgroundColor.indexOf("rgba"),g(m,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),f.fn=d.extend(f.prototype,{parse:function(n,e,t,i){if(n===u)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=d(n).css(e),e=u);var s=this,a=d.type(n),r=this._rgba=[];return e!==u&&(n=[n,e,t,i],a="array"),"string"===a?this.parse(o(n)||c._default):"array"===a?(g(m.rgba.props,function(e,t){r[t.idx]=p(n[t.idx],t)}),this):"object"===a?(g(m,n instanceof f?function(e,t){n[t.cache]&&(s[t.cache]=n[t.cache].slice())}:function(e,i){var a=i.cache;g(i.props,function(e,t){if(!s[a]&&i.to){if("alpha"===e||null==n[e])return;s[a]=i.to(s._rgba)}s[a][t.idx]=p(n[e],t,!0)}),s[a]&&d.inArray(null,s[a].slice(0,3))<0&&(s[a][3]=1,i.from&&(s._rgba=i.from(s[a])))}),this):void 0},is:function(e){var n=f(e),s=!0,r=this;return g(m,function(e,t){var i,a=n[t.cache];return a&&(i=r[t.cache]||t.to&&t.to(r._rgba)||[],g(t.props,function(e,t){if(null!=a[t.idx])return s=a[t.idx]===i[t.idx]})),s}),s},_space:function(){var i=[],a=this;return g(m,function(e,t){a[t.cache]&&i.push(e)}),i.pop()},transition:function(e,r){var o=f(e),t=o._space(),i=m[t],a=0===this.alpha()?f("transparent"):this,l=a[i.cache]||i.to(a._rgba),c=l.slice();return o=o[i.cache],g(i.props,function(e,t){var i=t.idx,a=l[i],n=o[i],s=v[t.type]||{};null!==n&&(null===a?c[i]=n:(s.mod&&(s.mod/2<n-a?a+=s.mod:s.mod/2<a-n&&(a-=s.mod)),c[i]=p((n-a)*r+a,t)))}),this[t](c)},blend:function(e){if(1===this._rgba[3])return this;var t=this._rgba.slice(),i=t.pop(),a=f(e)._rgba;return f(d.map(t,function(e,t){return(1-i)*a[t]+i*e}))},toRgbaString:function(){var e="rgba(",t=d.map(this._rgba,function(e,t){return null==e?2<t?1:0:e});return 1===t[3]&&(t.pop(),e="rgb("),e+t.join()+")"},toHslaString:function(){var e="hsla(",t=d.map(this.hsla(),function(e,t){return null==e&&(e=2<t?1:0),t&&t<3&&(e=Math.round(100*e)+"%"),e});return 1===t[3]&&(t.pop(),e="hsl("),e+t.join()+")"},toHexString:function(e){var t=this._rgba.slice(),i=t.pop();return e&&t.push(~~(255*i)),"#"+d.map(t,function(e,t){return 1===(e=(e||0).toString(16)).length?"0"+e:e}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),f.fn.parse.prototype=f.fn,m.hsla.to=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t,i,a=e[0]/255,n=e[1]/255,s=e[2]/255,r=e[3],o=Math.max(a,n,s),l=Math.min(a,n,s),c=o-l,d=o+l,u=.5*d;return t=l===o?0:a===o?60*(n-s)/c+360:n===o?60*(s-a)/c+120:60*(a-n)/c+240,i=0==u||1==u?u:u<=.5?c/d:c/(2-d),[Math.round(t)%360,i,u,null==r?1:r]},m.hsla.from=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t=e[0]/360,i=e[1],a=e[2],n=e[3],s=a<=.5?a*(1+i):a+i-a*i,r=2*a-s;return[Math.round(255*l(r,s,t+1/3)),Math.round(255*l(r,s,t)),Math.round(255*l(r,s,t-1/3)),n]},g(m,function(l,e){var i=e.props,r=e.cache,o=e.to,c=e.from;f.fn[l]=function(e){if(o&&!this[r]&&(this[r]=o(this._rgba)),e===u)return this[r].slice();var t,a=d.type(e),n="array"===a||"object"===a?e:arguments,s=this[r].slice();return g(i,function(e,t){var i=n["object"===a?e:t.idx];null==i&&(i=s[t.idx]),s[t.idx]=p(i,t)}),c?((t=f(c(s)))[r]=s,t):f(s)},g(i,function(r,o){f.fn[r]||(f.fn[r]=function(e){var t,i=d.type(e),a="alpha"===r?this._hsla?"hsla":"rgba":l,n=this[a](),s=n[o.idx];return"undefined"===i?s:("function"===i&&(e=e.call(this,s),i=d.type(e)),null==e&&o.empty?this:("string"===i&&((t=h.exec(e))&&(e=s+parseFloat(t[2])*("+"===t[1]?1:-1))),n[o.idx]=e,this[a](n)))})})}),f.hook=function(e){var t=e.split(" ");g(t,function(e,s){d.cssHooks[s]={set:function(e,t){var i,a,n="";if("string"!==d.type(t)||(i=o(t))){if(t=f(i||t),!r.rgba&&1!==t._rgba[3]){for(a="backgroundColor"===s?e.parentNode:e;(""===n||"transparent"===n)&&a&&a.style;)try{n=d.css(a,"backgroundColor"),a=a.parentNode}catch(e){}t=t.blend(n&&"transparent"!==n?n:"_default")}t=t.toRgbaString()}try{e.style[s]=t}catch(t){}}},d.fx.step[s]=function(e){e.colorInit||(e.start=f(e.elem,s),e.end=f(e.end),e.colorInit=!0),d.cssHooks[s].set(e.elem,e.start.transition(e.end,e.pos))}})},f.hook("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"),d.cssHooks.borderColor={expand:function(i){var a={};return g(["Top","Right","Bottom","Left"],function(e,t){a["border"+t+"Color"]=i}),a}},c=d.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e("object"==typeof exports?require("jquery"):jQuery)}(function(x){var a,e=navigator.userAgent,C=/iphone/i.test(e),n=/chrome/i.test(e),j=/android/i.test(e);x.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},autoclear:!0,dataName:"rawMaskFn",placeholder:"_"},x.fn.extend({caret:function(e,t){var i;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof e?(t="number"==typeof t?t:e,this.each(function(){this.setSelectionRange?this.setSelectionRange(e,t):this.createTextRange&&((i=this.createTextRange()).collapse(!0),i.moveEnd("character",t),i.moveStart("character",e),i.select())})):(this[0].setSelectionRange?(e=this[0].selectionStart,t=this[0].selectionEnd):document.selection&&document.selection.createRange&&(i=document.selection.createRange(),e=0-i.duplicate().moveStart("character",-1e5),t=e+i.text.length),{begin:e,end:t})},unmask:function(){return this.trigger("unmask")},mask:function(t,g){var i,_,y,b,k,$,w;if(!t&&0<this.length){var e=x(this[0]).data(x.mask.dataName);return e?e():void 0}return g=x.extend({autoclear:x.mask.autoclear,placeholder:x.mask.placeholder,completed:null},g),i=x.mask.definitions,_=[],y=$=t.length,b=null,x.each(t.split(""),function(e,t){"?"==t?($--,y=e):i[t]?(_.push(new RegExp(i[t])),null===b&&(b=_.length-1),e<y&&(k=_.length-1)):_.push(null)}),this.trigger("unmask").each(function(){function r(){if(g.completed){for(var e=b;e<=k;e++)if(_[e]&&f[e]===o(e))return;g.completed.call(h)}}function o(e){return g.placeholder.charAt(e<g.placeholder.length?e:0)}function l(e){for(;++e<$&&!_[e];);return e}function c(e,t){var i,a;if(!(e<0)){for(i=e,a=l(t);i<$;i++)if(_[i]){if(!(a<$&&_[i].test(f[a])))break;f[i]=f[a],f[a]=o(a),a=l(a)}u(),h.caret(Math.max(b,e))}}function s(){p(),h.val()!=v&&h.change()}function d(e,t){var i;for(i=e;i<t&&i<$;i++)_[i]&&(f[i]=o(i))}function u(){h.val(f.join(""))}function p(e){var t,i,a,n=h.val(),s=-1;for(a=t=0;t<$;t++)if(_[t]){for(f[t]=o(t);a++<n.length;)if(i=n.charAt(a-1),_[t].test(i)){f[t]=i,s=t;break}if(a>n.length){d(t+1,$);break}}else f[t]===n.charAt(a)&&a++,t<y&&(s=t);return e?u():s+1<y?g.autoclear||f.join("")===m?(h.val()&&h.val(""),d(0,$)):u():(u(),h.val(h.val().substring(0,s+1))),y?t:b}var h=x(this),f=x.map(t.split(""),function(e,t){return"?"!=e?i[e]?o(t):e:void 0}),m=f.join(""),v=h.val();h.data(x.mask.dataName,function(){return x.map(f,function(e,t){return _[t]&&e!=o(t)?e:null}).join("")}),h.one("unmask",function(){h.off(".mask").removeData(x.mask.dataName)}).on("focus.mask",function(){var e;h.prop("readonly")||(clearTimeout(a),v=h.val(),e=p(),a=setTimeout(function(){h.get(0)===document.activeElement&&(u(),e==t.replace("?","").length?h.caret(0,e):h.caret(e))},10))}).on("blur.mask",s).on("keydown.mask",function(e){if(!h.prop("readonly")){var t,i,a,n=e.which||e.keyCode;w=h.val(),8===n||46===n||C&&127===n?(i=(t=h.caret()).begin,(a=t.end)-i==0&&(i=46!==n?function(e){for(;0<=--e&&!_[e];);return e}(i):a=l(i-1),a=46===n?l(a):a),d(i,a),c(i,a-1),e.preventDefault()):13===n?s.call(this,e):27===n&&(h.val(v),h.caret(0,p()),e.preventDefault())}}).on("keypress.mask",function(e){if(!h.prop("readonly")){var t,i,a,n=e.which||e.keyCode,s=h.caret();if(!(e.ctrlKey||e.altKey||e.metaKey||n<32)&&n&&13!==n){if(s.end-s.begin!=0&&(d(s.begin,s.end),c(s.begin,s.end-1)),(t=l(s.begin-1))<$&&(i=String.fromCharCode(n),_[t].test(i))){if(function(e){var t,i,a,n;for(i=o(t=e);t<$;t++)if(_[t]){if(a=l(t),n=f[t],f[t]=i,!(a<$&&_[a].test(n)))break;i=n}}(t),f[t]=i,u(),a=l(t),j){setTimeout(function(){x.proxy(x.fn.caret,h,a)()},0)}else h.caret(a);s.begin<=k&&r()}e.preventDefault()}}}).on("input.mask paste.mask",function(){h.prop("readonly")||setTimeout(function(){var e=p(!0);h.caret(e),r()},0)}),n&&j&&h.off("input.mask").on("input.mask",function(){var e=h.val(),t=h.caret();if(w&&w.length&&w.length>e.length){for(p(!0);0<t.begin&&!_[t.begin-1];)t.begin--;if(0===t.begin)for(;t.begin<b&&!_[t.begin];)t.begin++;h.caret(t.begin,t.begin)}else{for(p(!0);t.begin<$&&!_[t.begin];)t.begin++;h.caret(t.begin,t.begin)}r()}),p()})}})}),function(n){function s(e){var t=e.data("_ARS_data");return t||(t={rotateUnits:"deg",scale:1,rotate:0},e.data("_ARS_data",t)),t}function r(e,t){e.css("transform","rotate("+t.rotate+t.rotateUnits+") scale("+t.scale+","+t.scale+")")}n.fn.rotate=function(e){var t,i=n(this),a=s(i);return void 0===e?a.rotate+a.rotateUnits:((t=e.toString().match(/^(-?\d+(\.\d+)?)(.+)?$/))&&(t[3]&&(a.rotateUnits=t[3]),a.rotate=t[1],r(i,a)),this)},n.fn.scale=function(e){var t=n(this),i=s(t);return void 0===e?i.scale:(i.scale=e,r(t,i),this)};var e=n.fx.prototype.cur;n.fx.prototype.cur=function(){return"rotate"==this.prop?parseFloat(n(this.elem).rotate()):"scale"==this.prop?parseFloat(n(this.elem).scale()):e.apply(this,arguments)},n.fx.step.rotate=function(e){var t=s(n(e.elem));n(e.elem).rotate(e.now+t.rotateUnits)},n.fx.step.scale=function(e){n(e.elem).scale(e.now)};var i=n.fn.animate;n.fn.animate=function(e){if(void 0!==e.rotate){var t=e.rotate.toString().match(/^(([+-]=)?(-?\d+(\.\d+)?))(.+)?$/);t&&t[5]&&(s(n(this)).rotateUnits=t[5]),e.rotate=t[1]}return i.apply(this,arguments)}}(jQuery),function(l){l.fn.autoResize=function(e){var o=l.extend({onResize:function(){},animate:!0,animateDuration:150,animateCallback:function(){},extraSpace:20,limit:3e4},e);return this.filter("textarea").each(function(){function e(){s.height(0).val(l(this).val()).scrollTop(1e4);var e=Math.max(s.scrollTop(),n)+o.extraSpace,t=l(this).add(s);r!==e&&((r=e)>=o.limit?l(this).css("overflow-y",""):(o.onResize.call(this),o.animate&&"block"===a.css("display")?t.stop().animate({height:e},o.animateDuration,o.animateCallback):t.height(e)))}var i,a=l(this).css({resize:"none","overflow-y":"hidden"}),n=a.height(),s=(i={},l.each(["height","width","lineHeight","textDecoration","letterSpacing","fontSize","font-family"],function(e,t){i[t]=a.css(t)}),a.clone().removeAttr("id").removeAttr("name").css({position:"absolute",top:0,left:-9999}).css(i).attr("tabIndex","-1").insertBefore(a)),r=null;a.unbind(".dynSiz").bind("keyup.dynSiz",e).bind("keydown.dynSiz",e).bind("change.dynSiz",e)}),this}}(jQuery),function(h){function f(e,t){if(this.createTextRange){var i=this.createTextRange();i.collapse(!0),i.moveStart("character",e),i.moveEnd("character",t-e),i.select()}else this.setSelectionRange&&(this.focus(),this.setSelectionRange(e,t))}function m(e){var t,i=this.value.length;return e="start"==e.toLowerCase()?"Start":"End",document.selection?((t=(i=document.selection.createRange()).duplicate()).expand("textedit"),t.setEndPoint("EndToEnd",i),i=(t=t.text.length-i.text.length)+i.text.length,"Start"==e?t:i):(void 0!==this["selection"+e]&&(i=this["selection"+e]),i)}var v={codes:{188:44,109:45,190:46,191:47,192:96,220:92,222:39,221:93,219:91,173:45,187:61,186:59,189:45,110:46},shifts:{96:"~",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",48:")",45:"_",61:"+",91:"{",93:"}",92:"|",59:":",39:'"',44:"<",46:">",47:"?"}};h.fn.number=function(e,l,c,d){d=void 0===d?",":d,l=void 0===l?0:l;var t="\\u"+("0000"+(c=void 0===c?".":c).charCodeAt(0).toString(16)).slice(-4),u=RegExp("[^"+t+"0-9]","g"),p=RegExp(t,"g");return!0===e?this.is("input:text")?this.on({"keydown.format":function(e){var t=h(this),i=t.data("numFormat"),a=e.keyCode?e.keyCode:e.which,n="",s=m.apply(this,["start"]),r=m.apply(this,["end"]),o="";if(o=!1,v.codes.hasOwnProperty(a)&&(a=v.codes[a]),!e.shiftKey&&65<=a&&a<=90?a+=32:!e.shiftKey&&69<=a&&a<=105?a-=48:e.shiftKey&&v.shifts.hasOwnProperty(a)&&(n=v.shifts[a]),""==n&&(n=String.fromCharCode(a)),8!==a&&n!=c&&!n.match(/[0-9]/)){if(46==(t=e.keyCode?e.keyCode:e.which)||8==t||9==t||27==t||13==t||(65==t||82==t)&&!0===(e.ctrlKey||e.metaKey)||(86==t||67==t)&&!0===(e.ctrlKey||e.metaKey)||35<=t&&t<=39)return;return e.preventDefault(),!1}if(0==s&&r==this.value.length||0==t.val()?8===a?(s=r=1,this.value="",i.init=0<l?-1:0,i.c=0<l?-(l+1):0,f.apply(this,[0,0])):n===c?(s=r=1,this.value="0"+c+Array(l+1).join("0"),i.init=0<l?1:0,i.c=0<l?-(l+1):0):0===this.value.length&&(i.init=0<l?-1:0,i.c=0<l?-l:0):i.c=r-this.value.length,0<l&&n==c&&s==this.value.length-l-1)i.c++,i.init=Math.max(0,i.init),e.preventDefault(),o=this.value.length+i.c;else if(n==c)i.init=Math.max(0,i.init),e.preventDefault();else if(0<l&&8==a&&s==this.value.length-l)e.preventDefault(),i.c--,o=this.value.length+i.c;else if(0<l&&8==a&&s>this.value.length-l){if(""===this.value)return;"0"!=this.value.slice(s-1,s)&&(o=this.value.slice(0,s-1)+"0"+this.value.slice(s),t.val(o.replace(u,"").replace(p,c))),e.preventDefault(),i.c--,o=this.value.length+i.c}else 8==a&&this.value.slice(s-1,s)==d?(e.preventDefault(),i.c--,o=this.value.length+i.c):0<l&&s==r&&this.value.length>l+1&&s>this.value.length-l-1&&isFinite(+n)&&!e.metaKey&&!e.ctrlKey&&!e.altKey&&1===n.length&&(this.value=o=r===this.value.length?this.value.slice(0,s-1):this.value.slice(0,s)+this.value.slice(s+1),o=s);!1!==o&&f.apply(this,[o,o]),t.data("numFormat",i)},"keyup.format":function(e){var t=h(this),i=t.data("numFormat");e=e.keyCode?e.keyCode:e.which;var a=m.apply(this,["start"]);""===this.value||(e<48||57<e)&&(e<96||105<e)&&8!==e||(t.val(t.val()),0<l&&(i.init<1?(a=this.value.length-l-(i.init<0?1:0),i.c=a-this.value.length,i.init=1,t.data("numFormat",i)):a>this.value.length-l&&8!=e&&(i.c++,t.data("numFormat",i))),t=this.value.length+i.c,f.apply(this,[t,t]))},"paste.format":function(e){var t=h(this),i=e.originalEvent,a=null;return window.clipboardData&&window.clipboardData.getData?a=window.clipboardData.getData("Text"):i.clipboardData&&i.clipboardData.getData&&(a=i.clipboardData.getData("text/plain")),t.val(a),e.preventDefault(),!1}}).each(function(){var e=h(this).data("numFormat",{c:-(l+1),decimals:l,thousands_sep:d,dec_point:c,regex_dec_num:u,regex_dec:p,init:!1});""!==this.value&&e.val(e.val())}):this.each(function(){var e=h(this),t=+e.text().replace(u,"").replace(p,".");e.number(isFinite(t)?+t:0,l,c,d)}):this.text(h.number.apply(window,arguments))};var i=null,a=null;h.isPlainObject(h.valHooks.text)?(h.isFunction(h.valHooks.text.get)&&(i=h.valHooks.text.get),h.isFunction(h.valHooks.text.set)&&(a=h.valHooks.text.set)):h.valHooks.text={},h.valHooks.text.get=function(e){var t=h(e).data("numFormat");return t?""===e.value?"":(e=+e.value.replace(t.regex_dec_num,"").replace(t.regex_dec,"."),""+(isFinite(e)?e:0)):h.isFunction(i)?i(e):void 0},h.valHooks.text.set=function(e,t){var i=h(e).data("numFormat");return i?e.value=h.number(t,i.decimals,i.dec_point,i.thousands_sep):h.isFunction(a)?a(e,t):void 0},h.number=function(e,t,i,a){a=void 0===a?",":a,i=void 0===i?".":i,t=isFinite(+t)?Math.abs(t):0;var n="\\u"+("0000"+i.charCodeAt(0).toString(16)).slice(-4),s="\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4);return e=(e+"").replace(".",i).replace(RegExp(s,"g"),"").replace(RegExp(n,"g"),".").replace(RegExp("[^0-9+-Ee.]","g"),""),e=isFinite(+e)?+e:0,n="",n=function(e,t){var i=Math.pow(10,t);return""+Math.round(e*i)/i},3<(n=(t?n(e,t):""+Math.round(e)).split("."))[0].length&&(n[0]=n[0].replace(/\B(?=(?:\d{3})+(?!\d))/g,a)),(n[1]||"").length<t&&(n[1]=n[1]||"",n[1]+=Array(t-n[1].length+1).join("0")),n.join(i)}}(jQuery),function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).Clipboard=e()}}(function(){return function s(r,o,l){function c(t,e){if(!o[t]){if(!r[t]){var i="function"==typeof require&&require;if(!e&&i)return i(t,!0);if(d)return d(t,!0);var a=new Error("Cannot find module '"+t+"'");throw a.code="MODULE_NOT_FOUND",a}var n=o[t]={exports:{}};r[t][0].call(n.exports,function(e){return c(r[t][1][e]||e)},n,n.exports,s,r,o,l)}return o[t].exports}for(var d="function"==typeof require&&require,e=0;e<l.length;e++)c(l[e]);return c}({1:[function(e,t,i){if("undefined"!=typeof Element&&!Element.prototype.matches){var a=Element.prototype;a.matches=a.matchesSelector||a.mozMatchesSelector||a.msMatchesSelector||a.oMatchesSelector||a.webkitMatchesSelector}t.exports=function(e,t){for(;e&&9!==e.nodeType;){if("function"==typeof e.matches&&e.matches(t))return e;e=e.parentNode}}},{}],2:[function(e,t,i){var r=e("./closest");t.exports=function(e,t,i,a,n){var s=function(t,i,e,a){return function(e){e.delegateTarget=r(e.target,i),e.delegateTarget&&a.call(t,e)}}.apply(this,arguments);return e.addEventListener(i,s,n),{destroy:function(){e.removeEventListener(i,s,n)}}}},{"./closest":1}],3:[function(e,t,i){i.node=function(e){return void 0!==e&&e instanceof HTMLElement&&1===e.nodeType},i.nodeList=function(e){var t=Object.prototype.toString.call(e);return void 0!==e&&("[object NodeList]"===t||"[object HTMLCollection]"===t)&&"length"in e&&(0===e.length||i.node(e[0]))},i.string=function(e){return"string"==typeof e||e instanceof String},i.fn=function(e){return"[object Function]"===Object.prototype.toString.call(e)}},{}],4:[function(e,t,i){var p=e("./is"),h=e("delegate");t.exports=function(e,t,i){if(!e&&!t&&!i)throw new Error("Missing required arguments");if(!p.string(t))throw new TypeError("Second argument must be a String");if(!p.fn(i))throw new TypeError("Third argument must be a Function");if(p.node(e))return n=t,s=i,(a=e).addEventListener(n,s),{destroy:function(){a.removeEventListener(n,s)}};var a,n,s,r,o,l,c,d,u;if(p.nodeList(e))return r=e,o=t,l=i,Array.prototype.forEach.call(r,function(e){e.addEventListener(o,l)}),{destroy:function(){Array.prototype.forEach.call(r,function(e){e.removeEventListener(o,l)})}};if(p.string(e))return c=e,d=t,u=i,h(document.body,c,d,u);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}},{"./is":3,delegate:2}],5:[function(e,t,i){t.exports=function(e){var t;if("SELECT"===e.nodeName)e.focus(),t=e.value;else if("INPUT"===e.nodeName||"TEXTAREA"===e.nodeName){var i=e.hasAttribute("readonly");i||e.setAttribute("readonly",""),e.select(),e.setSelectionRange(0,e.value.length),i||e.removeAttribute("readonly"),t=e.value}else{e.hasAttribute("contenteditable")&&e.focus();var a=window.getSelection(),n=document.createRange();n.selectNodeContents(e),a.removeAllRanges(),a.addRange(n),t=a.toString()}return t}},{}],6:[function(e,t,i){function a(){}a.prototype={on:function(e,t,i){var a=this.e||(this.e={});return(a[e]||(a[e]=[])).push({fn:t,ctx:i}),this},once:function(e,t,i){function a(){n.off(e,a),t.apply(i,arguments)}var n=this;return a._=t,this.on(e,a,i)},emit:function(e){for(var t=[].slice.call(arguments,1),i=((this.e||(this.e={}))[e]||[]).slice(),a=0,n=i.length;a<n;a++)i[a].fn.apply(i[a].ctx,t);return this},off:function(e,t){var i=this.e||(this.e={}),a=i[e],n=[];if(a&&t)for(var s=0,r=a.length;s<r;s++)a[s].fn!==t&&a[s].fn._!==t&&n.push(a[s]);return n.length?i[e]=n:delete i[e],this}},t.exports=a},{}],7:[function(a,n,s){!function(e,t){if(0,void 0!==s)t(n,a("select"));else{var i={exports:{}};t(i,e.select),e.clipboardAction=i.exports}}(this,function(e,t){"use strict";var i,a=(i=t)&&i.__esModule?i:{default:i},n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s=(function(e,t,i){return t&&o(e.prototype,t),i&&o(e,i),e}(r,[{key:"resolveOptions",value:function(e){var t=0<arguments.length&&void 0!==e?e:{};this.action=t.action,this.container=t.container,this.emitter=t.emitter,this.target=t.target,this.text=t.text,this.trigger=t.trigger,this.selectedText=""}},{key:"initSelection",value:function(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"selectFake",value:function(){var e=this,t="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return e.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[t?"right":"left"]="-9999px";var i=window.pageYOffset||document.documentElement.scrollTop;this.fakeElem.style.top=i+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.container.appendChild(this.fakeElem),this.selectedText=(0,a.default)(this.fakeElem),this.copyText()}},{key:"removeFake",value:function(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function(){this.selectedText=(0,a.default)(this.target),this.copyText()}},{key:"copyText",value:function(){var t=void 0;try{t=document.execCommand(this.action)}catch(e){t=!1}this.handleResult(t)}},{key:"handleResult",value:function(e){this.emitter.emit(e?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function(){this.trigger&&this.trigger.focus(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function(){this.removeFake()}},{key:"action",set:function(e){var t=0<arguments.length&&void 0!==e?e:"copy";if(this._action=t,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(e){if(void 0!==e){if(!e||"object"!==(void 0===e?"undefined":n(e))||1!==e.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&e.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(e.hasAttribute("readonly")||e.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=e}},get:function(){return this._target}}]),r);function r(e){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,r),this.resolveOptions(e),this.initSelection()}function o(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}e.exports=s})},{select:5}],8:[function(a,n,s){!function(e,t){if(0,void 0!==s)t(n,a("./clipboard-action"),a("tiny-emitter"),a("good-listener"));else{var i={exports:{}};t(i,e.clipboardAction,e.tinyEmitter,e.goodListener),e.clipboard=i.exports}}(this,function(e,t,i,a){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}function s(e,t){var i="data-clipboard-"+e;if(t.hasAttribute(i))return t.getAttribute(i)}var r=n(t),o=n(i),l=n(a),c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d=function(e,t,i){return t&&h(e.prototype,t),i&&h(e,i),e},u=(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(p,o.default),d(p,[{key:"resolveOptions",value:function(e){var t=0<arguments.length&&void 0!==e?e:{};this.action="function"==typeof t.action?t.action:this.defaultAction,this.target="function"==typeof t.target?t.target:this.defaultTarget,this.text="function"==typeof t.text?t.text:this.defaultText,this.container="object"===c(t.container)?t.container:document.body}},{key:"listenClick",value:function(e){var t=this;this.listener=(0,l.default)(e,"click",function(e){return t.onClick(e)})}},{key:"onClick",value:function(e){var t=e.delegateTarget||e.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new r.default({action:this.action(t),target:this.target(t),text:this.text(t),container:this.container,trigger:t,emitter:this})}},{key:"defaultAction",value:function(e){return s("action",e)}},{key:"defaultTarget",value:function(e){var t=s("target",e);if(t)return document.querySelector(t)}},{key:"defaultText",value:function(e){return s("text",e)}},{key:"destroy",value:function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function(e){var t=0<arguments.length&&void 0!==e?e:["copy","cut"],i="string"==typeof t?[t]:t,a=!!document.queryCommandSupported;return i.forEach(function(e){a=a&&!!document.queryCommandSupported(e)}),a}}]),p);function p(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(p.__proto__||Object.getPrototypeOf(p)).call(this));return i.resolveOptions(t),i.listenClick(e),i}function h(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}e.exports=u})},{"./clipboard-action":7,"good-listener":4,"tiny-emitter":6}]},{},[8])(8)}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).IMask={})}(this,function(e){"use strict";function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function o(e,t,i){return t&&a(e.prototype,t),i&&a(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&i(e,t)}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,t){return(i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)i=s[a],0<=t.indexOf(i)||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)i=s[a],0<=t.indexOf(i)||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}function l(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(a){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}();return function(){var e,t=p(a);if(n){var i=p(this).constructor;e=Reflect.construct(t,arguments,i)}else e=t.apply(this,arguments);return l(this,e)}}function c(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function h(){return(h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,i){var a=c(e,t);if(a){var n=Object.getOwnPropertyDescriptor(a,t);return n.get?n.get.call(arguments.length<3?e:i):n.value}}).apply(this,arguments)}function f(e,t,i,a){return(f="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(e,t,i,a){var n,s,r,o,l=c(e,t);if(l){if((n=Object.getOwnPropertyDescriptor(l,t)).set)return n.set.call(a,i),!0;if(!n.writable)return!1}if(n=Object.getOwnPropertyDescriptor(a,t)){if(!n.writable)return!1;n.value=i,Object.defineProperty(a,t,n)}else o=i,(r=t)in(s=a)?Object.defineProperty(s,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):s[r]=o;return!0})(e,t,i,a)}function m(e,t,i,a,n){if(!f(e,t,i,a||e)&&n)throw new Error("failed to set property");return i}function v(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==i)return;var a,n,s=[],r=!0,o=!1;try{for(i=i.call(e);!(r=(a=i.next()).done)&&(s.push(a.value),!t||s.length!==t);r=!0);}catch(e){o=!0,n=e}finally{try{r||null==i.return||i.return()}finally{if(o)throw n}}return s}(e,t)||g(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e,t){if(e){if("string"==typeof e)return _(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?_(e,t):void 0}}function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,a=new Array(t);i<t;i++)a[i]=e[i];return a}var y=function(){function t(e){r(this,t),Object.assign(this,{inserted:"",rawInserted:"",skip:!1,tailShift:0},e)}return o(t,[{key:"aggregate",value:function(e){return this.rawInserted+=e.rawInserted,this.skip=this.skip||e.skip,this.inserted+=e.inserted,this.tailShift+=e.tailShift,this}},{key:"offset",get:function(){return this.tailShift+this.inserted.length}}]),t}();function b(e){return"string"==typeof e||e instanceof String}var k="NONE",$="LEFT",w="FORCE_LEFT",x="RIGHT",C="FORCE_RIGHT";function j(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function S(e){return Array.isArray(e)?e:[e,new y]}var T=function(){function n(e,t,i,a){for(r(this,n),this.value=e,this.cursorPos=t,this.oldValue=i,this.oldSelection=a;this.value.slice(0,this.startChangePos)!==this.oldValue.slice(0,this.startChangePos);)--this.oldSelection.start}return o(n,[{key:"startChangePos",get:function(){return Math.min(this.cursorPos,this.oldSelection.start)}},{key:"insertedCount",get:function(){return this.cursorPos-this.startChangePos}},{key:"inserted",get:function(){return this.value.substr(this.startChangePos,this.insertedCount)}},{key:"removedCount",get:function(){return Math.max(this.oldSelection.end-this.startChangePos||this.oldValue.length-this.value.length,0)}},{key:"removed",get:function(){return this.oldValue.substr(this.startChangePos,this.removedCount)}},{key:"head",get:function(){return this.value.substring(0,this.startChangePos)}},{key:"tail",get:function(){return this.value.substring(this.startChangePos+this.insertedCount)}},{key:"removeDirection",get:function(){return!this.removedCount||this.insertedCount?k:this.oldSelection.end!==this.cursorPos&&this.oldSelection.start!==this.cursorPos||this.oldSelection.end!==this.oldSelection.start?$:x}}]),n}(),A=function(){function a(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,i=2<arguments.length?arguments[2]:void 0;r(this,a),this.value=e,this.from=t,this.stop=i}return o(a,[{key:"toString",value:function(){return this.value}},{key:"extend",value:function(e){this.value+=String(e)}},{key:"appendTo",value:function(e){return e.append(this.toString(),{tail:!0}).aggregate(e._appendPlaceholder())}},{key:"state",get:function(){return{value:this.value,from:this.from,stop:this.stop}},set:function(e){Object.assign(this,e)}},{key:"unshift",value:function(e){if(!this.value.length||null!=e&&this.from>=e)return"";var t=this.value[0];return this.value=this.value.slice(1),t}},{key:"shift",value:function(){if(!this.value.length)return"";var e=this.value[this.value.length-1];return this.value=this.value.slice(0,-1),e}}]),a}();function E(e){return new E.InputMask(e,1<arguments.length&&void 0!==arguments[1]?arguments[1]:{})}var D=function(){function i(e){r(this,i),this._value="",this._update(Object.assign({},i.DEFAULTS,e)),this.isInitialized=!0}return o(i,[{key:"updateOptions",value:function(e){Object.keys(e).length&&this.withValueRefresh(this._update.bind(this,e))}},{key:"_update",value:function(e){Object.assign(this,e)}},{key:"state",get:function(){return{_value:this.value}},set:function(e){this._value=e._value}},{key:"reset",value:function(){this._value=""}},{key:"value",get:function(){return this._value},set:function(e){this.resolve(e)}},{key:"resolve",value:function(e){return this.reset(),this.append(e,{input:!0},""),this.doCommit(),this.value}},{key:"unmaskedValue",get:function(){return this.value},set:function(e){this.reset(),this.append(e,{},""),this.doCommit()}},{key:"typedValue",get:function(){return this.doParse(this.value)},set:function(e){this.value=this.doFormat(e)}},{key:"rawInputValue",get:function(){return this.extractInput(0,this.value.length,{raw:!0})},set:function(e){this.reset(),this.append(e,{raw:!0},""),this.doCommit()}},{key:"isComplete",get:function(){return!0}},{key:"isFilled",get:function(){return this.isComplete}},{key:"nearestInputPos",value:function(e){return e}},{key:"extractInput",value:function(e,t){var i=0<arguments.length&&void 0!==e?e:0,a=1<arguments.length&&void 0!==t?t:this.value.length;return this.value.slice(i,a)}},{key:"extractTail",value:function(e,t){var i=0<arguments.length&&void 0!==e?e:0,a=1<arguments.length&&void 0!==t?t:this.value.length;return new A(this.extractInput(i,a),i)}},{key:"appendTail",value:function(e){return b(e)&&(e=new A(String(e))),e.appendTo(this)}},{key:"_appendCharRaw",value:function(e){return e?(this._value+=e,new y({inserted:e,rawInserted:e})):new y}},{key:"_appendChar",value:function(e,t,i){var a,n=1<arguments.length&&void 0!==t?t:{},s=2<arguments.length?i:void 0,r=this.state,o=v(S(this.doPrepare(e,n)),2);if(e=o[0],(a=(a=o[1]).aggregate(this._appendCharRaw(e,n))).inserted){var l,c=!1!==this.doValidate(n);if(c&&null!=s){var d=this.state;!0===this.overwrite&&(l=s.state,s.unshift(this.value.length));var u=this.appendTail(s);(c=u.rawInserted===s.toString())&&u.inserted||"shift"!==this.overwrite||(this.state=d,l=s.state,s.shift(),c=(u=this.appendTail(s)).rawInserted===s.toString()),c&&u.inserted&&(this.state=d)}c||(a=new y,this.state=r,s&&l&&(s.state=l))}return a}},{key:"_appendPlaceholder",value:function(){return new y}},{key:"_appendEager",value:function(){return new y}},{key:"append",value:function(e,t,i){if(!b(e))throw new Error("value should be string");var a=new y,n=b(i)?new A(String(i)):i;null!=t&&t.tail&&(t._beforeTailState=this.state);for(var s=0;s<e.length;++s)a.aggregate(this._appendChar(e[s],t,n));return null!=n&&(a.tailShift+=this.appendTail(n).tailShift),this.eager&&null!=t&&t.input&&e&&a.aggregate(this._appendEager()),a}},{key:"remove",value:function(e,t){var i=0<arguments.length&&void 0!==e?e:0,a=1<arguments.length&&void 0!==t?t:this.value.length;return this._value=this.value.slice(0,i)+this.value.slice(a),new y}},{key:"withValueRefresh",value:function(e){if(this._refreshing||!this.isInitialized)return e();this._refreshing=!0;var t=this.rawInputValue,i=this.value,a=e();return this.rawInputValue=t,this.value&&this.value!==i&&0===i.indexOf(this.value)&&this.append(i.slice(this.value.length),{},""),delete this._refreshing,a}},{key:"runIsolated",value:function(e){if(this._isolated||!this.isInitialized)return e(this);this._isolated=!0;var t=this.state,i=e(this);return this.state=t,delete this._isolated,i}},{key:"doPrepare",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:{};return this.prepare?this.prepare(e,this,i):e}},{key:"doValidate",value:function(e){return(!this.validate||this.validate(this.value,this,e))&&(!this.parent||this.parent.doValidate(e))}},{key:"doCommit",value:function(){this.commit&&this.commit(this.value,this)}},{key:"doFormat",value:function(e){return this.format?this.format(e,this):e}},{key:"doParse",value:function(e){return this.parse?this.parse(e,this):e}},{key:"splice",value:function(e,t,i,a,n){var s,r=4<arguments.length&&void 0!==n?n:{input:!0},o=e+t,l=this.extractTail(o);this.eager&&(a=function(e){switch(e){case $:return w;case x:return C;default:return e}}(a),s=this.extractInput(0,o,{raw:!0}));var c=this.nearestInputPos(e,1<t&&0!==e&&!this.eager?k:a),d=new y({tailShift:c-e}).aggregate(this.remove(c));if(this.eager&&a!==k&&s===this.rawInputValue)if(a===w)for(var u;s===this.rawInputValue&&(u=this.value.length);)d.aggregate(new y({tailShift:-1})).aggregate(this.remove(u-1));else a===C&&l.unshift();return d.aggregate(this.append(i,r,l))}},{key:"maskEquals",value:function(e){return this.mask===e}},{key:"typedValueEquals",value:function(e){var t=this.typedValue;return e===t||i.EMPTY_VALUES.includes(e)&&i.EMPTY_VALUES.includes(t)||this.doFormat(e)===this.doFormat(this.typedValue)}}]),i}();function M(e){if(null==e)throw new Error("mask property should be defined");return e instanceof RegExp?E.MaskedRegExp:b(e)?E.MaskedPattern:e instanceof Date||e===Date?E.MaskedDate:e instanceof Number||"number"==typeof e||e===Number?E.MaskedNumber:Array.isArray(e)||e===Array?E.MaskedDynamic:E.Masked&&e.prototype instanceof E.Masked?e:e instanceof E.Masked?e.constructor:e instanceof Function?E.MaskedFunction:(console.warn("Mask not found for mask",e),E.Masked)}function I(e){if(E.Masked&&e instanceof E.Masked)return e;var t=(e=Object.assign({},e)).mask;if(E.Masked&&t instanceof E.Masked)return t;var i=M(t);if(!i)throw new Error("Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.");return new i(e)}D.DEFAULTS={format:function(e){return e},parse:function(e){return e}},D.EMPTY_VALUES=[void 0,null,""],E.Masked=D,E.createMask=I;var P=["mask"],O={0:/\d/,a:/[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,"*":/./},F=function(){function a(e){r(this,a);var t=e.mask,i=s(e,P);this.masked=I({mask:t}),Object.assign(this,i)}return o(a,[{key:"reset",value:function(){this.isFilled=!1,this.masked.reset()}},{key:"remove",value:function(e,t){var i=0<arguments.length&&void 0!==e?e:0,a=1<arguments.length&&void 0!==t?t:this.value.length;return 0===i&&1<=a?(this.isFilled=!1,this.masked.remove(i,a)):new y}},{key:"value",get:function(){return this.masked.value||(this.isFilled&&!this.isOptional?this.placeholderChar:"")}},{key:"unmaskedValue",get:function(){return this.masked.unmaskedValue}},{key:"isComplete",get:function(){return Boolean(this.masked.value)||this.isOptional}},{key:"_appendChar",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:{};if(this.isFilled)return new y;var a=this.masked.state,n=this.masked._appendChar(e,i);return n.inserted&&!1===this.doValidate(i)&&(n.inserted=n.rawInserted="",this.masked.state=a),n.inserted||this.isOptional||this.lazy||i.input||(n.inserted=this.placeholderChar),n.skip=!n.inserted&&!this.isOptional,this.isFilled=Boolean(n.inserted),n}},{key:"append",value:function(){var e;return(e=this.masked).append.apply(e,arguments)}},{key:"_appendPlaceholder",value:function(){var e=new y;return this.isFilled||this.isOptional||(this.isFilled=!0,e.inserted=this.placeholderChar),e}},{key:"_appendEager",value:function(){return new y}},{key:"extractTail",value:function(){var e;return(e=this.masked).extractTail.apply(e,arguments)}},{key:"appendTail",value:function(){var e;return(e=this.masked).appendTail.apply(e,arguments)}},{key:"extractInput",value:function(e,t,i){var a=0<arguments.length&&void 0!==e?e:0,n=1<arguments.length&&void 0!==t?t:this.value.length,s=2<arguments.length?i:void 0;return this.masked.extractInput(a,n,s)}},{key:"nearestInputPos",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:k,a=this.value.length,n=Math.min(Math.max(e,0),a);switch(i){case $:case w:return this.isComplete?n:0;case x:case C:return this.isComplete?n:a;case k:default:return n}}},{key:"doValidate",value:function(){var e,t;return(e=this.masked).doValidate.apply(e,arguments)&&(!this.parent||(t=this.parent).doValidate.apply(t,arguments))}},{key:"doCommit",value:function(){this.masked.doCommit()}},{key:"state",get:function(){return{masked:this.masked.state,isFilled:this.isFilled}},set:function(e){this.masked.state=e.masked,this.isFilled=e.isFilled}}]),a}(),L=function(){function t(e){r(this,t),Object.assign(this,e),this._value="",this.isFixed=!0}return o(t,[{key:"value",get:function(){return this._value}},{key:"unmaskedValue",get:function(){return this.isUnmasking?this.value:""}},{key:"reset",value:function(){this._isRawInput=!1,this._value=""}},{key:"remove",value:function(e,t){var i=0<arguments.length&&void 0!==e?e:0,a=1<arguments.length&&void 0!==t?t:this._value.length;return this._value=this._value.slice(0,i)+this._value.slice(a),this._value||(this._isRawInput=!1),new y}},{key:"nearestInputPos",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:k,a=this._value.length;switch(i){case $:case w:return 0;case k:case x:case C:default:return a}}},{key:"extractInput",value:function(e,t,i){var a=0<arguments.length&&void 0!==e?e:0,n=1<arguments.length&&void 0!==t?t:this._value.length;return(2<arguments.length&&void 0!==i?i:{}).raw&&this._isRawInput&&this._value.slice(a,n)||""}},{key:"isComplete",get:function(){return!0}},{key:"isFilled",get:function(){return Boolean(this._value)}},{key:"_appendChar",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:{},a=new y;if(this._value)return a;var n=this.char===e&&(this.isUnmasking||i.input||i.raw)&&(!i.raw||!this.eager)&&!i.tail;return n&&(a.rawInserted=this.char),this._value=a.inserted=this.char,this._isRawInput=n&&(i.raw||i.input),a}},{key:"_appendEager",value:function(){return this._appendChar(this.char,{tail:!0})}},{key:"_appendPlaceholder",value:function(){var e=new y;return this._value||(this._value=e.inserted=this.char),e}},{key:"extractTail",value:function(e,t){return 1<arguments.length&&void 0!==t||this.value.length,new A("")}},{key:"appendTail",value:function(e){return b(e)&&(e=new A(String(e))),e.appendTo(this)}},{key:"append",value:function(e,t,i){var a=this._appendChar(e[0],t);return null!=i&&(a.tailShift+=this.appendTail(i).tailShift),a}},{key:"doCommit",value:function(){}},{key:"state",get:function(){return{_value:this._value,_isRawInput:this._isRawInput}},set:function(e){Object.assign(this,e)}}]),t}(),N=["chunks"],R=function(){function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;r(this,c),this.chunks=e,this.from=t}return o(c,[{key:"toString",value:function(){return this.chunks.map(String).join("")}},{key:"extend",value:function(e){if(String(e)){b(e)&&(e=new A(String(e)));var t=this.chunks[this.chunks.length-1],i=t&&(t.stop===e.stop||null==e.stop)&&e.from===t.from+t.toString().length;if(e instanceof A)i?t.extend(e.toString()):this.chunks.push(e);else if(e instanceof c){if(null==e.stop)for(var a;e.chunks.length&&null==e.chunks[0].stop;)(a=e.chunks.shift()).from+=e.from,this.extend(a);e.toString()&&(e.stop=e.blockIndex,this.chunks.push(e))}}}},{key:"appendTo",value:function(e){if(!(e instanceof E.MaskedPattern))return new A(this.toString()).appendTo(e);for(var t=new y,i=0;i<this.chunks.length&&!t.skip;++i){var a=this.chunks[i],n=e._mapPosToBlock(e.value.length),s=a.stop,r=void 0;if(null!=s&&(!n||n.index<=s)&&((a instanceof c||0<=e._stops.indexOf(s))&&t.aggregate(e._appendPlaceholder(s)),r=a instanceof c&&e._blocks[s]),r){var o=r.appendTail(a);o.skip=!1,t.aggregate(o),e._value+=o.inserted;var l=a.toString().slice(o.rawInserted.length);l&&t.aggregate(e.append(l,{tail:!0}))}else t.aggregate(e.append(a.toString(),{tail:!0}))}return t}},{key:"state",get:function(){return{chunks:this.chunks.map(function(e){return e.state}),from:this.from,stop:this.stop,blockIndex:this.blockIndex}},set:function(e){var t=e.chunks,i=s(e,N);Object.assign(this,i),this.chunks=t.map(function(e){var t=new("chunks"in e?c:A);return t.state=e,t})}},{key:"unshift",value:function(e){if(!this.chunks.length||null!=e&&this.from>=e)return"";for(var t=null!=e?e-this.from:e,i=0;i<this.chunks.length;){var a=this.chunks[i],n=a.unshift(t);if(a.toString()){if(!n)break;++i}else this.chunks.splice(i,1);if(n)return n}return""}},{key:"shift",value:function(){if(!this.chunks.length)return"";for(var e=this.chunks.length-1;0<=e;){var t=this.chunks[e],i=t.shift();if(t.toString()){if(!i)break;--e}else this.chunks.splice(e,1);if(i)return i}return""}}]),c}(),B=function(){function s(e,t){r(this,s),this.masked=e,this._log=[];var i=e._mapPosToBlock(t)||(t<0?{index:0,offset:0}:{index:this.masked._blocks.length,offset:0}),a=i.offset,n=i.index;this.offset=a,this.index=n,this.ok=!1}return o(s,[{key:"block",get:function(){return this.masked._blocks[this.index]}},{key:"pos",get:function(){return this.masked._blockStartPos(this.index)+this.offset}},{key:"state",get:function(){return{index:this.index,offset:this.offset,ok:this.ok}},set:function(e){Object.assign(this,e)}},{key:"pushState",value:function(){this._log.push(this.state)}},{key:"popState",value:function(){var e=this._log.pop();return this.state=e}},{key:"bindBlock",value:function(){this.block||(this.index<0&&(this.index=0,this.offset=0),this.index>=this.masked._blocks.length&&(this.index=this.masked._blocks.length-1,this.offset=this.block.value.length))}},{key:"_pushLeft",value:function(e){for(this.pushState(),this.bindBlock();0<=this.index;--this.index,this.offset=(null===(t=this.block)||void 0===t?void 0:t.value.length)||0){var t;if(e())return this.ok=!0}return this.ok=!1}},{key:"_pushRight",value:function(e){for(this.pushState(),this.bindBlock();this.index<this.masked._blocks.length;++this.index,this.offset=0)if(e())return this.ok=!0;return this.ok=!1}},{key:"pushLeftBeforeFilled",value:function(){var e=this;return this._pushLeft(function(){if(!e.block.isFixed&&e.block.value)return e.offset=e.block.nearestInputPos(e.offset,w),0!==e.offset||void 0})}},{key:"pushLeftBeforeInput",value:function(){var e=this;return this._pushLeft(function(){if(!e.block.isFixed)return e.offset=e.block.nearestInputPos(e.offset,$),!0})}},{key:"pushLeftBeforeRequired",value:function(){var e=this;return this._pushLeft(function(){if(!(e.block.isFixed||e.block.isOptional&&!e.block.value))return e.offset=e.block.nearestInputPos(e.offset,$),!0})}},{key:"pushRightBeforeFilled",value:function(){var e=this;return this._pushRight(function(){if(!e.block.isFixed&&e.block.value)return e.offset=e.block.nearestInputPos(e.offset,C),e.offset!==e.block.value.length||void 0})}},{key:"pushRightBeforeInput",value:function(){var e=this;return this._pushRight(function(){if(!e.block.isFixed)return e.offset=e.block.nearestInputPos(e.offset,k),!0})}},{key:"pushRightBeforeRequired",value:function(){var e=this;return this._pushRight(function(){if(!(e.block.isFixed||e.block.isOptional&&!e.block.value))return e.offset=e.block.nearestInputPos(e.offset,k),!0})}}]),s}(),t=function(){n(i,D);var e=d(i);function i(){return r(this,i),e.apply(this,arguments)}return o(i,[{key:"_update",value:function(t){t.mask&&(t.validate=function(e){return 0<=e.search(t.mask)}),h(p(i.prototype),"_update",this).call(this,t)}}]),i}();E.MaskedRegExp=t;var H=["_blocks"],z=function(){n(c,D);var t=d(c);function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};return r(this,c),e.definitions=Object.assign({},O,e.definitions),t.call(this,Object.assign({},c.DEFAULTS,e))}return o(c,[{key:"_update",value:function(e){var t=0<arguments.length&&void 0!==e?e:{};t.definitions=Object.assign({},this.definitions,t.definitions),h(p(c.prototype),"_update",this).call(this,t),this._rebuildMask()}},{key:"_rebuildMask",value:function(){var n=this,e=this.definitions;this._blocks=[],this._stops=[],this._maskedBlocks={};var s=this.mask;if(s&&e)for(var t=!1,i=!1,r=0;r<s.length;++r){if(this.blocks)if("continue"===function(){var t=s.slice(r),e=Object.keys(n.blocks).filter(function(e){return 0===t.indexOf(e)});e.sort(function(e,t){return t.length-e.length});var i=e[0];if(i){var a=I(Object.assign({parent:n,lazy:n.lazy,eager:n.eager,placeholderChar:n.placeholderChar,overwrite:n.overwrite},n.blocks[i]));return a&&(n._blocks.push(a),n._maskedBlocks[i]||(n._maskedBlocks[i]=[]),n._maskedBlocks[i].push(n._blocks.length-1)),r+=i.length-1,"continue"}}())continue;var a=s[r],o=a in e;if(a!==c.STOP_CHAR)if("{"!==a&&"}"!==a)if("["!==a&&"]"!==a){if(a===c.ESCAPE_CHAR){if(!(a=s[++r]))break;o=!1}var l=o?new F({parent:this,lazy:this.lazy,eager:this.eager,placeholderChar:this.placeholderChar,mask:e[a],isOptional:i}):new L({char:a,eager:this.eager,isUnmasking:t});this._blocks.push(l)}else i=!i;else t=!t;else this._stops.push(this._blocks.length)}}},{key:"state",get:function(){return Object.assign({},h(p(c.prototype),"state",this),{_blocks:this._blocks.map(function(e){return e.state})})},set:function(e){var i=e._blocks,t=s(e,H);this._blocks.forEach(function(e,t){return e.state=i[t]}),m(p(c.prototype),"state",t,this,!0)}},{key:"reset",value:function(){h(p(c.prototype),"reset",this).call(this),this._blocks.forEach(function(e){return e.reset()})}},{key:"isComplete",get:function(){return this._blocks.every(function(e){return e.isComplete})}},{key:"isFilled",get:function(){return this._blocks.every(function(e){return e.isFilled})}},{key:"isFixed",get:function(){return this._blocks.every(function(e){return e.isFixed})}},{key:"isOptional",get:function(){return this._blocks.every(function(e){return e.isOptional})}},{key:"doCommit",value:function(){this._blocks.forEach(function(e){return e.doCommit()}),h(p(c.prototype),"doCommit",this).call(this)}},{key:"unmaskedValue",get:function(){return this._blocks.reduce(function(e,t){return e+t.unmaskedValue},"")},set:function(e){m(p(c.prototype),"unmaskedValue",e,this,!0)}},{key:"value",get:function(){return this._blocks.reduce(function(e,t){return e+t.value},"")},set:function(e){m(p(c.prototype),"value",e,this,!0)}},{key:"appendTail",value:function(e){return h(p(c.prototype),"appendTail",this).call(this,e).aggregate(this._appendPlaceholder())}},{key:"_appendEager",value:function(){var e,t=new y,i=null===(e=this._mapPosToBlock(this.value.length))||void 0===e?void 0:e.index;if(null==i)return t;this._blocks[i].isFilled&&++i;for(var a=i;a<this._blocks.length;++a){var n=this._blocks[a]._appendEager();if(!n.inserted)break;t.aggregate(n)}return t}},{key:"_appendCharRaw",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:{},a=this._mapPosToBlock(this.value.length),n=new y;if(!a)return n;for(var s=a.index;;++s){var r,o,l=this._blocks[s];if(!l)break;var c=l._appendChar(e,Object.assign({},i,{_beforeTailState:null===(r=i._beforeTailState)||void 0===r||null===(o=r._blocks)||void 0===o?void 0:o[s]})),d=c.skip;if(n.aggregate(c),d||c.rawInserted)break}return n}},{key:"extractTail",value:function(e,t){var s=this,i=0<arguments.length&&void 0!==e?e:0,a=1<arguments.length&&void 0!==t?t:this.value.length,r=new R;return i===a||this._forEachBlocksInRange(i,a,function(e,t,i,a){var n=e.extractTail(i,a);n.stop=s._findStopBefore(t),n.from=s._blockStartPos(t),n instanceof R&&(n.blockIndex=t),r.extend(n)}),r}},{key:"extractInput",value:function(e,t,i){var a=0<arguments.length&&void 0!==e?e:0,n=1<arguments.length&&void 0!==t?t:this.value.length,s=2<arguments.length&&void 0!==i?i:{};if(a===n)return"";var r="";return this._forEachBlocksInRange(a,n,function(e,t,i,a){r+=e.extractInput(i,a,s)}),r}},{key:"_findStopBefore",value:function(e){for(var t,i=0;i<this._stops.length;++i){var a=this._stops[i];if(!(a<=e))break;t=a}return t}},{key:"_appendPlaceholder",value:function(a){var n=this,s=new y;if(this.lazy&&null==a)return s;var e=this._mapPosToBlock(this.value.length);if(!e)return s;var t=e.index,i=null!=a?a:this._blocks.length;return this._blocks.slice(t,i).forEach(function(e){if(!e.lazy||null!=a){var t=null!=e._blocks?[e._blocks.length]:[],i=e._appendPlaceholder.apply(e,t);n._value+=i.inserted,s.aggregate(i)}}),s}},{key:"_mapPosToBlock",value:function(e){for(var t="",i=0;i<this._blocks.length;++i){var a=this._blocks[i],n=t.length;if(e<=(t+=a.value).length)return{index:i,offset:e-n}}}},{key:"_blockStartPos",value:function(e){return this._blocks.slice(0,e).reduce(function(e,t){return e+t.value.length},0)}},{key:"_forEachBlocksInRange",value:function(e,t,i){var a=1<arguments.length&&void 0!==t?t:this.value.length,n=2<arguments.length?i:void 0,s=this._mapPosToBlock(e);if(s){var r=this._mapPosToBlock(a),o=r&&s.index===r.index,l=s.offset,c=r&&o?r.offset:this._blocks[s.index].value.length;if(n(this._blocks[s.index],s.index,l,c),r&&!o){for(var d=s.index+1;d<r.index;++d)n(this._blocks[d],d,0,this._blocks[d].value.length);n(this._blocks[r.index],r.index,0,r.offset)}}}},{key:"remove",value:function(e,t){var i=0<arguments.length&&void 0!==e?e:0,a=1<arguments.length&&void 0!==t?t:this.value.length,n=h(p(c.prototype),"remove",this).call(this,i,a);return this._forEachBlocksInRange(i,a,function(e,t,i,a){n.aggregate(e.remove(i,a))}),n}},{key:"nearestInputPos",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:k;if(!this._blocks.length)return 0;var a=new B(this,e);if(i===k)return a.pushRightBeforeInput()?a.pos:(a.popState(),a.pushLeftBeforeInput()?a.pos:this.value.length);if(i!==$&&i!==w)return i===x||i===C?(a.pushRightBeforeInput(),a.pushRightBeforeRequired(),a.pushRightBeforeFilled()?a.pos:i===C?this.value.length:(a.popState(),a.ok?a.pos:(a.popState(),a.ok?a.pos:this.nearestInputPos(e,$)))):e;if(i===$){if(a.pushRightBeforeFilled(),a.ok&&a.pos===e)return e;a.popState()}if(a.pushLeftBeforeInput(),a.pushLeftBeforeRequired(),a.pushLeftBeforeFilled(),i===$){if(a.pushRightBeforeInput(),a.pushRightBeforeRequired(),a.ok&&a.pos<=e)return a.pos;if(a.popState(),a.ok&&a.pos<=e)return a.pos;a.popState()}return a.ok?a.pos:i===w?0:(a.popState(),a.ok?a.pos:(a.popState(),a.ok?a.pos:0))}},{key:"maskedBlock",value:function(e){return this.maskedBlocks(e)[0]}},{key:"maskedBlocks",value:function(e){var t=this,i=this._maskedBlocks[e];return i?i.map(function(e){return t._blocks[e]}):[]}}]),c}();z.DEFAULTS={lazy:!0,placeholderChar:"_"},z.STOP_CHAR="`",z.ESCAPE_CHAR="\\",z.InputDefinition=F,z.FixedDefinition=L,E.MaskedPattern=z;var U=function(){n(u,z);var e=d(u);function u(){return r(this,u),e.apply(this,arguments)}return o(u,[{key:"_matchFrom",get:function(){return this.maxLength-String(this.from).length}},{key:"_update",value:function(e){e=Object.assign({to:this.to||0,from:this.from||0,maxLength:this.maxLength||0},e);var t=String(e.to).length;null!=e.maxLength&&(t=Math.max(t,e.maxLength)),e.maxLength=t;for(var i=String(e.from).padStart(t,"0"),a=String(e.to).padStart(t,"0"),n=0;n<a.length&&a[n]===i[n];)++n;e.mask=a.slice(0,n).replace(/0/g,"\\0")+"0".repeat(t-n),h(p(u.prototype),"_update",this).call(this,e)}},{key:"isComplete",get:function(){return h(p(u.prototype),"isComplete",this)&&Boolean(this.value)}},{key:"boundaries",value:function(e){var t="",i="",a=v(e.match(/^(\D*)(\d*)(\D*)/)||[],3),n=a[1],s=a[2];return s&&(t="0".repeat(n.length)+s,i="9".repeat(n.length)+s),[t=t.padEnd(this.maxLength,"0"),i=i.padEnd(this.maxLength,"9")]}},{key:"doPrepare",value:function(e,t){var i,a=1<arguments.length&&void 0!==t?t:{},n=v(S(h(p(u.prototype),"doPrepare",this).call(this,e.replace(/\D/g,""),a)),2);if(e=n[0],i=n[1],!this.autofix||!e)return e;var s=String(this.from).padStart(this.maxLength,"0"),r=String(this.to).padStart(this.maxLength,"0"),o=this.value+e;if(o.length>this.maxLength)return"";var l=v(this.boundaries(o),2),c=l[0],d=l[1];return Number(d)<this.from?s[o.length-1]:Number(c)>this.to?"pad"===this.autofix&&o.length<this.maxLength?["",i.aggregate(this.append(s[o.length-1]+e,a))]:r[o.length-1]:e}},{key:"doValidate",value:function(){var e,t=this.value;if(-1===t.search(/[^0]/)&&t.length<=this._matchFrom)return!0;for(var i=v(this.boundaries(t),2),a=i[0],n=i[1],s=arguments.length,r=new Array(s),o=0;o<s;o++)r[o]=arguments[o];return this.from<=Number(n)&&Number(a)<=this.to&&(e=h(p(u.prototype),"doValidate",this)).call.apply(e,[this].concat(r))}}]),u}();E.MaskedRange=U;var q=function(){n(s,z);var t=d(s);function s(e){return r(this,s),t.call(this,Object.assign({},s.DEFAULTS,e))}return o(s,[{key:"_update",value:function(i){i.mask===Date&&delete i.mask,i.pattern&&(i.mask=i.pattern);var e=i.blocks;i.blocks=Object.assign({},s.GET_DEFAULT_BLOCKS()),i.min&&(i.blocks.Y.from=i.min.getFullYear()),i.max&&(i.blocks.Y.to=i.max.getFullYear()),i.min&&i.max&&i.blocks.Y.from===i.blocks.Y.to&&(i.blocks.m.from=i.min.getMonth()+1,i.blocks.m.to=i.max.getMonth()+1,i.blocks.m.from===i.blocks.m.to&&(i.blocks.d.from=i.min.getDate(),i.blocks.d.to=i.max.getDate())),Object.assign(i.blocks,this.blocks,e),Object.keys(i.blocks).forEach(function(e){var t=i.blocks[e];!("autofix"in t)&&"autofix"in i&&(t.autofix=i.autofix)}),h(p(s.prototype),"_update",this).call(this,i)}},{key:"doValidate",value:function(){for(var e,t=this.date,i=arguments.length,a=new Array(i),n=0;n<i;n++)a[n]=arguments[n];return(e=h(p(s.prototype),"doValidate",this)).call.apply(e,[this].concat(a))&&(!this.isComplete||this.isDateExist(this.value)&&null!=t&&(null==this.min||this.min<=t)&&(null==this.max||t<=this.max))}},{key:"isDateExist",value:function(e){return 0<=this.format(this.parse(e,this),this).indexOf(e)}},{key:"date",get:function(){return this.typedValue},set:function(e){this.typedValue=e}},{key:"typedValue",get:function(){return this.isComplete?h(p(s.prototype),"typedValue",this):null},set:function(e){m(p(s.prototype),"typedValue",e,this,!0)}},{key:"maskEquals",value:function(e){return e===Date||h(p(s.prototype),"maskEquals",this).call(this,e)}}]),s}();q.DEFAULTS={pattern:"d{.}`m{.}`Y",format:function(e){return e?[String(e.getDate()).padStart(2,"0"),String(e.getMonth()+1).padStart(2,"0"),e.getFullYear()].join("."):""},parse:function(e){var t=v(e.split("."),3),i=t[0],a=t[1],n=t[2];return new Date(n,a-1,i)}},q.GET_DEFAULT_BLOCKS=function(){return{d:{mask:U,from:1,to:31,maxLength:2},m:{mask:U,from:1,to:12,maxLength:2},Y:{mask:U,from:1900,to:9999}}},E.MaskedDate=q;var W=function(){function e(){r(this,e)}return o(e,[{key:"selectionStart",get:function(){var e;try{e=this._unsafeSelectionStart}catch(e){}return null!=e?e:this.value.length}},{key:"selectionEnd",get:function(){var e;try{e=this._unsafeSelectionEnd}catch(e){}return null!=e?e:this.value.length}},{key:"select",value:function(e,t){if(null!=e&&null!=t&&(e!==this.selectionStart||t!==this.selectionEnd))try{this._unsafeSelect(e,t)}catch(e){}}},{key:"_unsafeSelect",value:function(){}},{key:"isActive",get:function(){return!1}},{key:"bindEvents",value:function(){}},{key:"unbindEvents",value:function(){}}]),e}();E.MaskElement=W;var Y=function(){n(a,W);var i=d(a);function a(e){var t;return r(this,a),(t=i.call(this)).input=e,t._handlers={},t}return o(a,[{key:"rootElement",get:function(){var e,t,i;return null!==(e=null===(t=(i=this.input).getRootNode)||void 0===t?void 0:t.call(i))&&void 0!==e?e:document}},{key:"isActive",get:function(){return this.input===this.rootElement.activeElement}},{key:"_unsafeSelectionStart",get:function(){return this.input.selectionStart}},{key:"_unsafeSelectionEnd",get:function(){return this.input.selectionEnd}},{key:"_unsafeSelect",value:function(e,t){this.input.setSelectionRange(e,t)}},{key:"value",get:function(){return this.input.value},set:function(e){this.input.value=e}},{key:"bindEvents",value:function(t){var i=this;Object.keys(t).forEach(function(e){return i._toggleEventHandler(a.EVENTS_MAP[e],t[e])})}},{key:"unbindEvents",value:function(){var t=this;Object.keys(this._handlers).forEach(function(e){return t._toggleEventHandler(e)})}},{key:"_toggleEventHandler",value:function(e,t){this._handlers[e]&&(this.input.removeEventListener(e,this._handlers[e]),delete this._handlers[e]),t&&(this.input.addEventListener(e,t),this._handlers[e]=t)}}]),a}();Y.EVENTS_MAP={selectionChange:"keydown",input:"input",drop:"drop",click:"click",focus:"focus",commit:"blur"},E.HTMLMaskElement=Y;var V=function(){n(t,Y);var e=d(t);function t(){return r(this,t),e.apply(this,arguments)}return o(t,[{key:"_unsafeSelectionStart",get:function(){var e=this.rootElement,t=e.getSelection&&e.getSelection(),i=t&&t.anchorOffset,a=t&&t.focusOffset;return null==a||null==i||i<a?i:a}},{key:"_unsafeSelectionEnd",get:function(){var e=this.rootElement,t=e.getSelection&&e.getSelection(),i=t&&t.anchorOffset,a=t&&t.focusOffset;return null==a||null==i||a<i?i:a}},{key:"_unsafeSelect",value:function(e,t){if(this.rootElement.createRange){var i=this.rootElement.createRange();i.setStart(this.input.firstChild||this.input,e),i.setEnd(this.input.lastChild||this.input,t);var a=this.rootElement,n=a.getSelection&&a.getSelection();n&&(n.removeAllRanges(),n.addRange(i))}}},{key:"value",get:function(){return this.input.textContent},set:function(e){this.input.textContent=e}}]),t}();E.HTMLContenteditableMaskElement=V;var G=["mask"],X=function(){function i(e,t){r(this,i),this.el=e instanceof W?e:new(e.isContentEditable&&"INPUT"!==e.tagName&&"TEXTAREA"!==e.tagName?V:Y)(e),this.masked=I(t),this._listeners={},this._value="",this._unmaskedValue="",this._saveSelection=this._saveSelection.bind(this),this._onInput=this._onInput.bind(this),this._onChange=this._onChange.bind(this),this._onDrop=this._onDrop.bind(this),this._onFocus=this._onFocus.bind(this),this._onClick=this._onClick.bind(this),this.alignCursor=this.alignCursor.bind(this),this.alignCursorFriendly=this.alignCursorFriendly.bind(this),this._bindEvents(),this.updateValue(),this._onChange()}return o(i,[{key:"mask",get:function(){return this.masked.mask},set:function(e){if(!this.maskEquals(e))if(e instanceof E.Masked||this.masked.constructor!==M(e)){var t=I({mask:e});t.unmaskedValue=this.masked.unmaskedValue,this.masked=t}else this.masked.updateOptions({mask:e})}},{key:"maskEquals",value:function(e){var t;return null==e||(null===(t=this.masked)||void 0===t?void 0:t.maskEquals(e))}},{key:"value",get:function(){return this._value},set:function(e){this.value!==e&&(this.masked.value=e,this.updateControl(),this.alignCursor())}},{key:"unmaskedValue",get:function(){return this._unmaskedValue},set:function(e){this.unmaskedValue!==e&&(this.masked.unmaskedValue=e,this.updateControl(),this.alignCursor())}},{key:"typedValue",get:function(){return this.masked.typedValue},set:function(e){this.masked.typedValueEquals(e)||(this.masked.typedValue=e,this.updateControl(),this.alignCursor())}},{key:"_bindEvents",value:function(){this.el.bindEvents({selectionChange:this._saveSelection,input:this._onInput,drop:this._onDrop,click:this._onClick,focus:this._onFocus,commit:this._onChange})}},{key:"_unbindEvents",value:function(){this.el&&this.el.unbindEvents()}},{key:"_fireEvent",value:function(e){for(var t=arguments.length,i=new Array(1<t?t-1:0),a=1;a<t;a++)i[a-1]=arguments[a];var n=this._listeners[e];n&&n.forEach(function(e){return e.apply(void 0,i)})}},{key:"selectionStart",get:function(){return this._cursorChanging?this._changingCursorPos:this.el.selectionStart}},{key:"cursorPos",get:function(){return this._cursorChanging?this._changingCursorPos:this.el.selectionEnd},set:function(e){this.el&&this.el.isActive&&(this.el.select(e,e),this._saveSelection())}},{key:"_saveSelection",value:function(){this.value!==this.el.value&&console.warn("Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly."),this._selection={start:this.selectionStart,end:this.cursorPos}}},{key:"updateValue",value:function(){this.masked.value=this.el.value,this._value=this.masked.value}},{key:"updateControl",value:function(){var e=this.masked.unmaskedValue,t=this.masked.value,i=this.unmaskedValue!==e||this.value!==t;this._unmaskedValue=e,this._value=t,this.el.value!==t&&(this.el.value=t),i&&this._fireChangeEvents()}},{key:"updateOptions",value:function(e){var t=e.mask,i=s(e,G),a=!this.maskEquals(t),n=!function e(t,i){if(i===t)return 1;var a,n=Array.isArray(i),s=Array.isArray(t);if(n&&s){if(i.length!=t.length)return;for(a=0;a<i.length;a++)if(!e(i[a],t[a]))return;return 1}if(n==s){if(i&&t&&"object"===u(i)&&"object"===u(t)){var r=i instanceof Date,o=t instanceof Date;if(r&&o)return i.getTime()==t.getTime();if(r!=o)return;var l=i instanceof RegExp,c=t instanceof RegExp;if(l&&c)return i.toString()==t.toString();if(l!=c)return;var d=Object.keys(i);for(a=0;a<d.length;a++)if(!Object.prototype.hasOwnProperty.call(t,d[a]))return;for(a=0;a<d.length;a++)if(!e(t[d[a]],i[d[a]]))return;return 1}return i&&t&&"function"==typeof i&&"function"==typeof t&&i.toString()===t.toString()}}(this.masked,i);a&&(this.mask=t),n&&this.masked.updateOptions(i),(a||n)&&this.updateControl()}},{key:"updateCursor",value:function(e){null!=e&&(this.cursorPos=e,this._delayUpdateCursor(e))}},{key:"_delayUpdateCursor",value:function(e){var t=this;this._abortUpdateCursor(),this._changingCursorPos=e,this._cursorChanging=setTimeout(function(){t.el&&(t.cursorPos=t._changingCursorPos,t._abortUpdateCursor())},10)}},{key:"_fireChangeEvents",value:function(){this._fireEvent("accept",this._inputEvent),this.masked.isComplete&&this._fireEvent("complete",this._inputEvent)}},{key:"_abortUpdateCursor",value:function(){this._cursorChanging&&(clearTimeout(this._cursorChanging),delete this._cursorChanging)}},{key:"alignCursor",value:function(){this.cursorPos=this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos,$))}},{key:"alignCursorFriendly",value:function(){this.selectionStart===this.cursorPos&&this.alignCursor()}},{key:"on",value:function(e,t){return this._listeners[e]||(this._listeners[e]=[]),this._listeners[e].push(t),this}},{key:"off",value:function(e,t){if(!this._listeners[e])return this;if(!t)return delete this._listeners[e],this;var i=this._listeners[e].indexOf(t);return 0<=i&&this._listeners[e].splice(i,1),this}},{key:"_onInput",value:function(e){if(this._inputEvent=e,this._abortUpdateCursor(),!this._selection)return this.updateValue();var t=new T(this.el.value,this.cursorPos,this.value,this._selection),i=this.masked.rawInputValue,a=this.masked.splice(t.startChangePos,t.removed.length,t.inserted,t.removeDirection,{input:!0,raw:!0}).offset,n=i===this.masked.rawInputValue?t.removeDirection:k,s=this.masked.nearestInputPos(t.startChangePos+a,n);n!==k&&(s=this.masked.nearestInputPos(s,k)),this.updateControl(),this.updateCursor(s),delete this._inputEvent}},{key:"_onChange",value:function(){this.value!==this.el.value&&this.updateValue(),this.masked.doCommit(),this.updateControl(),this._saveSelection()}},{key:"_onDrop",value:function(e){e.preventDefault(),e.stopPropagation()}},{key:"_onFocus",value:function(){this.alignCursorFriendly()}},{key:"_onClick",value:function(){this.alignCursorFriendly()}},{key:"destroy",value:function(){this._unbindEvents(),this._listeners.length=0,delete this.el}}]),i}();E.InputMask=X;var K=function(){n(s,z);var e=d(s);function s(){return r(this,s),e.apply(this,arguments)}return o(s,[{key:"_update",value:function(e){e.enum&&(e.mask="*".repeat(e.enum[0].length)),h(p(s.prototype),"_update",this).call(this,e)}},{key:"doValidate",value:function(){for(var e,t=this,i=arguments.length,a=new Array(i),n=0;n<i;n++)a[n]=arguments[n];return this.enum.some(function(e){return 0<=e.indexOf(t.unmaskedValue)})&&(e=h(p(s.prototype),"doValidate",this)).call.apply(e,[this].concat(a))}}]),s}();E.MaskedEnum=K;var Q,Z=function(){n(c,D);var t=d(c);function c(e){return r(this,c),t.call(this,Object.assign({},c.DEFAULTS,e))}return o(c,[{key:"_update",value:function(e){h(p(c.prototype),"_update",this).call(this,e),this._updateRegExps()}},{key:"_updateRegExps",value:function(){var e="^"+(this.allowNegative?"[+|\\-]?":""),t=(this.scale?"("+j(this.radix)+"\\d{0,"+this.scale+"})?":"")+"$";this._numberRegExpInput=new RegExp(e+"(0|([1-9]+\\d*))?"+t),this._numberRegExp=new RegExp(e+"\\d*"+t),this._mapToRadixRegExp=new RegExp("["+this.mapToRadix.map(j).join("")+"]","g"),this._thousandsSeparatorRegExp=new RegExp(j(this.thousandsSeparator),"g")}},{key:"_removeThousandsSeparators",value:function(e){return e.replace(this._thousandsSeparatorRegExp,"")}},{key:"_insertThousandsSeparators",value:function(e){var t=e.split(this.radix);return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,this.thousandsSeparator),t.join(this.radix)}},{key:"doPrepare",value:function(e){var t;e=e.replace(this._mapToRadixRegExp,this.radix);for(var i=this._removeThousandsSeparators(e),a=arguments.length,n=new Array(1<a?a-1:0),s=1;s<a;s++)n[s-1]=arguments[s];var r=v(S((t=h(p(c.prototype),"doPrepare",this)).call.apply(t,[this,i].concat(n))),2),o=r[0],l=r[1];return e&&!i&&(l.skip=!0),[o,l]}},{key:"_separatorsCount",value:function(e,t){for(var i=1<arguments.length&&void 0!==t&&t,a=0,n=0;n<e;++n)this._value.indexOf(this.thousandsSeparator,n)===n&&(++a,i&&(e+=this.thousandsSeparator.length));return a}},{key:"_separatorsCountFromSlice",value:function(e){var t=0<arguments.length&&void 0!==e?e:this._value;return this._separatorsCount(this._removeThousandsSeparators(t).length,!0)}},{key:"extractInput",value:function(e,t,i){var a=0<arguments.length&&void 0!==e?e:0,n=1<arguments.length&&void 0!==t?t:this.value.length,s=2<arguments.length?i:void 0,r=v(this._adjustRangeWithSeparators(a,n),2);return a=r[0],n=r[1],this._removeThousandsSeparators(h(p(c.prototype),"extractInput",this).call(this,a,n,s))}},{key:"_appendCharRaw",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:{};if(!this.thousandsSeparator)return h(p(c.prototype),"_appendCharRaw",this).call(this,e,i);var a=i.tail&&i._beforeTailState?i._beforeTailState._value:this._value,n=this._separatorsCountFromSlice(a);this._value=this._removeThousandsSeparators(this.value);var s=h(p(c.prototype),"_appendCharRaw",this).call(this,e,i);this._value=this._insertThousandsSeparators(this._value);var r=i.tail&&i._beforeTailState?i._beforeTailState._value:this._value,o=this._separatorsCountFromSlice(r);return s.tailShift+=(o-n)*this.thousandsSeparator.length,s.skip=!s.rawInserted&&e===this.thousandsSeparator,s}},{key:"_findSeparatorAround",value:function(e){if(this.thousandsSeparator){var t=e-this.thousandsSeparator.length+1,i=this.value.indexOf(this.thousandsSeparator,t);if(i<=e)return i}return-1}},{key:"_adjustRangeWithSeparators",value:function(e,t){var i=this._findSeparatorAround(e);0<=i&&(e=i);var a=this._findSeparatorAround(t);return 0<=a&&(t=a+this.thousandsSeparator.length),[e,t]}},{key:"remove",value:function(e,t){var i=0<arguments.length&&void 0!==e?e:0,a=1<arguments.length&&void 0!==t?t:this.value.length,n=v(this._adjustRangeWithSeparators(i,a),2);i=n[0],a=n[1];var s=this.value.slice(0,i),r=this.value.slice(a),o=this._separatorsCount(s.length);this._value=this._insertThousandsSeparators(this._removeThousandsSeparators(s+r));var l=this._separatorsCountFromSlice(s);return new y({tailShift:(l-o)*this.thousandsSeparator.length})}},{key:"nearestInputPos",value:function(e,t){if(!this.thousandsSeparator)return e;switch(t){case k:case $:case w:var i=this._findSeparatorAround(e-1);if(0<=i){var a=i+this.thousandsSeparator.length;if(e<a||this.value.length<=a||t===w)return i}break;case x:case C:var n=this._findSeparatorAround(e);if(0<=n)return n+this.thousandsSeparator.length}return e}},{key:"doValidate",value:function(e){var t=(e.input?this._numberRegExpInput:this._numberRegExp).test(this._removeThousandsSeparators(this.value));if(t){var i=this.number;t=t&&!isNaN(i)&&(null==this.min||0<=this.min||this.min<=this.number)&&(null==this.max||this.max<=0||this.number<=this.max)}return t&&h(p(c.prototype),"doValidate",this).call(this,e)}},{key:"doCommit",value:function(){if(this.value){var e=this.number,t=e;null!=this.min&&(t=Math.max(t,this.min)),null!=this.max&&(t=Math.min(t,this.max)),t!==e&&(this.unmaskedValue=String(t));var i=this.value;this.normalizeZeros&&(i=this._normalizeZeros(i)),this.padFractionalZeros&&0<this.scale&&(i=this._padFractionalZeros(i)),this._value=i}h(p(c.prototype),"doCommit",this).call(this)}},{key:"_normalizeZeros",value:function(e){var t=this._removeThousandsSeparators(e).split(this.radix);return t[0]=t[0].replace(/^(\D*)(0*)(\d*)/,function(e,t,i,a){return t+a}),e.length&&!/\d$/.test(t[0])&&(t[0]=t[0]+"0"),1<t.length&&(t[1]=t[1].replace(/0*$/,""),t[1].length||(t.length=1)),this._insertThousandsSeparators(t.join(this.radix))}},{key:"_padFractionalZeros",value:function(e){if(!e)return e;var t=e.split(this.radix);return t.length<2&&t.push(""),t[1]=t[1].padEnd(this.scale,"0"),t.join(this.radix)}},{key:"unmaskedValue",get:function(){return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix,".")},set:function(e){m(p(c.prototype),"unmaskedValue",e.replace(".",this.radix),this,!0)}},{key:"typedValue",get:function(){return Number(this.unmaskedValue)},set:function(e){m(p(c.prototype),"unmaskedValue",String(e),this,!0)}},{key:"number",get:function(){return this.typedValue},set:function(e){this.typedValue=e}},{key:"allowNegative",get:function(){return this.signed||null!=this.min&&this.min<0||null!=this.max&&this.max<0}},{key:"typedValueEquals",value:function(e){return(h(p(c.prototype),"typedValueEquals",this).call(this,e)||c.EMPTY_VALUES.includes(e)&&c.EMPTY_VALUES.includes(this.typedValue))&&!(0===e&&""===this.value)}}]),c}();Z.DEFAULTS={radix:",",thousandsSeparator:"",mapToRadix:["."],scale:2,signed:!1,normalizeZeros:!0,padFractionalZeros:!1},Z.EMPTY_VALUES=[].concat(function(e){if(Array.isArray(e))return _(e)}(Q=D.EMPTY_VALUES)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(Q)||g(Q)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[0]),E.MaskedNumber=Z;var J=function(){n(t,D);var e=d(t);function t(){return r(this,t),e.apply(this,arguments)}return o(t,[{key:"_update",value:function(e){e.mask&&(e.validate=e.mask),h(p(t.prototype),"_update",this).call(this,e)}}]),t}();E.MaskedFunction=J;var ee=["compiledMasks","currentMaskRef","currentMask"],te=function(){n(l,D);var i=d(l);function l(e){var t;return r(this,l),(t=i.call(this,Object.assign({},l.DEFAULTS,e))).currentMask=null,t}return o(l,[{key:"_update",value:function(e){h(p(l.prototype),"_update",this).call(this,e),"mask"in e&&(this.compiledMasks=Array.isArray(e.mask)?e.mask.map(function(e){return I(e)}):[])}},{key:"_appendCharRaw",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:{},a=this._applyDispatch(e,i);return this.currentMask&&a.aggregate(this.currentMask._appendChar(e,this.currentMaskFlags(i))),a}},{key:"_applyDispatch",value:function(e,t){var i=0<arguments.length&&void 0!==e?e:"",a=1<arguments.length&&void 0!==t?t:{},n=a.tail&&null!=a._beforeTailState?a._beforeTailState._value:this.value,s=this.rawInputValue,r=a.tail&&null!=a._beforeTailState?a._beforeTailState._rawInputValue:s,o=s.slice(r.length),l=this.currentMask,c=new y,d=null==l?void 0:l.state;if(this.currentMask=this.doDispatch(i,Object.assign({},a)),this.currentMask)if(this.currentMask!==l){if(this.currentMask.reset(),r){var u=this.currentMask.append(r,{raw:!0});c.tailShift=u.inserted.length-n.length}o&&(c.tailShift+=this.currentMask.append(o,{raw:!0,tail:!0}).tailShift)}else this.currentMask.state=d;return c}},{key:"_appendPlaceholder",value:function(){var e=this._applyDispatch.apply(this,arguments);return this.currentMask&&e.aggregate(this.currentMask._appendPlaceholder()),e}},{key:"_appendEager",value:function(){var e=this._applyDispatch.apply(this,arguments);return this.currentMask&&e.aggregate(this.currentMask._appendEager()),e}},{key:"currentMaskFlags",value:function(e){var t,i;return Object.assign({},e,{_beforeTailState:(null===(t=e._beforeTailState)||void 0===t?void 0:t.currentMaskRef)===this.currentMask&&(null===(i=e._beforeTailState)||void 0===i?void 0:i.currentMask)||e._beforeTailState})}},{key:"doDispatch",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:{};return this.dispatch(e,this,i)}},{key:"doValidate",value:function(e){return h(p(l.prototype),"doValidate",this).call(this,e)&&(!this.currentMask||this.currentMask.doValidate(this.currentMaskFlags(e)))}},{key:"doPrepare",value:function(e,t){var i=1<arguments.length&&void 0!==t?t:{},a=v(S(h(p(l.prototype),"doPrepare",this).call(this,e,i)),2),n=a[0],s=a[1];if(this.currentMask){var r,o=v(S(h(p(l.prototype),"doPrepare",this).call(this,n,this.currentMaskFlags(i))),2);n=o[0],r=o[1],s=s.aggregate(r)}return[n,s]}},{key:"reset",value:function(){var e;null!==(e=this.currentMask)&&void 0!==e&&e.reset(),this.compiledMasks.forEach(function(e){return e.reset()})}},{key:"value",get:function(){return this.currentMask?this.currentMask.value:""},set:function(e){m(p(l.prototype),"value",e,this,!0)}},{key:"unmaskedValue",get:function(){return this.currentMask?this.currentMask.unmaskedValue:""},set:function(e){m(p(l.prototype),"unmaskedValue",e,this,!0)}},{key:"typedValue",get:function(){return this.currentMask?this.currentMask.typedValue:""},set:function(e){var t=String(e);this.currentMask&&(this.currentMask.typedValue=e,t=this.currentMask.unmaskedValue),this.unmaskedValue=t}},{key:"isComplete",get:function(){var e;return Boolean(null===(e=this.currentMask)||void 0===e?void 0:e.isComplete)}},{key:"isFilled",get:function(){var e;return Boolean(null===(e=this.currentMask)||void 0===e?void 0:e.isFilled)}},{key:"remove",value:function(){var e,t=new y;this.currentMask&&t.aggregate((e=this.currentMask).remove.apply(e,arguments)).aggregate(this._applyDispatch());return t}},{key:"state",get:function(){var e;return Object.assign({},h(p(l.prototype),"state",this),{_rawInputValue:this.rawInputValue,compiledMasks:this.compiledMasks.map(function(e){return e.state}),currentMaskRef:this.currentMask,currentMask:null===(e=this.currentMask)||void 0===e?void 0:e.state})},set:function(e){var i=e.compiledMasks,t=e.currentMaskRef,a=e.currentMask,n=s(e,ee);this.compiledMasks.forEach(function(e,t){return e.state=i[t]}),null!=t&&(this.currentMask=t,this.currentMask.state=a),m(p(l.prototype),"state",n,this,!0)}},{key:"extractInput",value:function(){var e;return this.currentMask?(e=this.currentMask).extractInput.apply(e,arguments):""}},{key:"extractTail",value:function(){for(var e,t,i=arguments.length,a=new Array(i),n=0;n<i;n++)a[n]=arguments[n];return this.currentMask?(e=this.currentMask).extractTail.apply(e,a):(t=h(p(l.prototype),"extractTail",this)).call.apply(t,[this].concat(a))}},{key:"doCommit",value:function(){this.currentMask&&this.currentMask.doCommit(),h(p(l.prototype),"doCommit",this).call(this)}},{key:"nearestInputPos",value:function(){for(var e,t,i=arguments.length,a=new Array(i),n=0;n<i;n++)a[n]=arguments[n];return this.currentMask?(e=this.currentMask).nearestInputPos.apply(e,a):(t=h(p(l.prototype),"nearestInputPos",this)).call.apply(t,[this].concat(a))}},{key:"overwrite",get:function(){return this.currentMask?this.currentMask.overwrite:h(p(l.prototype),"overwrite",this)},set:function(){console.warn('"overwrite" option is not available in dynamic mask, use this option in siblings')}},{key:"eager",get:function(){return this.currentMask?this.currentMask.eager:h(p(l.prototype),"eager",this)},set:function(){console.warn('"eager" option is not available in dynamic mask, use this option in siblings')}},{key:"maskEquals",value:function(a){return Array.isArray(a)&&this.compiledMasks.every(function(e,t){var i;return e.maskEquals(null===(i=a[t])||void 0===i?void 0:i.mask)})}},{key:"typedValueEquals",value:function(e){var t;return Boolean(null===(t=this.currentMask)||void 0===t?void 0:t.typedValueEquals(e))}}]),l}();te.DEFAULTS={dispatch:function(i,a,n){if(a.compiledMasks.length){var s=a.rawInputValue,e=a.compiledMasks.map(function(e,t){return e.reset(),e.append(s,{raw:!0}),e.append(i,a.currentMaskFlags(n)),{weight:e.rawInputValue.length,index:t}});return e.sort(function(e,t){return t.weight-e.weight}),a.compiledMasks[e[0].index]}}},E.MaskedDynamic=te;var ie={MASKED:"value",UNMASKED:"unmaskedValue",TYPED:"typedValue"};function ae(e){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:ie.MASKED,a=2<arguments.length&&void 0!==arguments[2]?arguments[2]:ie.MASKED,n=I(e);return function(t){return n.runIsolated(function(e){return e[i]=t,e[a]})}}function ne(e){for(var t=arguments.length,i=new Array(1<t?t-1:0),a=1;a<t;a++)i[a-1]=arguments[a];return ae.apply(void 0,i)(e)}E.PIPE_TYPE=ie,E.createPipe=ae,E.pipe=ne;try{globalThis.IMask=E}catch(e){}e.HTMLContenteditableMaskElement=V,e.HTMLMaskElement=Y,e.InputMask=X,e.MaskElement=W,e.Masked=D,e.MaskedDate=q,e.MaskedDynamic=te,e.MaskedEnum=K,e.MaskedFunction=J,e.MaskedNumber=Z,e.MaskedPattern=z,e.MaskedRange=U,e.MaskedRegExp=t,e.PIPE_TYPE=ie,e.createMask=I,e.createPipe=ae,e.default=E,e.pipe=ne,Object.defineProperty(e,"__esModule",{value:!0})}),function(o){function a(e,t){var i,a,n,s=e.nodeName.toLowerCase();return"area"===s?(a=(i=e.parentNode).name,!(!e.href||!a||"map"!==i.nodeName.toLowerCase())&&(!!(n=o("img[usemap=#"+a+"]")[0])&&r(n))):(/input|select|textarea|button|object/.test(s)?!e.disabled:"a"===s&&e.href||t)&&r(e)}function r(e){return o.expr.filters.visible(e)&&!o(e).parents().andSelf().filter(function(){return"hidden"===o.css(this,"visibility")}).length}var e,t,i=0,n=/^ui-id-\d+$/;o.ui=o.ui||{},o.ui.version||(o.extend(o.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),o.fn.extend({_focus:o.fn.focus,focus:function(t,i){return"number"==typeof t?this.each(function(){var e=this;setTimeout(function(){o(e).focus(),i&&i.call(e)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var e;return e=o.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(o.css(this,"position"))&&/(auto|scroll)/.test(o.css(this,"overflow")+o.css(this,"overflow-y")+o.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(o.css(this,"overflow")+o.css(this,"overflow-y")+o.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!e.length?o(document):e},zIndex:function(e){if(void 0!==e)return this.css("zIndex",e);if(this.length)for(var t,i,a=o(this[0]);a.length&&a[0]!==document;){if(("absolute"===(t=a.css("position"))||"relative"===t||"fixed"===t)&&(i=parseInt(a.css("zIndex"),10),!isNaN(i)&&0!==i))return i;a=a.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++i)})},removeUniqueId:function(){return this.each(function(){n.test(this.id)&&o(this).removeAttr("id")})}}),o.extend(o.expr[":"],{data:o.expr.createPseudo?o.expr.createPseudo(function(t){return function(e){return!!o.data(e,t)}}):function(e,t,i){return!!o.data(e,i[3])},focusable:function(e){return a(e,!isNaN(o.attr(e,"tabindex")))},tabbable:function(e){var t=o.attr(e,"tabindex"),i=isNaN(t);return(i||0<=t)&&a(e,!i)}}),o(function(){var e=document.body,t=e.appendChild(t=document.createElement("div"));t.offsetHeight,o.extend(t.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),o.support.minHeight=100===t.offsetHeight,o.support.selectstart="onselectstart"in t,e.removeChild(t).style.display="none"}),o("<a>").outerWidth(1).jquery||o.each(["Width","Height"],function(e,i){function a(e,t,i,a){return o.each(n,function(){t-=parseFloat(o.css(e,"padding"+this))||0,i&&(t-=parseFloat(o.css(e,"border"+this+"Width"))||0),a&&(t-=parseFloat(o.css(e,"margin"+this))||0)}),t}var n="Width"===i?["Left","Right"]:["Top","Bottom"],s=i.toLowerCase(),r={innerWidth:o.fn.innerWidth,innerHeight:o.fn.innerHeight,outerWidth:o.fn.outerWidth,outerHeight:o.fn.outerHeight};o.fn["inner"+i]=function(e){return void 0===e?r["inner"+i].call(this):this.each(function(){o(this).css(s,a(this,e)+"px")})},o.fn["outer"+i]=function(e,t){return"number"!=typeof e?r["outer"+i].call(this,e):this.each(function(){o(this).css(s,a(this,e,!0,t)+"px")})}}),o("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(o.fn.removeData=(t=o.fn.removeData,function(e){return arguments.length?t.call(this,o.camelCase(e)):t.call(this)})),e=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[],o.ui.ie=!!e.length,o.ui.ie6=6===parseFloat(e[1],10),o.fn.extend({disableSelection:function(){return this.bind((o.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),o.extend(o.ui,{plugin:{add:function(e,t,i){var a,n=o.ui[e].prototype;for(a in i)n.plugins[a]=n.plugins[a]||[],n.plugins[a].push([t,i[a]])},call:function(e,t,i){var a,n=e.plugins[t];if(n&&e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType)for(a=0;n.length>a;a++)e.options[n[a][0]]&&n[a][1].apply(e.element,i)}},contains:o.contains,hasScroll:function(e,t){if("hidden"===o(e).css("overflow"))return!1;var i=t&&"left"===t?"scrollLeft":"scrollTop",a=!1;return 0<e[i]||(e[i]=1,a=0<e[i],e[i]=0,a)},isOverAxis:function(e,t,i){return t<e&&e<t+i},isOver:function(e,t,i,a,n,s){return o.ui.isOverAxis(e,i,n)&&o.ui.isOverAxis(t,a,s)}}))}(jQuery),function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Предыдущий месяц",nextText:"Следующий месяц",currentText:"Сегодня",monthNames:["Января","Февраля","Марта","Апреля","Мая","Июня","Июля","Августа","Сентября","Октября","Ноября","Декабря"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Понедельник","Вторник","Среда","Четверг","Пятница","Суббота","Воскресенье"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["ВС","ПН","ВТ","СР","ЧТ","ПТ","СБ"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).removeClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).addClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){for(var i in $.extend(e,t),t)null!=t[i]&&t[i]!=undefined||(e[i]=t[i]);return e}$.extend($.ui,{datepicker:{version:"1.9.2"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(e){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline="div"==nodeName||"span"==nodeName;target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),"input"==nodeName?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){return{id:e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1"),input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,a){var t=$(e);a.append=$([]),a.trigger=$([]),t.hasClass(this.markerClassName)||(this._attachments(t,a),t.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,t,i){a.settings[t]=i}).bind("getData.datepicker",function(e,t){return this._get(a,t)}),this._autoSize(a),$.data(e,PROP_NAME,a),a.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,t){var i=this._get(t,"appendText"),a=this._get(t,"isRTL");t.append&&t.append.remove(),i&&(t.append=$('<span class="'+this._appendClass+'">'+i+"</span>"),e[a?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var n=this._get(t,"showOn");if("focus"!=n&&"both"!=n||e.focus(this._showDatepicker),"button"==n||"both"==n){var s=this._get(t,"buttonText"),r=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:r,alt:s,title:s}):$('<button type="button"></button>').addClass(this._triggerClass).html(""==r?s:$("<img/>").attr({src:r,alt:s,title:s}))),e[a?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():($.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]&&$.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),i=this._get(e,"dateFormat");if(i.match(/[DM]/)){function a(e){for(var t=0,i=0,a=0;e.length>a;a++)e[a].length>t&&(t=e[a].length,i=a);return i}t.setMonth(a(this._get(e,i.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(a(this._get(e,i.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,a){var t=$(e);t.hasClass(this.markerClassName)||(t.addClass(this.markerClassName).append(a.dpDiv).bind("setData.datepicker",function(e,t,i){a.settings[t]=i}).bind("getData.datepicker",function(e,t){return this._get(a,t)}),$.data(e,PROP_NAME,a),this._setDate(a,this._getDefaultDate(a),!0),this._updateDatepicker(a),this._updateAlternate(a),a.settings.disabled&&this._disableDatepicker(e),a.dpDiv.css("display","block"))},_dialogDatepicker:function(e,t,i,a,n){var s=this._dialogInst;if(!s){this.uuid+=1;var r="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+r+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),(s=this._dialogInst=this._newInst(this._dialogInput,!1)).settings={},$.data(this._dialogInput[0],PROP_NAME,s)}if(extendRemove(s.settings,a||{}),t=t&&t.constructor==Date?this._formatDate(s,t):t,this._dialogInput.val(t),this._pos=n?n.length?n:[n.pageX,n.pageY]:null,!this._pos){var o=document.documentElement.clientWidth,l=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,d=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[o/2-100+c,l/2-150+d]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),s.settings.onSelect=i,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,s),this},_destroyDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var a=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),"input"==a?(i.append.remove(),i.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):"div"!=a&&"span"!=a||t.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(t){var e=$(t),i=$.data(t,PROP_NAME);if(e.hasClass(this.markerClassName)){var a=t.nodeName.toLowerCase();if("input"==a)t.disabled=!1,i.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if("div"==a||"span"==a){var n=e.children("."+this._inlineClass);n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(e){return e==t?null:e})}},_disableDatepicker:function(t){var e=$(t),i=$.data(t,PROP_NAME);if(e.hasClass(this.markerClassName)){var a=t.nodeName.toLowerCase();if("input"==a)t.disabled=!0,i.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if("div"==a||"span"==a){var n=e.children("."+this._inlineClass);n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(e){return e==t?null:e}),this._disabledInputs[this._disabledInputs.length]=t}},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(e){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,i){var a=this._getInst(e);if(2==arguments.length&&"string"==typeof t)return"defaults"==t?$.extend({},$.datepicker._defaults):a?"all"==t?$.extend({},a.settings):this._get(a,t):null;var n=t||{};if("string"==typeof t&&((n={})[t]=i),a){this._curInst==a&&this._hideDatepicker();var s=this._getDateDatepicker(e,!0),r=this._getMinMaxDate(a,"min"),o=this._getMinMaxDate(a,"max");extendRemove(a.settings,n),null!==r&&n.dateFormat!==undefined&&n.minDate===undefined&&(a.settings.minDate=this._formatDate(a,r)),null!==o&&n.dateFormat!==undefined&&n.maxDate===undefined&&(a.settings.maxDate=this._formatDate(a,o)),this._attachments($(e),a),this._autoSize(a),this._setDate(a,s),this._updateAlternate(a),this._updateDatepicker(a)}},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),i=!0,a=t.dpDiv.is(".ui-datepicker-rtl");if(t._keyEvent=!0,$.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),i=!1;break;case 13:var n=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);n[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,n[0]);var s=$.datepicker._get(t,"onSelect");if(s){var r=$.datepicker._formatDate(t);s.apply(t.input?t.input[0]:null,[r,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),i=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),i=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,a?1:-1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),i=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,a?-1:1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),i=e.ctrlKey||e.metaKey;break;default:i=!1}else 36==e.keyCode&&e.ctrlKey?$.datepicker._showDatepicker(this):i=!1;i&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var i=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),a=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||a<" "||!i||-1<i.indexOf(a)}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t))&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(e){$.datepicker.log(e)}return!0},_showDatepicker:function(e){if("input"!=(e=e.target||e).nodeName.toLowerCase()&&(e=$("input",e.parentNode)[0]),!$.datepicker._isDisabledDatepicker(e)&&$.datepicker._lastInput!=e){var i=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=i&&($.datepicker._curInst.dpDiv.stop(!0,!0),i&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var t=$.datepicker._get(i,"beforeShow"),a=t?t.apply(e,[e,i]):{};if(!1!==a){extendRemove(i.settings,a),i.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(i),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var n=!1;$(e).parents().each(function(){return!(n|="fixed"==$(this).css("position"))});var s={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};if($.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(i),s=$.datepicker._checkOffset(i,s,n),i.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":n?"fixed":"absolute",display:"none",left:s.left+"px",top:s.top+"px"}),!i.inline){function r(){var e=i.dpDiv.find("iframe.ui-datepicker-cover");if(e.length){var t=$.datepicker._getBorders(i.dpDiv);e.css({left:-t[0],top:-t[1],width:i.dpDiv.outerWidth(),height:i.dpDiv.outerHeight()})}}var o=$.datepicker._get(i,"showAnim"),l=$.datepicker._get(i,"duration");i.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?i.dpDiv.show(o,$.datepicker._get(i,"showOptions"),l,r):i.dpDiv[o||"show"](o?l:null,r),o&&l||r(),i.input.is(":visible")&&!i.input.is(":disabled")&&i.input.focus(),$.datepicker._curInst=i}}}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);(instActive=e).dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i=e.dpDiv.find("iframe.ui-datepicker-cover");i.length&&i.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var a=this._getNumberOfMonths(e),n=a[1];if(e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),1<n&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width","100%"),e.dpDiv[(1!=a[0]||1!=a[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus(),e.yearshtml){var s=e.yearshtml;setTimeout(function(){s===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),s=e.yearshtml=null},0)}},_getBorders:function(e){function t(e){return{thin:1,medium:2,thick:3}[e]||e}return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,i){var a=e.dpDiv.outerWidth(),n=e.dpDiv.outerHeight(),s=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,o=document.documentElement.clientWidth+(i?0:$(document).scrollLeft()),l=document.documentElement.clientHeight+(i?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?a-s:0,t.left-=i&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=i&&t.top==e.input.offset().top+r?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+a>o&&a<o?Math.abs(t.left+a-o):0),t.top-=Math.min(t.top,t.top+n>l&&n<l?Math.abs(n+r):0),t},_findPos:function(e){for(var t=this._getInst(e),i=this._get(t,"isRTL");e&&("hidden"==e.type||1!=e.nodeType||$.expr.filters.hidden(e));)e=e[i?"previousSibling":"nextSibling"];var a=$(e).offset();return[a.left,a.top]},_hideDatepicker:function(e){var t=this._curInst;if(t&&(!e||t==$.data(e,PROP_NAME))&&this._datepickerShowing){function i(){$.datepicker._tidyDialog(t)}var a=this._get(t,"showAnim"),n=this._get(t,"duration");$.effects&&($.effects.effect[a]||$.effects[a])?t.dpDiv.hide(a,$.datepicker._get(t,"showOptions"),n,i):t.dpDiv["slideDown"==a?"slideUp":"fadeIn"==a?"fadeOut":"hide"](a?n:null,i),a||i(),this._datepickerShowing=!1;var s=this._get(t,"onClose");s&&s.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if($.datepicker._curInst){var t=$(e.target),i=$.datepicker._getInst(t[0]);(t[0].id==$.datepicker._mainDivId||0!=t.parents("#"+$.datepicker._mainDivId).length||t.hasClass($.datepicker.markerClassName)||t.closest("."+$.datepicker._triggerClass).length||!$.datepicker._datepickerShowing||$.datepicker._inDialog&&$.blockUI)&&(!t.hasClass($.datepicker.markerClassName)||$.datepicker._curInst==i)||$.datepicker._hideDatepicker()}},_adjustDate:function(e,t,i){var a=$(e),n=this._getInst(a[0]);this._isDisabledDatepicker(a[0])||(this._adjustInstDate(n,t+("M"==i?this._get(n,"showCurrentAtPos"):0),i),this._updateDatepicker(n))},_gotoToday:function(e){var t=$(e),i=this._getInst(t[0]);if(this._get(i,"gotoCurrent")&&i.currentDay)i.selectedDay=i.currentDay,i.drawMonth=i.selectedMonth=i.currentMonth,i.drawYear=i.selectedYear=i.currentYear;else{var a=new Date;i.selectedDay=a.getDate(),i.drawMonth=i.selectedMonth=a.getMonth(),i.drawYear=i.selectedYear=a.getFullYear()}this._notifyChange(i),this._adjustDate(t)},_selectMonthYear:function(e,t,i){var a=$(e),n=this._getInst(a[0]);n["selected"+("M"==i?"Month":"Year")]=n["draw"+("M"==i?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(n),this._adjustDate(a)},_selectDay:function(e,t,i,a){var n=$(e);if(!$(a).hasClass(this._unselectableClass)&&!this._isDisabledDatepicker(n[0])){var s=this._getInst(n[0]);s.selectedDay=s.currentDay=$("a",a).html(),s.selectedMonth=s.currentMonth=t,s.selectedYear=s.currentYear=i,this._selectDate(e,this._formatDate(s,s.currentDay,s.currentMonth,s.currentYear))}},_clearDate:function(e){var t=$(e);this._getInst(t[0]),this._selectDate(t,"")},_selectDate:function(e,t){var i=$(e),a=this._getInst(i[0]);t=null!=t?t:this._formatDate(a),a.input&&a.input.val(t),this._updateAlternate(a);var n=this._get(a,"onSelect");n?n.apply(a.input?a.input[0]:null,[t,a]):a.input&&a.input.trigger("change"),a.inline?this._updateDatepicker(a):(this._hideDatepicker(),this._lastInput=a.input[0],"object"!=typeof a.input[0]&&a.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var i=this._get(e,"altFormat")||this._get(e,"dateFormat"),a=this._getDate(e),n=this.formatDate(i,a,this._getFormatConfig(e));$(t).each(function(){$(this).val(n)})}},noWeekends:function(e){var t=e.getDay();return[0<t&&t<6,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var i=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((i-t)/864e5)/7)+1},parseDate:function(i,s,e){if(null==i||null==s)throw"Invalid arguments";if(""==(s="object"==typeof s?""+s:s+""))return null;var t=(e?e.shortYearCutoff:null)||this._defaults.shortYearCutoff;t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10);function r(e){var t=i.length>_+1&&i.charAt(_+1)==e;return t&&_++,t}function a(e){var t=r(e),i=RegExp("^\\d{1,"+("@"==e?14:"!"==e?20:"y"==e&&t?4:"o"==e?3:2)+"}"),a=s.substring(g).match(i);if(!a)throw"Missing number at position "+g;return g+=a[0].length,parseInt(a[0],10)}function n(e,t,i){var a=$.map(r(e)?i:t,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),n=-1;if($.each(a,function(e,t){var i=t[1];return s.substr(g,i.length).toLowerCase()==i.toLowerCase()?(n=t[0],g+=i.length,!1):undefined}),-1!=n)return n+1;throw"Unknown name at position "+g}function o(){if(s.charAt(g)!=i.charAt(_))throw"Unexpected literal at position "+g;g++}for(var l=(e?e.dayNamesShort:null)||this._defaults.dayNamesShort,c=(e?e.dayNames:null)||this._defaults.dayNames,d=(e?e.monthNamesShort:null)||this._defaults.monthNamesShort,u=(e?e.monthNames:null)||this._defaults.monthNames,p=-1,h=-1,f=-1,m=-1,v=!1,g=0,_=0;i.length>_;_++)if(v)"'"!=i.charAt(_)||r("'")?o():v=!1;else switch(i.charAt(_)){case"d":f=a("d");break;case"D":n("D",l,c);break;case"o":m=a("o");break;case"m":h=a("m");break;case"M":h=n("M",d,u);break;case"y":p=a("y");break;case"@":p=(y=new Date(a("@"))).getFullYear(),h=y.getMonth()+1,f=y.getDate();break;case"!":var y;p=(y=new Date((a("!")-this._ticksTo1970)/1e4)).getFullYear(),h=y.getMonth()+1,f=y.getDate();break;case"'":r("'")?o():v=!0;break;default:o()}if(s.length>g){var b=s.substr(g);if(!/^\s+/.test(b))throw"Extra/unparsed characters found in date: "+b}if(-1==p?p=(new Date).getFullYear():p<100&&(p+=(new Date).getFullYear()-(new Date).getFullYear()%100+(p<=t?0:-100)),-1<m)for(h=1,f=m;;){var k=this._getDaysInMonth(p,h-1);if(f<=k)break;h++,f-=k}if((y=this._daylightSavingAdjust(new Date(p,h-1,f))).getFullYear()!=p||y.getMonth()+1!=h||y.getDate()!=f)throw"Invalid date";return y},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864e9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(i,e,t){if(!e)return"";function n(e){var t=i.length>p+1&&i.charAt(p+1)==e;return t&&p++,t}function a(e,t,i){var a=""+t;if(n(e))for(;i>a.length;)a="0"+a;return a}function s(e,t,i,a){return n(e)?a[t]:i[t]}var r=(t?t.dayNamesShort:null)||this._defaults.dayNamesShort,o=(t?t.dayNames:null)||this._defaults.dayNames,l=(t?t.monthNamesShort:null)||this._defaults.monthNamesShort,c=(t?t.monthNames:null)||this._defaults.monthNames,d="",u=!1;if(e)for(var p=0;i.length>p;p++)if(u)"'"!=i.charAt(p)||n("'")?d+=i.charAt(p):u=!1;else switch(i.charAt(p)){case"d":d+=a("d",e.getDate(),2);break;case"D":d+=s("D",e.getDay(),r,o);break;case"o":d+=a("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":d+=a("m",e.getMonth()+1,2);break;case"M":d+=s("M",e.getMonth(),l,c);break;case"y":d+=n("y")?e.getFullYear():(e.getYear()%100<10?"0":"")+e.getYear()%100;break;case"@":d+=e.getTime();break;case"!":d+=1e4*e.getTime()+this._ticksTo1970;break;case"'":n("'")?d+="'":u=!0;break;default:d+=i.charAt(p)}return d},_possibleChars:function(i){function e(e){var t=i.length>n+1&&i.charAt(n+1)==e;return t&&n++,t}for(var t="",a=!1,n=0;i.length>n;n++)if(a)"'"!=i.charAt(n)||e("'")?t+=i.charAt(n):a=!1;else switch(i.charAt(n)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":e("'")?t+="'":a=!0;break;default:t+=i.charAt(n)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()!=e.lastVal){var i,a,n=this._get(e,"dateFormat"),s=e.lastVal=e.input?e.input.val():null;i=a=this._getDefaultDate(e);var r=this._getFormatConfig(e);try{i=this.parseDate(n,s,r)||a}catch(e){this.log(e),s=t?"":s}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=s?i.getDate():0,e.currentMonth=s?i.getMonth():0,e.currentYear=s?i.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(o,e,t){var i,a,n=null==e||""===e?t:"string"==typeof e?function(e){try{return $.datepicker.parseDate($.datepicker._get(o,"dateFormat"),e,$.datepicker._getFormatConfig(o))}catch(e){}for(var t=(e.toLowerCase().match(/^c/)?$.datepicker._getDate(o):null)||new Date,i=t.getFullYear(),a=t.getMonth(),n=t.getDate(),s=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,r=s.exec(e);r;){switch(r[2]||"d"){case"d":case"D":n+=parseInt(r[1],10);break;case"w":case"W":n+=7*parseInt(r[1],10);break;case"m":case"M":a+=parseInt(r[1],10),n=Math.min(n,$.datepicker._getDaysInMonth(i,a));break;case"y":case"Y":i+=parseInt(r[1],10),n=Math.min(n,$.datepicker._getDaysInMonth(i,a))}r=s.exec(e)}return new Date(i,a,n)}(e):"number"==typeof e?isNaN(e)?t:(i=e,(a=new Date).setDate(a.getDate()+i),a):new Date(e.getTime());return(n=n&&"Invalid Date"==""+n?t:n)&&(n.setHours(0),n.setMinutes(0),n.setSeconds(0),n.setMilliseconds(0)),this._daylightSavingAdjust(n)},_daylightSavingAdjust:function(e){return e?(e.setHours(12<e.getHours()?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var a=!t,n=e.selectedMonth,s=e.selectedYear,r=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=r.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=r.getMonth(),e.drawYear=e.selectedYear=e.currentYear=r.getFullYear(),n==e.selectedMonth&&s==e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(a?"":this._formatDate(e))},_getDate:function(e){return!e.currentYear||e.input&&""==e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay))},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),i="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(i)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(i,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var i=this._get(e,"isRTL"),a=this._get(e,"showButtonPanel"),n=this._get(e,"hideIfNoPrevNext"),s=this._get(e,"navigationAsDateFormat"),r=this._getNumberOfMonths(e),o=this._get(e,"showCurrentAtPos"),l=this._get(e,"stepMonths"),c=1!=r[0]||1!=r[1],d=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),u=this._getMinMaxDate(e,"min"),p=this._getMinMaxDate(e,"max"),h=e.drawMonth-o,f=e.drawYear;if(h<0&&(h+=12,f--),p){var m=this._daylightSavingAdjust(new Date(p.getFullYear(),p.getMonth()-r[0]*r[1]+1,p.getDate()));for(m=u&&m<u?u:m;this._daylightSavingAdjust(new Date(f,h,1))>m;)--h<0&&(h=11,f--)}e.drawMonth=h,e.drawYear=f;var v=this._get(e,"prevText");v=s?this.formatDate(v,this._daylightSavingAdjust(new Date(f,h-l,1)),this._getFormatConfig(e)):v;var g=this._canAdjustMonth(e,-1,f,h)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+v+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+v+"</span></a>":n?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+v+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+v+"</span></a>",_=this._get(e,"nextText");_=s?this.formatDate(_,this._daylightSavingAdjust(new Date(f,h+l,1)),this._getFormatConfig(e)):_;var y=this._canAdjustMonth(e,1,f,h)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>":n?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>",b=this._get(e,"currentText"),k=this._get(e,"gotoCurrent")&&e.currentDay?d:t;b=s?this.formatDate(b,k,this._getFormatConfig(e)):b;var w=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",x=a?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(i?w:"")+(this._isInRange(e,k)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+b+"</button>":"")+(i?"":w)+"</div>":"",C=parseInt(this._get(e,"firstDay"),10);C=isNaN(C)?0:C;var j=this._get(e,"showWeek"),S=this._get(e,"dayNames");this._get(e,"dayNamesShort");var T=this._get(e,"dayNamesMin"),A=this._get(e,"monthNames"),E=this._get(e,"monthNamesShort"),D=this._get(e,"beforeShowDay"),M=this._get(e,"showOtherMonths"),I=this._get(e,"selectOtherMonths");this._get(e,"calculateWeek")||this.iso8601Week;for(var P=this._getDefaultDate(e),O="",F=0;r[0]>F;F++){var L="";this.maxRows=4;for(var N=0;r[1]>N;N++){var R=this._daylightSavingAdjust(new Date(f,h,e.selectedDay)),B=" ui-corner-all",H="";if(c){if(H+='<div class="ui-datepicker-group',1<r[1])switch(N){case 0:H+=" ui-datepicker-group-first",B=" ui-corner-"+(i?"right":"left");break;case r[1]-1:H+=" ui-datepicker-group-last",B=" ui-corner-"+(i?"left":"right");break;default:H+=" ui-datepicker-group-middle",B=""}H+='">'}H+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+B+'">'+(/all|left/.test(B)&&0==F?i?y:g:"")+(/all|right/.test(B)&&0==F?i?g:y:"")+this._generateMonthYearHeader(e,h,f,u,p,0<F||0<N,A,E)+'</div><table class="ui-datepicker-calendar"><thead><tr>';for(var z=j?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"",U=0;U<7;U++){var q=(U+C)%7;z+="<th"+(5<=(U+C+6)%7?' class="ui-datepicker-week-end"':"")+'><span title="'+S[q]+'">'+T[q]+"</span></th>"}H+=z+"</tr></thead><tbody>";var W=this._getDaysInMonth(f,h);f==e.selectedYear&&h==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,W));var Y=(this._getFirstDayOfMonth(f,h)-C+7)%7,V=Math.ceil((Y+W)/7),G=c&&this.maxRows>V?this.maxRows:V;this.maxRows=G;for(var X=this._daylightSavingAdjust(new Date(f,h,1-Y)),K=0;K<G;K++){H+="<tr>";var Q=j?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(X)+"</td>":"";for(U=0;U<7;U++){var Z=D?D.apply(e.input?e.input[0]:null,[X]):[!0,""],J=X.getMonth()!=h,ee=J&&!I||!Z[0]||u&&X<u||p&&p<X;Q+='<td class="'+(5<=(U+C+6)%7?" ui-datepicker-week-end":"")+(J?" ui-datepicker-other-month":"")+(X.getTime()==R.getTime()&&h==e.selectedMonth&&e._keyEvent||P.getTime()==X.getTime()&&P.getTime()==R.getTime()?" "+this._dayOverClass:"")+(ee?" "+this._unselectableClass+" ui-state-disabled":"")+(J&&!M?"":" "+Z[1]+(X.getTime()==d.getTime()?" "+this._currentClass:"")+(X.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+(J&&!M||!Z[2]?"":' title="'+Z[2]+'"')+(ee?"":' data-handler="selectDay" data-event="click" data-month="'+X.getMonth()+'" data-year="'+X.getFullYear()+'"')+">"+(J&&!M?"&#xa0;":ee?'<span class="ui-state-default">'+X.getDate()+"</span>":'<a class="ui-state-default'+(X.getTime()==t.getTime()?" ui-state-highlight":"")+(X.getTime()==d.getTime()?" ui-state-active":"")+(J?" ui-priority-secondary":"")+'" href="#">'+X.getDate()+"</a>")+"</td>",X.setDate(X.getDate()+1),X=this._daylightSavingAdjust(X)}H+=Q+"</tr>"}11<++h&&(h=0,f++),L+=H+="</tbody></table>"+(c?"</div>"+(0<r[0]&&N==r[1]-1?'<div class="ui-datepicker-row-break"></div>':""):"")}O+=L}return O+=x+($.ui.ie6&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,O},_generateMonthYearHeader:function(e,t,i,a,n,s,r,o){var l=this._get(e,"changeMonth"),c=this._get(e,"changeYear"),d=this._get(e,"showMonthAfterYear"),u='<div class="ui-datepicker-title">',p="";if(s||!l)p+='<span class="ui-datepicker-month">'+r[t]+"</span>";else{var h=a&&a.getFullYear()==i,f=n&&n.getFullYear()==i;p+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var m=0;m<12;m++)(!h||m>=a.getMonth())&&(!f||n.getMonth()>=m)&&(p+='<option value="'+m+'"'+(m==t?' selected="selected"':"")+">"+o[m]+"</option>");p+="</select>"}if(d||(u+=p+(!s&&l&&c?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",s||!c)u+='<span class="ui-datepicker-year">'+i+"</span>";else{function v(e){var t=e.match(/c[+-].*/)?i+parseInt(e.substring(1),10):e.match(/[+-].*/)?_+parseInt(e,10):parseInt(e,10);return isNaN(t)?_:t}var g=this._get(e,"yearRange").split(":"),_=(new Date).getFullYear(),y=v(g[0]),b=Math.max(y,v(g[1]||""));for(y=a?Math.max(y,a.getFullYear()):y,b=n?Math.min(b,n.getFullYear()):b,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';y<=b;y++)e.yearshtml+='<option value="'+y+'"'+(y==i?' selected="selected"':"")+">"+y+"</option>";e.yearshtml+="</select>",u+=e.yearshtml,e.yearshtml=null}return u+=this._get(e,"yearSuffix"),d&&(u+=(!s&&l&&c?"":"&#xa0;")+p),u+"</div>"},_adjustInstDate:function(e,t,i){var a=e.drawYear+("Y"==i?t:0),n=e.drawMonth+("M"==i?t:0),s=Math.min(e.selectedDay,this._getDaysInMonth(a,n))+("D"==i?t:0),r=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(a,n,s)));e.selectedDay=r.getDate(),e.drawMonth=e.selectedMonth=r.getMonth(),e.drawYear=e.selectedYear=r.getFullYear(),"M"!=i&&"Y"!=i||this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),a=this._getMinMaxDate(e,"max"),n=i&&t<i?i:t;return a&&a<n?a:n},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,a){var n=this._getNumberOfMonths(e),s=this._daylightSavingAdjust(new Date(i,a+(t<0?t:n[0]*n[1]),1));return t<0&&s.setDate(this._getDaysInMonth(s.getFullYear(),s.getMonth())),this._isInRange(e,s)},_isInRange:function(e,t){var i=this._getMinMaxDate(e,"min"),a=this._getMinMaxDate(e,"max");return(!i||t.getTime()>=i.getTime())&&(!a||t.getTime()<=a.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return{shortYearCutoff:t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,a){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var n=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(a,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),n,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return"string"==typeof e&&("isDisabled"==e||"getDate"==e||"widget"==e)||"option"==e&&2==arguments.length&&"string"==typeof arguments[1]?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){"string"==typeof e?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)})},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.2",window["DP_jQuery_"+dpuuid]=$}(jQuery),function(j){j.fn.circliful=function(x,e){var C=j.extend({fgcolor:"#556b2f",bgcolor:"#eee",fill:!1,width:15,dimension:200,fontsize:15,percent:50,animationstep:1,iconsize:"20px",iconcolor:"#999",border:"default",complete:null},x);return this.each(function(){var a,i,e=["fgcolor","bgcolor","fill","width","dimension","fontsize","animationstep","endPercent","icon","iconcolor","iconsize","border"],n={},s="",r=0,o=j(this),l=!1;if(o.addClass("circliful"),i=o,j.each(e,function(e,t){null!=i.data(t)?n[t]=i.data(t):n[t]=j(C).attr(t),"fill"==t&&null!=i.data("fill")&&(l=!0)}),null!=o.data("text")&&(a=o.data("text"),null!=o.data("icon")&&(s=j("<i></i>").addClass("fa "+j(this).data("icon")).css({color:n.iconcolor,"font-size":n.iconsize})),null!=o.data("type")&&"half"==(b=j(this).data("type"))?$(o,"circle-text-half",n.dimension/1.45):$(o,"circle-text",n.dimension)),null!=j(this).data("total")&&null!=j(this).data("part")){var t=j(this).data("total")/100;percent=(j(this).data("part")/t/100).toFixed(3),r=(j(this).data("part")/t).toFixed(3)}else null!=j(this).data("percent")?(percent=j(this).data("percent")/100,r=j(this).data("percent")):percent=C.percent/100;null!=j(this).data("info")&&(j(this).data("info"),null!=j(this).data("type")?(b=j(this).data("type"),w(o,"half"==b?.9:1.25)):w(o,1.25)),j(this).width(n.dimension+"px");var c=j("<canvas></canvas>").attr({width:n.dimension,height:n.dimension}).appendTo(j(this)).get(0),d=c.getContext("2d"),u=c.width/2,p=c.height/2,h=(n.percent,Math.PI,c.width/2.5),f=2.3*Math.PI,m=0,v=0===n.animationstep?r:0,g=Math.max(n.animationstep,0),_=2*Math.PI,y=Math.PI/2,b="",k=!0;function $(e,t,i){j("<span></span>").appendTo(e).addClass(t).text(a).prepend(s).css({"line-height":i+"px","font-size":n.fontsize+"px"})}function w(e,t){j("<span></span>").appendTo(e).addClass("circle-info-half").css("line-height",n.dimension*t+"px")}null!=j(this).data("type")&&"half"==(b=j(this).data("type"))&&(f=2*Math.PI,m=3.13,_=+Math.PI,y=Math.PI/.996),function e(t){d.clearRect(0,0,c.width,c.height),d.beginPath(),d.arc(u,p,h,m,f,!1),d.lineWidth=n.width+1,d.strokeStyle=n.bgcolor,d.stroke(),l&&(d.fillStyle=n.fill,d.fill()),d.beginPath(),d.arc(u,p,h,-y,_*t-y,!1),"outline"==n.border?d.lineWidth=n.width+13:"inline"==n.border&&(d.lineWidth=n.width-13),d.strokeStyle=n.fgcolor,d.stroke(),v<r&&(v+=g,requestAnimationFrame(function(){e(Math.min(v,r)/100)},o)),v==r&&k&&void 0!==x&&j.isFunction(x.complete)&&(x.complete(),k=!1)}(v/100)})}}(jQuery),$.datepicker._get_original=$.datepicker._get,$.datepicker._get=function(e,t){var i=$.datepicker._get_original(e,t),a=e.settings.range;if(!a)return i;var n=this;switch(a){case"period":case"multiple":var s=$(this.dpDiv).data("datepickerExtensionRange");switch(s||(s=new _datepickerExtension,$(this.dpDiv).data("datepickerExtensionRange",s)),s.range=a,s.range_multiple_max=e.settings.range_multiple_max||0,t){case"onSelect":r=(r=i)||function(){},i=function(e,t){s.onSelect(e,t),r(e,t,s),n._datepickerShowing=!1,setTimeout(function(){n._updateDatepicker(t),n._datepickerShowing=!0}),s.setClassActive(t)};break;case"beforeShowDay":r=(r=i)||function(){return[!0,""]},i=function(e){var t=r(e);return s.fillDay(e,t)};break;case"beforeShow":r=(r=i)||function(){},i=function(e,t){r(e,t),s.setClassActive(t)};break;case"onChangeMonthYear":var r;r=(r=i)||function(){},i=function(e,t,i){r(e,t,i),s.setClassActive(i)}}}return i},$.datepicker._setDate_original=$.datepicker._setDate,$.datepicker._setDate=function(t,e,i){var a=t.settings.range;if(!a)return $.datepicker._setDate_original(t,e,i);var n=this.dpDiv.data("datepickerExtensionRange");if(!n)return $.datepicker._setDate_original(t,e,i);switch(a){case"period":"object"==typeof e&&null!=e.length||(e=[e,e]),n.step=0,$.datepicker._setDate_original(t,e[0],i),n.startDate=this._getDate(t),n.startDateText=this._formatDate(t),$.datepicker._setDate_original(t,e[1],i),n.endDate=this._getDate(t),n.endDateText=this._formatDate(t),n.setClassActive(t);break;case"multiple":"object"==typeof e&&null!=e.length||(e=[e]),n.dates=[],n.datesText=[];var s=this;$.map(e,function(e){$.datepicker._setDate_original(t,e,i),n.dates.push(s._getDate(t)),n.datesText.push(s._formatDate(t))}),n.setClassActive(t)}};var _datepickerExtension=function(){this.range=!1,this.range_multiple_max=0,this.step=0,this.dates=[],this.datesText=[],this.startDate=null,this.endDate=null,this.startDateText="",this.endDateText="",this.onSelect=function(e,t){switch(this.range){case"period":return this.onSelectPeriod(e,t);case"multiple":return this.onSelectMultiple(e,t)}},this.onSelectPeriod=function(e,t){this.step++,this.step%=2,this.step?(this.startDate=this.getSelectedDate(t),this.endDate=this.startDate,this.startDateText=e,this.endDateText=this.startDateText):(this.endDate=this.getSelectedDate(t),this.endDateText=e,this.startDate.getTime()>this.endDate.getTime()&&(this.endDate=this.startDate,this.startDate=this.getSelectedDate(t),this.endDateText=this.startDateText,this.startDateText=e))},this.onSelectMultiple=function(e,t){var i=this.getSelectedDate(t),a=-1;$.map(this.dates,function(e,t){e.getTime()==i.getTime()&&(a=t)});var n=$.inArray(e,this.datesText);-1!=a?this.dates.splice(a,1):this.dates.push(i),-1!=n?this.datesText.splice(n,1):this.datesText.push(e),this.range_multiple_max&&this.dates.length>this.range_multiple_max&&(this.dates.splice(0,1),this.datesText.splice(0,1))},this.fillDay=function(e,t){var i=t[1];switch(1==e.getDate()&&(i+=" first-of-month"),e.getDate()==new Date(e.getFullYear(),e.getMonth()+1,0).getDate()&&(i+=" last-of-month"),t[1]=i.trim(),this.range){case"period":return this.fillDayPeriod(e,t);case"multiple":return this.fillDayMultiple(e,t)}},this.fillDayPeriod=function(e,t){if(!this.startDate||!this.endDate)return t;var i=t[1];return e>=this.startDate&&e<=this.endDate&&(i+=" selected"),e.getTime()==this.startDate.getTime()&&(i+=" selected-start"),e.getTime()==this.endDate.getTime()&&(i+=" selected-end"),t[1]=i.trim(),t},this.fillDayMultiple=function(t,e){var i=e[1],a=!1;return $.map(this.dates,function(e){e.getTime()==t.getTime()&&(a=!0)}),a&&(i+=" selected selected-start selected-end"),e[1]=i.trim(),e},this.getSelectedDate=function(e){return new Date(e.selectedYear,e.selectedMonth,e.selectedDay)},this.setClassActive=function(e){var t=this;setTimeout(function(){$("td.selected > *",e.dpDiv).addClass("ui-state-active"),"multiple"==t.range&&$("td:not(.selected)",e.dpDiv).removeClass("ui-datepicker-current-day").children().removeClass("ui-state-active")})}};jQuery.effects||function(o){var i,r,l,d,u,c,e,p,t,h,f,m,v,a,g,n=!1!==o.uiBackCompat,s="ui-effects-";function _(e,t,i,a){return o.isPlainObject(e)&&(e=(t=e).effect),e={effect:e},null==t&&(t={}),o.isFunction(t)&&(a=t,i=null,t={}),"number"!=typeof t&&!o.fx.speeds[t]||(a=i,i=t,t={}),o.isFunction(i)&&(a=i,i=null),t&&o.extend(e,t),i=i||t.duration,e.duration=o.fx.off?0:"number"==typeof i?i:i in o.fx.speeds?o.fx.speeds[i]:o.fx.speeds._default,e.complete=a||t.complete,e}function y(e){return!e||"number"==typeof e||o.fx.speeds[e]||"string"==typeof e&&!o.effects.effect[e]&&(!n||!o.effects[e])}function b(){var e,t,i=this.ownerDocument.defaultView?this.ownerDocument.defaultView.getComputedStyle(this,null):this.currentStyle,a={};if(i&&i.length&&i[0]&&i[i[0]])for(t=i.length;t--;)"string"==typeof i[e=i[t]]&&(a[o.camelCase(e)]=i[e]);else for(e in i)"string"==typeof i[e]&&(a[e]=i[e]);return a}function k(e,t,i){var a=m[t.type]||{};return null==e?i||!t.def?null:t.def:(e=a.floor?~~e:parseFloat(e),isNaN(e)?t.def:a.mod?(e+a.mod)%a.mod:e<0?0:a.max<e?a.max:e)}function $(r){var o=h(),l=o._rgba=[];return r=r.toLowerCase(),g(t,function(e,t){var i,a=t.re.exec(r),n=a&&t.parse(a),s=t.space||"rgba";return n?(i=o[s](n),o[f[s].cache]=i[f[s].cache],l=o._rgba=i._rgba,!1):u}),l.length?("0,0,0,0"===l.join()&&d.extend(l,c.transparent),o):c[r]}function w(e,t,i){return 6*(i=(i+1)%1)<1?e+6*(t-e)*i:2*i<1?t:3*i<2?e+6*(t-e)*(2/3-i):e}o.effects={effect:{}},d=jQuery,e="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),p=/^([\-+])=\s*(\d+\.?\d*)/,t=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(e){return[2.55*e[1],2.55*e[2],2.55*e[3],e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],h=d.Color=function(e,t,i,a){return new d.Color.fn.parse(e,t,i,a)},f={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},m={byte:{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},v=h.support={},a=d("<p>")[0],g=d.each,a.style.cssText="background-color:rgba(1,1,1,.5)",v.rgba=-1<a.style.backgroundColor.indexOf("rgba"),g(f,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),h.fn=d.extend(h.prototype,{parse:function(n,e,t,i){if(n===u)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=d(n).css(e),e=u);var s=this,a=d.type(n),r=this._rgba=[];return e!==u&&(n=[n,e,t,i],a="array"),"string"===a?this.parse($(n)||c._default):"array"===a?(g(f.rgba.props,function(e,t){r[t.idx]=k(n[t.idx],t)}),this):"object"===a?(g(f,n instanceof h?function(e,t){n[t.cache]&&(s[t.cache]=n[t.cache].slice())}:function(e,i){var a=i.cache;g(i.props,function(e,t){if(!s[a]&&i.to){if("alpha"===e||null==n[e])return;s[a]=i.to(s._rgba)}s[a][t.idx]=k(n[e],t,!0)}),s[a]&&o.inArray(null,s[a].slice(0,3))<0&&(s[a][3]=1,i.from&&(s._rgba=i.from(s[a])))}),this):u},is:function(e){var n=h(e),s=!0,r=this;return g(f,function(e,t){var i,a=n[t.cache];return a&&(i=r[t.cache]||t.to&&t.to(r._rgba)||[],g(t.props,function(e,t){return null!=a[t.idx]?s=a[t.idx]===i[t.idx]:u})),s}),s},_space:function(){var i=[],a=this;return g(f,function(e,t){a[t.cache]&&i.push(e)}),i.pop()},transition:function(e,r){var o=h(e),t=o._space(),i=f[t],a=0===this.alpha()?h("transparent"):this,l=a[i.cache]||i.to(a._rgba),c=l.slice();return o=o[i.cache],g(i.props,function(e,t){var i=t.idx,a=l[i],n=o[i],s=m[t.type]||{};null!==n&&(null===a?c[i]=n:(s.mod&&(s.mod/2<n-a?a+=s.mod:s.mod/2<a-n&&(a-=s.mod)),c[i]=k((n-a)*r+a,t)))}),this[t](c)},blend:function(e){if(1===this._rgba[3])return this;var t=this._rgba.slice(),i=t.pop(),a=h(e)._rgba;return h(d.map(t,function(e,t){return(1-i)*a[t]+i*e}))},toRgbaString:function(){var e="rgba(",t=d.map(this._rgba,function(e,t){return null==e?2<t?1:0:e});return 1===t[3]&&(t.pop(),e="rgb("),e+t.join()+")"},toHslaString:function(){var e="hsla(",t=d.map(this.hsla(),function(e,t){return null==e&&(e=2<t?1:0),t&&t<3&&(e=Math.round(100*e)+"%"),e});return 1===t[3]&&(t.pop(),e="hsl("),e+t.join()+")"},toHexString:function(e){var t=this._rgba.slice(),i=t.pop();return e&&t.push(~~(255*i)),"#"+d.map(t,function(e){return 1===(e=(e||0).toString(16)).length?"0"+e:e}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),h.fn.parse.prototype=h.fn,f.hsla.to=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t,i,a=e[0]/255,n=e[1]/255,s=e[2]/255,r=e[3],o=Math.max(a,n,s),l=Math.min(a,n,s),c=o-l,d=o+l,u=.5*d;return t=l===o?0:a===o?60*(n-s)/c+360:n===o?60*(s-a)/c+120:60*(a-n)/c+240,i=0==u||1==u?u:u<=.5?c/d:c/(2-d),[Math.round(t)%360,i,u,null==r?1:r]},f.hsla.from=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t=e[0]/360,i=e[1],a=e[2],n=e[3],s=a<=.5?a*(1+i):a+i-a*i,r=2*a-s;return[Math.round(255*w(r,s,t+1/3)),Math.round(255*w(r,s,t)),Math.round(255*w(r,s,t-1/3)),n]},g(f,function(l,e){var i=e.props,r=e.cache,o=e.to,c=e.from;h.fn[l]=function(e){if(o&&!this[r]&&(this[r]=o(this._rgba)),e===u)return this[r].slice();var t,a=d.type(e),n="array"===a||"object"===a?e:arguments,s=this[r].slice();return g(i,function(e,t){var i=n["object"===a?e:t.idx];null==i&&(i=s[t.idx]),s[t.idx]=k(i,t)}),c?((t=h(c(s)))[r]=s,t):h(s)},g(i,function(r,o){h.fn[r]||(h.fn[r]=function(e){var t,i=d.type(e),a="alpha"===r?this._hsla?"hsla":"rgba":l,n=this[a](),s=n[o.idx];return"undefined"===i?s:("function"===i&&(e=e.call(this,s),i=d.type(e)),null==e&&o.empty?this:("string"===i&&((t=p.exec(e))&&(e=s+parseFloat(t[2])*("+"===t[1]?1:-1))),n[o.idx]=e,this[a](n)))})})}),g(e,function(e,s){d.cssHooks[s]={set:function(e,t){var i,a,n="";if("string"!==d.type(t)||(i=$(t))){if(t=h(i||t),!v.rgba&&1!==t._rgba[3]){for(a="backgroundColor"===s?e.parentNode:e;(""===n||"transparent"===n)&&a&&a.style;)try{n=d.css(a,"backgroundColor"),a=a.parentNode}catch(e){}t=t.blend(n&&"transparent"!==n?n:"_default")}t=t.toRgbaString()}try{e.style[s]=t}catch(e){}}},d.fx.step[s]=function(e){e.colorInit||(e.start=h(e.elem,s),e.end=h(e.end),e.colorInit=!0),d.cssHooks[s].set(e.elem,e.start.transition(e.end,e.pos))}}),d.cssHooks.borderColor={expand:function(i){var a={};return g(["Top","Right","Bottom","Left"],function(e,t){a["border"+t+"Color"]=i}),a}},c=d.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"},r=["add","remove","toggle"],l={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1},o.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,t){o.fx.step[t]=function(e){("none"!==e.end&&!e.setAttr||1===e.pos&&!e.setAttr)&&(jQuery.style(e.elem,t,e.end),e.setAttr=!0)}}),o.effects.animateClass=function(n,e,t,i){var s=o.speed(e,t,i);return this.queue(function(){var e,i=o(this),t=i.attr("class")||"",a=s.children?i.find("*").andSelf():i;a=a.map(function(){return{el:o(this),start:b.call(this)}}),(e=function(){o.each(r,function(e,t){n[t]&&i[t+"Class"](n[t])})})(),a=a.map(function(){return this.end=b.call(this.el[0]),this.diff=function(e,t){var i,a,n={};for(i in t)a=t[i],e[i]!==a&&(l[i]||!o.fx.step[i]&&isNaN(parseFloat(a))||(n[i]=a));return n}(this.start,this.end),this}),i.attr("class",t),a=a.map(function(){var e=this,t=o.Deferred(),i=jQuery.extend({},s,{queue:!1,complete:function(){t.resolve(e)}});return this.el.animate(this.diff,i),t.promise()}),o.when.apply(o,a.get()).done(function(){e(),o.each(arguments,function(){var t=this.el;o.each(this.diff,function(e){t.css(e,"")})}),s.complete.call(i[0])})})},o.fn.extend({_addClass:o.fn.addClass,addClass:function(e,t,i,a){return t?o.effects.animateClass.call(this,{add:e},t,i,a):this._addClass(e)},_removeClass:o.fn.removeClass,removeClass:function(e,t,i,a){return t?o.effects.animateClass.call(this,{remove:e},t,i,a):this._removeClass(e)},_toggleClass:o.fn.toggleClass,toggleClass:function(e,t,i,a,n){return"boolean"==typeof t||void 0===t?i?o.effects.animateClass.call(this,t?{add:e}:{remove:e},i,a,n):this._toggleClass(e,t):o.effects.animateClass.call(this,{toggle:e},t,i,a)},switchClass:function(e,t,i,a,n){return o.effects.animateClass.call(this,{add:t,remove:e},i,a,n)}}),o.extend(o.effects,{version:"1.9.2",save:function(e,t){for(var i=0;t.length>i;i++)null!==t[i]&&e.data(s+t[i],e[0].style[t[i]])},restore:function(e,t){var i,a;for(a=0;t.length>a;a++)null!==t[a]&&(void 0===(i=e.data(s+t[a]))&&(i=""),e.css(t[a],i))},setMode:function(e,t){return"toggle"===t&&(t=e.is(":hidden")?"show":"hide"),t},getBaseline:function(e,t){var i,a;switch(e[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=e[0]/t.height}switch(e[1]){case"left":a=0;break;case"center":a=.5;break;case"right":a=1;break;default:a=e[1]/t.width}return{x:a,y:i}},createWrapper:function(i){if(i.parent().is(".ui-effects-wrapper"))return i.parent();var a={width:i.outerWidth(!0),height:i.outerHeight(!0),float:i.css("float")},e=o("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),t={width:i.width(),height:i.height()},n=document.activeElement;try{n.id}catch(e){n=document.body}return i.wrap(e),i[0]!==n&&!o.contains(i[0],n)||o(n).focus(),e=i.parent(),"static"===i.css("position")?(e.css({position:"relative"}),i.css({position:"relative"})):(o.extend(a,{position:i.css("position"),zIndex:i.css("z-index")}),o.each(["top","left","bottom","right"],function(e,t){a[t]=i.css(t),isNaN(parseInt(a[t],10))&&(a[t]="auto")}),i.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),i.css(t),e.css(a).show()},removeWrapper:function(e){var t=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),e[0]!==t&&!o.contains(e[0],t)||o(t).focus()),e},setTransition:function(a,e,n,s){return s=s||{},o.each(e,function(e,t){var i=a.cssUnit(t);0<i[0]&&(s[t]=i[0]*n+i[1])}),s}}),o.fn.extend({effect:function(){function e(e){function t(){o.isFunction(a)&&a.call(i[0]),o.isFunction(e)&&e()}var i=o(this),a=s.complete,n=s.mode;(i.is(":hidden")?"hide"===n:"show"===n)?t():r.call(i[0],s,t)}var s=_.apply(this,arguments),t=s.mode,i=s.queue,r=o.effects.effect[s.effect],a=!r&&n&&o.effects[s.effect];return o.fx.off||!r&&!a?t?this[t](s.duration,s.complete):this.each(function(){s.complete&&s.complete.call(this)}):r?!1===i?this.each(e):this.queue(i||"fx",e):a.call(this,{options:s,duration:s.duration,callback:s.complete,mode:s.mode})},_show:o.fn.show,show:function(e){if(y(e))return this._show.apply(this,arguments);var t=_.apply(this,arguments);return t.mode="show",this.effect.call(this,t)},_hide:o.fn.hide,hide:function(e){if(y(e))return this._hide.apply(this,arguments);var t=_.apply(this,arguments);return t.mode="hide",this.effect.call(this,t)},__toggle:o.fn.toggle,toggle:function(e){if(y(e)||"boolean"==typeof e||o.isFunction(e))return this.__toggle.apply(this,arguments);var t=_.apply(this,arguments);return t.mode="toggle",this.effect.call(this,t)},cssUnit:function(e){var i=this.css(e),a=[];return o.each(["em","px","%","pt"],function(e,t){0<i.indexOf(t)&&(a=[parseFloat(i),t])}),a}}),i={},o.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,e){i[e]=function(e){return Math.pow(e,t+2)}}),o.extend(i,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return 0===e||1===e?e:-Math.pow(2,8*(e-1))*Math.sin((80*(e-1)-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){for(var t,i=4;((t=Math.pow(2,--i))-1)/11>e;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*t-2)/22-e,2)}}),o.each(i,function(e,t){o.easing["easeIn"+e]=t,o.easing["easeOut"+e]=function(e){return 1-t(1-e)},o.easing["easeInOut"+e]=function(e){return e<.5?t(2*e)/2:1-t(-2*e+2)/2}})}(jQuery),function(re){re.fn.fullpage=function(v){v=re.extend({menu:!1,anchors:[],navigation:!1,navigationPosition:"right",navigationColor:"#000",navigationTooltips:[],slidesNavigation:!1,slidesNavPosition:"bottom",scrollBar:!1,css3:!0,scrollingSpeed:700,autoScrolling:!0,easing:"easeInQuart",easingcss3:"ease",loopBottom:!1,loopTop:!1,loopHorizontal:!0,continuousVertical:!1,normalScrollElements:null,scrollOverflow:!1,touchSensitivity:5,normalScrollElementTouchThreshold:5,keyboardScrolling:!0,animateAnchor:!0,recordHistory:!0,controlArrows:!0,controlArrowColor:"#fff",verticalCentered:!0,resize:!0,sectionsColor:[],paddingTop:0,paddingBottom:0,fixedElements:null,responsive:0,sectionSelector:".section",slideSelector:".slide",afterLoad:null,onLeave:null,afterRender:null,afterResize:null,afterReBuild:null,afterSlideLoad:null,onSlideLeave:null},v),function(){v.continuousVertical&&(v.loopTop||v.loopBottom)&&(v.continuousVertical=!1,se("warn","Option `loopTop/loopBottom` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled"));v.continuousVertical&&v.scrollBar&&(v.continuousVertical=!1,se("warn","Option `scrollBar` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled"));re.each(v.anchors,function(e,t){(re("#"+t).length||re('[name="'+t+'"]').length)&&se("error","data-anchor tags can not have the same value as any `id` element on the site (or `name` element for IE).")})}(),re.extend(re.easing,{easeInQuart:function(e,t,i,a,n){return a*(t/=n)*t*t*t+i}});var i=600;re.fn.fullpage.setAutoScrolling=function(e,t){ne("autoScrolling",e,t);var i=re(".fp-section.active");v.autoScrolling&&!v.scrollBar?(re("html, body").css({overflow:"hidden",height:"100%"}),re.fn.fullpage.setRecordHistory(v.recordHistory,"internal"),o.css({"-ms-touch-action":"none","touch-action":"none"}),i.length&&ie(i.position().top)):(re("html, body").css({overflow:"visible",height:"initial"}),re.fn.fullpage.setRecordHistory(!1,"internal"),o.css({"-ms-touch-action":"","touch-action":""}),ie(0),re("html, body").scrollTop(i.position().top))},re.fn.fullpage.setRecordHistory=function(e,t){ne("recordHistory",e,t)},re.fn.fullpage.setScrollingSpeed=function(e,t){ne("scrollingSpeed",e,t)},re.fn.fullpage.setMouseWheelScrolling=function(e){e?document.addEventListener?(document.addEventListener("mousewheel",A,!1),document.addEventListener("wheel",A,!1)):document.attachEvent("onmousewheel",A):document.addEventListener?(document.removeEventListener("mousewheel",A,!1),document.removeEventListener("wheel",A,!1)):document.detachEvent("onmousewheel",A)},re.fn.fullpage.setAllowScrolling=function(i,e){void 0!==e?(e=e.replace(" ","").split(","),re.each(e,function(e,t){!function(e,t){switch(t){case"up":d.up=e;break;case"down":d.down=e;break;case"left":d.left=e;break;case"right":d.right=e;break;case"all":re.fn.fullpage.setAllowScrolling(e)}}(i,t)})):i?(re.fn.fullpage.setMouseWheelScrolling(!0),function(){if(a||r){var e=J();re(document).off("touchstart "+e.down).on("touchstart "+e.down,T),re(document).off("touchmove "+e.move).on("touchmove "+e.move,S)}}()):(re.fn.fullpage.setMouseWheelScrolling(!1),function(){if(a||r){var e=J();re(document).off("touchstart "+e.down),re(document).off("touchmove "+e.move)}}())},re.fn.fullpage.setKeyboardScrolling=function(e){v.keyboardScrolling=e},re.fn.fullpage.moveSectionUp=function(){var e=re(".fp-section.active").prev(".fp-section");e.length||!v.loopTop&&!v.continuousVertical||(e=re(".fp-section").last()),e.length&&D(e,null,!0)},re.fn.fullpage.moveSectionDown=function(){var e=re(".fp-section.active").next(".fp-section");e.length||!v.loopBottom&&!v.continuousVertical||(e=re(".fp-section").first()),e.length&&D(e,null,!1)},re.fn.fullpage.moveTo=function(e,t){var i="";i=isNaN(e)?re('[data-anchor="'+e+'"]'):re(".fp-section").eq(e-1),void 0!==t?G(e,t):0<i.length&&D(i)},re.fn.fullpage.moveSlideRight=function(){e("next")},re.fn.fullpage.moveSlideLeft=function(){e("prev")};var p,s,n,h,f,g=!(re.fn.fullpage.reBuild=function(e){_=!0;var t=re(window).width();l=re(window).height(),v.resize&&function(e,t){if(e<825||t<900){var i=100*e/825,a=100*t/900,n=Math.min(i,a).toFixed(2);re("body").css("font-size",n+"%")}else re("body").css("font-size","100%")}(l,t),re(".fp-section").each(function(){var e=re(this).find(".fp-slides"),t=re(this).find(".fp-slide");v.verticalCentered&&re(this).find(".fp-tableCell").css("height",Y(re(this))+"px"),re(this).css("height",l+"px"),v.scrollOverflow&&(t.length?t.each(function(){U(re(this))}):U(re(this))),t.length&&P(e,e.find(".fp-slide.active"))});var i=re(".fp-section.active");i.index(".fp-section")&&D(i),_=!1,re.isFunction(v.afterResize)&&e&&v.afterResize.call(o),re.isFunction(v.afterReBuild)&&!e&&v.afterReBuild.call(o)}),a=navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|BB10|Windows Phone|Tizen|Bada)/),r="ontouchstart"in window||0<navigator.msMaxTouchPoints||navigator.maxTouchPoints,o=re(this),l=re(window).height(),m=!1,_=!1,c="fullpage-wrapper",d={up:!0,down:!0,left:!0,right:!0},u=re.extend(!0,{},v);function y(){re(".fp-section").each(function(){var e=re(this).find(".fp-slide");e.length?e.each(function(){U(re(this))}):U(re(this))}),re.isFunction(v.afterRender)&&v.afterRender.call(this)}re.fn.fullpage.setAllowScrolling(!0),v.css3&&(v.css3=function(){var e,t=document.createElement("p"),i={webkitTransform:"-webkit-transform",OTransform:"-o-transform",msTransform:"-ms-transform",MozTransform:"-moz-transform",transform:"transform"};for(var a in document.body.insertBefore(t,null),i)void 0!==t.style[a]&&(t.style[a]="translate3d(1px,1px,1px)",e=window.getComputedStyle(t).getPropertyValue(i[a]));return document.body.removeChild(t),void 0!==e&&0<e.length&&"none"!==e}()),re(this).length?(o.css({height:"100%",position:"relative"}),o.addClass(c)):se("error","Error! Fullpage.js needs to be initialized with a selector. For example: $('#myContainer').fullpage();"),re(v.sectionSelector).each(function(){re(this).addClass("fp-section")}),re(v.slideSelector).each(function(){re(this).addClass("fp-slide")}),v.navigation&&function(){re("body").append('<div id="fp-nav"><ul></ul></div>'),(n=re("#fp-nav")).css("color",v.navigationColor),n.addClass(v.navigationPosition);for(var e=0;e<re(".fp-section").length;e++){var t="";v.anchors.length&&(t=v.anchors[e]);var i='<li><a href="#'+t+'"><span></span></a>',a=v.navigationTooltips[e];void 0!==a&&""!=a&&(i+='<div class="fp-tooltip '+v.navigationPosition+'">'+a+"</div>"),i+="</li>",n.find("ul").append(i)}}(),re(".fp-section").each(function(e){var t=re(this),i=re(this).find(".fp-slide"),a=i.length;if(e||0!==re(".fp-section.active").length||re(this).addClass("active"),re(this).css("height",l+"px"),(v.paddingTop||v.paddingBottom)&&re(this).css("padding",v.paddingTop+" 0 "+v.paddingBottom+" 0"),void 0!==v.sectionsColor[e]&&re(this).css("background-color",v.sectionsColor[e]),void 0!==v.anchors[e]&&re(this).attr("data-anchor",v.anchors[e]),1<a){var n=100*a,s=100/a;i.wrapAll('<div class="fp-slidesContainer" />'),i.parent().wrap('<div class="fp-slides" />'),re(this).find(".fp-slidesContainer").css("width",n+"%"),v.controlArrows&&function(e){e.find(".fp-slides").after('<div class="fp-controlArrow fp-prev"></div><div class="fp-controlArrow fp-next"></div>'),"#fff"!=v.controlArrowColor&&(e.find(".fp-controlArrow.fp-next").css("border-color","transparent transparent transparent "+v.controlArrowColor),e.find(".fp-controlArrow.fp-prev").css("border-color","transparent "+v.controlArrowColor+" transparent transparent"));v.loopHorizontal||e.find(".fp-controlArrow.fp-prev").hide()}(re(this)),v.slidesNavigation&&function(e,t){e.append('<div class="fp-slidesNav"><ul></ul></div>');var i=e.find(".fp-slidesNav");i.addClass(v.slidesNavPosition);for(var a=0;a<t;a++)i.find("ul").append('<li><a href="#"><span></span></a></li>');i.css("margin-left","-"+i.width()/2+"px"),i.find("li").first().find("a").addClass("active")}(re(this),a),i.each(function(e){re(this).css("width",s+"%"),v.verticalCentered&&W(re(this))});var r=t.find(".fp-slide.active");r.length?te(r):i.eq(0).addClass("active")}else v.verticalCentered&&W(re(this))}).promise().done(function(){re.fn.fullpage.setAutoScrolling(v.autoScrolling,"internal");var e=re(".fp-section.active").find(".fp-slide.active");e.length&&(0!==re(".fp-section.active").index(".fp-section")||0===re(".fp-section.active").index(".fp-section")&&0!==e.index())&&te(e),v.fixedElements&&v.css3&&re(v.fixedElements).appendTo("body"),v.navigation&&(n.css("margin-top","-"+n.height()/2+"px"),n.find("li").eq(re(".fp-section.active").index(".fp-section")).find("a").addClass("active")),v.menu&&v.css3&&re(v.menu).closest(".fullpage-wrapper").length&&re(v.menu).appendTo("body"),v.scrollOverflow?("complete"===document.readyState&&y(),re(window).on("load",y)):re.isFunction(v.afterRender)&&v.afterRender.call(o),N();var t=window.location.hash.replace("#","").split("/")[0];if(t.length){var i=re('[data-anchor="'+t+'"]');!v.animateAnchor&&i.length&&(v.autoScrolling?ie(i.position().top):(ie(0),Z(t),re("html, body").scrollTop(i.position().top)),H(t,null),re.isFunction(v.afterLoad)&&v.afterLoad.call(i,t,i.index(".fp-section")+1),i.addClass("active").siblings().removeClass("active"))}re(window).on("load",function(){var e,t,i;e=window.location.hash.replace("#","").split("/"),t=e[0],i=e[1],t&&G(t,i)})});var b=!1;function t(){var e;if(!v.autoScrolling||v.scrollBar){var i=re(window).scrollTop(),a=0,n=Math.abs(i-re(".fp-section").first().offset().top);re(".fp-section").each(function(e){var t=Math.abs(i-re(this).offset().top);t<n&&(a=e,n=t)}),e=re(".fp-section").eq(a)}if((!v.autoScrolling||v.scrollBar)&&!e.hasClass("active")){b=!0;var t=re(".fp-section.active"),s=t.index(".fp-section")+1,r=z(e),o=e.data("anchor"),l=e.index(".fp-section")+1,c=e.find(".fp-slide.active");if(c.length)var d=c.data("anchor"),u=c.index();e.addClass("active").siblings().removeClass("active"),m||(re.isFunction(v.onLeave)&&v.onLeave.call(t,s,l,r),re.isFunction(v.afterLoad)&&v.afterLoad.call(e,o,l)),H(o,0),v.anchors.length&&!m&&K(u,d,p=o,l),clearTimeout(h),h=setTimeout(function(){b=!1},100)}v.scrollBar&&(clearTimeout(f),f=setTimeout(function(){m||(re(".fp-section.active").is(e)&&(_=!0),D(e),_=!1)},1e3))}function k(e){return e.find(".fp-slides").length?e.find(".fp-slide.active").find(".fp-scrollable"):e.find(".fp-scrollable")}function $(e,t){var i,a;if(d[e])if(a="down"==e?(i="bottom",re.fn.fullpage.moveSectionDown):(i="top",re.fn.fullpage.moveSectionUp),0<t.length){if(!function(e,t){{if("top"===e)return!t.scrollTop();if("bottom"===e)return t.scrollTop()+1+t.innerHeight()>=t[0].scrollHeight}}(i,t))return 1;a()}else a()}re(window).on("scroll",t);var w=0,x=0,C=0,j=0;function S(e){var t=e.originalEvent;if(!function e(t,i){i=i||0;var a=re(t).parent();return!!(i<v.normalScrollElementTouchThreshold&&a.is(v.normalScrollElements))||i!=v.normalScrollElementTouchThreshold&&e(a,++i)}(e.target)){v.autoScrolling&&e.preventDefault();var i=re(".fp-section.active"),a=k(i);if(!m&&!g){var n=ee(t);C=n.y,j=n.x,i.find(".fp-slides").length&&Math.abs(x-j)>Math.abs(w-C)?Math.abs(x-j)>re(window).width()/100*v.touchSensitivity&&(j<x?d.right&&re.fn.fullpage.moveSlideRight():d.left&&re.fn.fullpage.moveSlideLeft()):v.autoScrolling&&Math.abs(w-C)>re(window).height()/100*v.touchSensitivity&&(C<w?$("down",a):w<C&&$("up",a))}}}function T(e){var t=e.originalEvent;v.scrollBar&&re("html,body").stop();var i=ee(t);w=i.y,x=i.x}function A(e){if(v.autoScrolling){e=window.event||e;var t=Math.max(-1,Math.min(1,e.wheelDelta||-e.deltaY||-e.detail));v.scrollBar&&(e.preventDefault?e.preventDefault():e.returnValue=!1);var i=k(re(".fp-section.active"));return m||$(t<0?"down":"up",i),!1}v.scrollBar&&re("html,body").stop()}function e(e){var t=re(".fp-section.active").find(".fp-slides");if(t.length&&!g){var i=t.find(".fp-slide.active"),a=null;if(!(a="prev"===e?i.prev(".fp-slide"):i.next(".fp-slide")).length){if(!v.loopHorizontal)return;a="prev"===e?i.siblings(":last"):i.siblings(":first")}g=!0,P(t,a)}}function E(){re(".fp-slide.active").each(function(){te(re(this))})}function D(e,t,i){var a=e.position();if(void 0!==a){var n={element:e,callback:t,isMovementUp:i,dest:a,dtop:a.top,yMovement:z(e),anchorLink:e.data("anchor"),sectionIndex:e.index(".fp-section"),activeSlide:e.find(".fp-slide.active"),activeSection:re(".fp-section.active"),leavingSection:re(".fp-section.active").index(".fp-section")+1,localIsResizing:_};if(!(n.activeSection.is(e)&&!_||v.scrollBar&&re(window).scrollTop()===n.dtop)){if(n.activeSlide.length)var s=n.activeSlide.data("anchor"),r=n.activeSlide.index();v.autoScrolling&&v.continuousVertical&&void 0!==n.isMovementUp&&(!n.isMovementUp&&"up"==n.yMovement||n.isMovementUp&&"down"==n.yMovement)&&(n=function(e){e.isMovementUp?re(".fp-section.active").before(e.activeSection.nextAll(".fp-section")):re(".fp-section.active").after(e.activeSection.prevAll(".fp-section").get().reverse());return ie(re(".fp-section.active").position().top),E(),e.wrapAroundElements=e.activeSection,e.dest=e.element.position(),e.dtop=e.dest.top,e.yMovement=z(e.element),e}(n)),e.addClass("active").siblings().removeClass("active"),m=!0,K(r,s,n.anchorLink,n.sectionIndex),re.isFunction(v.onLeave)&&!n.localIsResizing&&v.onLeave.call(n.activeSection,n.leavingSection,n.sectionIndex+1,n.yMovement),function(e){if(v.css3&&v.autoScrolling&&!v.scrollBar){V("translate3d(0px, -"+e.dtop+"px, 0px)",!0),setTimeout(function(){M(e)},v.scrollingSpeed)}else{var t=function(e){var t={};v.autoScrolling&&!v.scrollBar?(t.options={top:-e.dtop},t.element="."+c):(t.options={scrollTop:e.dtop},t.element="html, body");return t}(e);re(t.element).animate(t.options,v.scrollingSpeed,v.easing).promise().done(function(){M(e)})}}(n),p=n.anchorLink,v.autoScrolling&&H(n.anchorLink,n.sectionIndex)}}}function M(e){var t;(t=e).wrapAroundElements&&t.wrapAroundElements.length&&(t.isMovementUp?re(".fp-section:first").before(t.wrapAroundElements):re(".fp-section:last").after(t.wrapAroundElements),ie(re(".fp-section.active").position().top),E()),re.isFunction(v.afterLoad)&&!e.localIsResizing&&v.afterLoad.call(e.element,e.anchorLink,e.sectionIndex+1),setTimeout(function(){m=!1,re.isFunction(e.callback)&&e.callback.call(this)},i)}function I(){if(!b){var e=window.location.hash.replace("#","").split("/"),t=e[0],i=e[1];if(t.length)(t&&t!==p&&!(void 0===p)||void 0===p&&void 0===i&&!g||!g&&s!=i)&&G(t,i)}}function P(e,t){var i=t.position(),a=e.find(".fp-slidesContainer").parent(),n=t.index(),s=e.closest(".fp-section"),r=s.index(".fp-section"),o=s.data("anchor"),l=s.find(".fp-slidesNav"),c=t.data("anchor"),d=_;if(v.onSlideLeave){var u=s.find(".fp-slide.active"),p=u.index(),h=function(e,t){if(e==t)return"none";if(t<e)return"left";return"right"}(p,n);d||"none"===h||re.isFunction(v.onSlideLeave)&&v.onSlideLeave.call(u,o,r+1,p,h)}t.addClass("active").siblings().removeClass("active"),void 0===c&&(c=n),!v.loopHorizontal&&v.controlArrows&&(s.find(".fp-controlArrow.fp-prev").toggle(0!=n),s.find(".fp-controlArrow.fp-next").toggle(!t.is(":last-child"))),s.hasClass("active")&&K(n,c,o,r);function f(){d||re.isFunction(v.afterSlideLoad)&&v.afterSlideLoad.call(t,o,r+1,c,n),g=!1}if(v.css3){var m="translate3d(-"+i.left+"px, 0px, 0px)";R(e.find(".fp-slidesContainer"),v.scrollingSpeed).css(ae(m)),setTimeout(function(){f()},v.scrollingSpeed,v.easing)}else a.animate({scrollLeft:i.left},v.scrollingSpeed,v.easing,function(){f()});l.find(".active").removeClass("active"),l.find("li").eq(n).find("a").addClass("active")}re(window).on("hashchange",I),re(document).keydown(function(e){if(v.keyboardScrolling&&v.autoScrolling&&(40!=e.which&&38!=e.which||e.preventDefault(),!m))switch(e.which){case 38:case 33:re.fn.fullpage.moveSectionUp();break;case 40:case 34:re.fn.fullpage.moveSectionDown();break;case 36:re.fn.fullpage.moveTo(1);break;case 35:re.fn.fullpage.moveTo(re(".fp-section").length);break;case 37:re.fn.fullpage.moveSlideLeft();break;case 39:re.fn.fullpage.moveSlideRight();break;default:return}}),re(document).on("click touchstart","#fp-nav a",function(e){e.preventDefault();var t=re(this).parent().index();D(re(".fp-section").eq(t))}),re(document).on("click touchstart",".fp-slidesNav a",function(e){e.preventDefault();var t=re(this).closest(".fp-section").find(".fp-slides"),i=t.find(".fp-slide").eq(re(this).closest("li").index());P(t,i)}),v.normalScrollElements&&(re(document).on("mouseenter",v.normalScrollElements,function(){re.fn.fullpage.setMouseWheelScrolling(!1)}),re(document).on("mouseleave",v.normalScrollElements,function(){re.fn.fullpage.setMouseWheelScrolling(!0)})),re(".fp-section").on("click touchstart",".fp-controlArrow",function(){re(this).hasClass("fp-prev")?re.fn.fullpage.moveSlideLeft():re.fn.fullpage.moveSlideRight()}),re(window).resize(L);var O,F=l;function L(){if(N(),a){if("text"!==re(document.activeElement).attr("type")){var e=re(window).height();Math.abs(e-F)>20*Math.max(F,e)/100&&(re.fn.fullpage.reBuild(!0),F=e)}}else clearTimeout(O),O=setTimeout(function(){re.fn.fullpage.reBuild(!0)},500)}function N(){if(v.responsive){var e=o.hasClass("fp-responsive");re(window).width()<v.responsive?e||(re.fn.fullpage.setAutoScrolling(!1,"internal"),re("#fp-nav").hide(),o.addClass("fp-responsive")):e&&(re.fn.fullpage.setAutoScrolling(u.autoScrolling,"internal"),re("#fp-nav").show(),o.removeClass("fp-responsive"))}}function R(e){var t="all "+v.scrollingSpeed+"ms "+v.easingcss3;return e.removeClass("fp-notransition"),e.css({"-webkit-transition":t,transition:t})}function B(e){return e.addClass("fp-notransition")}function H(e,t){var i,a,n;i=e,v.menu&&(re(v.menu).find(".active").removeClass("active"),re(v.menu).find('[data-menuanchor="'+i+'"]').addClass("active")),a=e,n=t,v.navigation&&(re("#fp-nav").find(".active").removeClass("active"),a?re("#fp-nav").find('a[href="#'+a+'"]').addClass("active"):re("#fp-nav").find("li").eq(n).find("a").addClass("active"))}function z(e){var t=re(".fp-section.active").index(".fp-section"),i=e.index(".fp-section");return t==i?"none":i<t?"up":"down"}function U(e){e.css("overflow","hidden");var t,i=e.closest(".fp-section"),a=e.find(".fp-scrollable");a.length?t=a.get(0).scrollHeight:(t=e.get(0).scrollHeight,v.verticalCentered&&(t=e.find(".fp-tableCell").get(0).scrollHeight));var n=l-parseInt(i.css("padding-bottom"))-parseInt(i.css("padding-top"));n<t?a.length?a.css("height",n+"px").parent().css("height",n+"px"):(v.verticalCentered?e.find(".fp-tableCell").wrapInner('<div class="fp-scrollable" />'):e.wrapInner('<div class="fp-scrollable" />'),e.find(".fp-scrollable").slimScroll({allowPageScroll:!0,height:n+"px",size:"10px",alwaysVisible:!0})):q(e),e.css("overflow","")}function q(e){e.find(".fp-scrollable").children().first().unwrap().unwrap(),e.find(".slimScrollBar").remove(),e.find(".slimScrollRail").remove()}function W(e){e.addClass("fp-table").wrapInner('<div class="fp-tableCell" style="height:'+Y(e)+'px;" />')}function Y(e){var t=l;if(v.paddingTop||v.paddingBottom){var i=e;i.hasClass("fp-section")||(i=e.closest(".fp-section"));var a=parseInt(i.css("padding-top"))+parseInt(i.css("padding-bottom"));t=l-a}return t}function V(e,t){(t?R:B)(o),o.css(ae(e)),setTimeout(function(){o.removeClass("fp-notransition")},10)}function G(e,t){var i;void 0===t&&(t=0),i=isNaN(e)?re('[data-anchor="'+e+'"]'):re(".fp-section").eq(e-1),e===p||i.hasClass("active")?X(i,t):D(i,function(){X(i,t)})}function X(e,t){if(void 0!==t){var i=e.find(".fp-slides"),a=i.find('[data-anchor="'+t+'"]');a.length||(a=i.find(".fp-slide").eq(t)),a.length&&P(i,a)}}function K(e,t,i,a){var n="";v.anchors.length?(e?(void 0!==i&&(n=i),void 0===t&&(t=e),Q(n+"/"+(s=t))):(void 0!==e&&(s=t),Q(i)),Z(location.hash)):Z(void 0!==e?a+"-"+e:String(a))}function Q(e){if(v.recordHistory)location.hash=e;else if(a||r)history.replaceState(void 0,void 0,"#"+e);else{var t=window.location.href.split("#")[0];window.location.replace(t+"#"+e)}}function Z(e){e=e.replace("/","-").replace("#",""),re("body")[0].className=re("body")[0].className.replace(/\b\s?fp-viewing-[^\s]+\b/g,""),re("body").addClass("fp-viewing-"+e)}function J(){return window.PointerEvent?{down:"pointerdown",move:"pointermove"}:{down:"MSPointerDown",move:"MSPointerMove"}}function ee(e){var t=[];return t.y=void 0!==e.pageY&&(e.pageY||e.pageX)?e.pageY:e.touches[0].pageY,t.x=void 0!==e.pageX&&(e.pageY||e.pageX)?e.pageX:e.touches[0].pageX,t}function te(e){re.fn.fullpage.setScrollingSpeed(0,"internal"),P(e.closest(".fp-slides"),e),re.fn.fullpage.setScrollingSpeed(u.scrollingSpeed,"internal")}function ie(e){if(v.scrollBar)o.scrollTop(e);else if(v.css3){V("translate3d(0px, -"+e+"px, 0px)",!1)}else o.css("top",-e)}function ae(e){return{"-webkit-transform":e,"-moz-transform":e,"-ms-transform":e,transform:e}}function ne(e,t,i){v[e]=t,"internal"!==i&&(u[e]=t)}function se(e,t){console&&console[e]&&console[e]("fullPage: "+t)}re.fn.fullpage.destroy=function(e){re.fn.fullpage.setAutoScrolling(!1,"internal"),re.fn.fullpage.setAllowScrolling(!1),re.fn.fullpage.setKeyboardScrolling(!1),re(window).off("scroll",t).off("hashchange",I).off("resize",L),re(document).off("click","#fp-nav a").off("mouseenter","#fp-nav li").off("mouseleave","#fp-nav li").off("click",".fp-slidesNav a").off("mouseover",v.normalScrollElements).off("mouseout",v.normalScrollElements),re(".fp-section").off("click",".fp-controlArrow"),e&&(ie(0),re("#fp-nav, .fp-slidesNav, .fp-controlArrow").remove(),re(".fp-section").css({height:"","background-color":"",padding:""}),re(".fp-slide").css({width:""}),o.css({height:"",position:"","-ms-touch-action":"","touch-action":""}),re(".fp-section, .fp-slide").each(function(){q(re(this)),re(this).removeClass("fp-table active")}),B(o),B(o.find(".fp-easing")),o.find(".fp-tableCell, .fp-slidesContainer, .fp-slides").each(function(){re(this).replaceWith(this.childNodes)}),re("html, body").scrollTop(0))}}}(jQuery),"object"!=typeof JSON&&(JSON={}),function(){"use strict";function f(e){return e<10?"0"+e:e}function quote(e){return escapable.lastIndex=0,escapable.test(e)?'"'+e.replace(escapable,function(e){var t=meta[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+e+'"'}function str(e,t){var i,a,n,s,r,o=gap,l=t[e];switch(l&&"object"==typeof l&&"function"==typeof l.toJSON&&(l=l.toJSON(e)),"function"==typeof rep&&(l=rep.call(t,e,l)),typeof l){case"string":return quote(l);case"number":return isFinite(l)?String(l):"null";case"boolean":case"null":return String(l);case"object":if(!l)return"null";if(gap+=indent,r=[],"[object Array]"===Object.prototype.toString.apply(l)){for(s=l.length,i=0;i<s;i+=1)r[i]=str(i,l)||"null";return n=0===r.length?"[]":gap?"[\n"+gap+r.join(",\n"+gap)+"\n"+o+"]":"["+r.join(",")+"]",gap=o,n}if(rep&&"object"==typeof rep)for(s=rep.length,i=0;i<s;i+=1)"string"==typeof rep[i]&&((n=str(a=rep[i],l))&&r.push(quote(a)+(gap?": ":":")+n));else for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&((n=str(a,l))&&r.push(quote(a)+(gap?": ":":")+n));return n=0===r.length?"{}":gap?"{\n"+gap+r.join(",\n"+gap)+"\n"+o+"}":"{"+r.join(",")+"}",gap=o,n}}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(e){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(e){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;"function"!=typeof JSON.stringify&&(JSON.stringify=function(e,t,i){var a;if(indent=gap="","number"==typeof i)for(a=0;a<i;a+=1)indent+=" ";else"string"==typeof i&&(indent=i);if(!(rep=t)||"function"==typeof t||"object"==typeof t&&"number"==typeof t.length)return str("",{"":e});throw new Error("JSON.stringify")}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(e,t){var i,a,n=e[t];if(n&&"object"==typeof n)for(i in n)Object.prototype.hasOwnProperty.call(n,i)&&(void 0!==(a=walk(n,i))?n[i]=a:delete n[i]);return reviver.call(e,t,n)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})),/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}(),function(e){"use strict";var t=e.History=e.History||{},a=e.jQuery;if(void 0!==t.Adapter)throw new Error("History.js Adapter has already been loaded...");t.Adapter={bind:function(e,t,i){a(e).bind(t,i)},trigger:function(e,t,i){a(e).trigger(t,i)},extractEventData:function(e,t,i){return t&&t.originalEvent&&t.originalEvent[e]||i&&i[e]||void 0},onDomLoad:function(e){a(e)}},void 0!==t.init&&t.init()}(window),function(d){"use strict";var e=d.document,t=d.setTimeout||t,i=d.clearTimeout||i,o=d.setInterval||o,u=d.History=d.History||{};if(void 0!==u.initHtml4)throw new Error("History.js HTML4 Support has already been loaded...");u.initHtml4=function(){if(void 0!==u.initHtml4.initialized)return!1;u.initHtml4.initialized=!0,u.enabled=!0,u.savedHashes=[],u.isLastHash=function(e){return e===u.getHashByIndex()},u.isHashEqual=function(e,t){return(e=encodeURIComponent(e).replace(/%25/g,"%"))===(t=encodeURIComponent(t).replace(/%25/g,"%"))},u.saveHash=function(e){return!u.isLastHash(e)&&(u.savedHashes.push(e),!0)},u.getHashByIndex=function(e){return void 0===e?u.savedHashes[u.savedHashes.length-1]:e<0?u.savedHashes[u.savedHashes.length+e]:u.savedHashes[e]},u.discardedHashes={},u.discardedStates={},u.discardState=function(e,t,i){var a,n=u.getHashByState(e);return a={discardedState:e,backState:i,forwardState:t},u.discardedStates[n]=a,!0},u.discardHash=function(e,t,i){var a={discardedHash:e,backState:i,forwardState:t};return u.discardedHashes[e]=a,!0},u.discardedState=function(e){var t=u.getHashByState(e);return u.discardedStates[t]||!1},u.discardedHash=function(e){return u.discardedHashes[e]||!1},u.recycleState=function(e){var t=u.getHashByState(e);return u.discardedState(e)&&delete u.discardedStates[t],!0},u.emulated.hashChange&&(u.hashChangeInit=function(){u.checkerFunction=null;var i,a,n,s="",r=Boolean(u.getHash());return u.isInternetExplorer()?((i=e.createElement("iframe")).setAttribute("id","historyjs-iframe"),i.setAttribute("src","#"),i.style.display="none",e.body.appendChild(i),i.contentWindow.document.open(),i.contentWindow.document.close(),a="",n=!1,u.checkerFunction=function(){if(n)return!1;n=!0;var e=u.getHash(),t=u.getHash(i.contentWindow.document);return e!==s?(t!==(s=e)&&(a=t=e,i.contentWindow.document.open(),i.contentWindow.document.close(),i.contentWindow.document.location.hash=u.escapeHash(e)),u.Adapter.trigger(d,"hashchange")):t!==a&&(a=t,r&&""===t?u.back():u.setHash(t,!1)),!(n=!1)}):u.checkerFunction=function(){var e=u.getHash()||"";return e!==s&&(s=e,u.Adapter.trigger(d,"hashchange")),!0},u.intervalList.push(o(u.checkerFunction,u.options.hashChangeInterval)),!0},u.Adapter.onDomLoad(u.hashChangeInit)),u.emulated.pushState&&(u.onHashChange=function(e){var t,i=e&&e.newURL||u.getLocationHref(),a=u.getHashByUrl(i),n=null;return u.isLastHash(a)?(u.busy(!1),!1):(u.doubleCheckComplete(),u.saveHash(a),a&&u.isTraditionalAnchor(a)?(u.Adapter.trigger(d,"anchorchange"),u.busy(!1),!1):(n=u.extractState(u.getFullUrl(a||u.getLocationHref()),!0),u.isLastSavedState(n)?(u.busy(!1),!1):(u.getHashByState(n),(t=u.discardedState(n))?(u.getHashByIndex(-2)===u.getHashByState(t.forwardState)?u.back(!1):u.forward(!1),!1):(u.pushState(n.data,n.title,encodeURI(n.url),!1),!0))))},u.Adapter.bind(d,"hashchange",u.onHashChange),u.pushState=function(e,t,i,a){if(i=encodeURI(i).replace(/%25/g,"%"),u.getHashByUrl(i))throw new Error("History.js does not support states with fragment-identifiers (hashes/anchors).");if(!1!==a&&u.busy())return u.pushQueue({scope:u,callback:u.pushState,args:arguments,queue:a}),!1;u.busy(!0);var n=u.createStateObject(e,t,i),s=u.getHashByState(n),r=u.getState(!1),o=u.getHashByState(r),l=u.getHash(),c=u.expectedStateId==n.id;return u.storeState(n),u.expectedStateId=n.id,u.recycleState(n),u.setTitle(n),s===o?(u.busy(!1),!1):(u.saveState(n),c||u.Adapter.trigger(d,"statechange"),u.isHashEqual(s,l)||u.isHashEqual(s,u.getShortUrl(u.getLocationHref()))||u.setHash(s,!1),u.busy(!1),!0)},u.replaceState=function(e,t,i,a){if(i=encodeURI(i).replace(/%25/g,"%"),u.getHashByUrl(i))throw new Error("History.js does not support states with fragment-identifiers (hashes/anchors).");if(!1!==a&&u.busy())return u.pushQueue({scope:u,callback:u.replaceState,args:arguments,queue:a}),!1;u.busy(!0);var n=u.createStateObject(e,t,i),s=u.getHashByState(n),r=u.getState(!1),o=u.getHashByState(r),l=u.getStateByIndex(-2);return u.discardState(r,n,l),s===o?(u.storeState(n),u.expectedStateId=n.id,u.recycleState(n),u.setTitle(n),u.saveState(n),u.Adapter.trigger(d,"statechange"),u.busy(!1)):u.pushState(n.data,n.title,n.url,!1),!0}),u.emulated.pushState&&u.getHash()&&!u.emulated.hashChange&&u.Adapter.onDomLoad(function(){u.Adapter.trigger(d,"hashchange")})},void 0!==u.init&&u.init()}(window),function(r,i){"use strict";var o=r.console||i,l=r.document,a=r.navigator,n=!1,s=r.setTimeout,c=r.clearTimeout,d=r.setInterval,u=r.clearInterval,p=r.JSON,h=r.alert,f=r.History=r.History||{},m=r.history;try{(n=r.sessionStorage).setItem("TEST","1"),n.removeItem("TEST")}catch(e){n=!1}if(p.stringify=p.stringify||p.encode,p.parse=p.parse||p.decode,void 0!==f.init)throw new Error("History.js Core has already been loaded...");f.init=function(e){return void 0!==f.Adapter&&(void 0!==f.initCore&&f.initCore(),void 0!==f.initHtml4&&f.initHtml4(),!0)},f.initCore=function(e){if(void 0!==f.initCore.initialized)return!1;if(f.initCore.initialized=!0,f.options=f.options||{},f.options.hashChangeInterval=f.options.hashChangeInterval||100,f.options.safariPollInterval=f.options.safariPollInterval||500,f.options.doubleCheckInterval=f.options.doubleCheckInterval||500,f.options.disableSuid=f.options.disableSuid||!1,f.options.storeInterval=f.options.storeInterval||1e3,f.options.busyDelay=f.options.busyDelay||250,f.options.debug=f.options.debug||!1,f.options.initialTitle=f.options.initialTitle||l.title,f.options.html4Mode=f.options.html4Mode||!1,f.options.delayInit=f.options.delayInit||!1,f.intervalList=[],f.clearAllIntervals=function(){var e,t=f.intervalList;if(null!=t){for(e=0;e<t.length;e++)u(t[e]);f.intervalList=null}},f.debug=function(){f.options.debug&&f.log.apply(f,arguments)},f.log=function(){var e,t,i,a,n,s=void 0!==o&&void 0!==o.log&&void 0!==o.log.apply,r=l.getElementById("log");for(s?(e=(a=Array.prototype.slice.call(arguments)).shift(),void 0!==o.debug?o.debug.apply(o,[e,a]):o.log.apply(o,[e,a])):e="\n"+arguments[0]+"\n",t=1,i=arguments.length;t<i;++t){if("object"==typeof(n=arguments[t])&&void 0!==p)try{n=p.stringify(n)}catch(e){}e+="\n"+n+"\n"}return r?(r.value+=e+"\n-----\n",r.scrollTop=r.scrollHeight-r.clientHeight):s||h(e),!0},f.getInternetExplorerMajorVersion=function(){return f.getInternetExplorerMajorVersion.cached=void 0!==f.getInternetExplorerMajorVersion.cached?f.getInternetExplorerMajorVersion.cached:function(){for(var e=3,t=l.createElement("div"),i=t.getElementsByTagName("i");(t.innerHTML="\x3c!--[if gt IE "+ ++e+"]><i></i><![endif]--\x3e")&&i[0];);return 4<e&&e}()},f.isInternetExplorer=function(){return f.isInternetExplorer.cached=void 0!==f.isInternetExplorer.cached?f.isInternetExplorer.cached:Boolean(f.getInternetExplorerMajorVersion())},f.options.html4Mode?f.emulated={pushState:!0,hashChange:!0}:f.emulated={pushState:!Boolean(r.history&&r.history.pushState&&r.history.replaceState&&!/ Mobile\/([1-7][a-z]|(8([abcde]|f(1[0-8]))))/i.test(a.userAgent)&&!/AppleWebKit\/5([0-2]|3[0-2])/i.test(a.userAgent)),hashChange:Boolean(!("onhashchange"in r||"onhashchange"in l)||f.isInternetExplorer()&&f.getInternetExplorerMajorVersion()<8)},f.enabled=!f.emulated.pushState,f.bugs={setHash:Boolean(!f.emulated.pushState&&"Apple Computer, Inc."===a.vendor&&/AppleWebKit\/5([0-2]|3[0-3])/.test(a.userAgent)),safariPoll:Boolean(!f.emulated.pushState&&"Apple Computer, Inc."===a.vendor&&/AppleWebKit\/5([0-2]|3[0-3])/.test(a.userAgent)),ieDoubleCheck:Boolean(f.isInternetExplorer()&&f.getInternetExplorerMajorVersion()<8),hashEscape:Boolean(f.isInternetExplorer()&&f.getInternetExplorerMajorVersion()<7)},f.isEmptyObject=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},f.cloneObject=function(e){var t;return e?(t=p.stringify(e),p.parse(t)):{}},f.getRootUrl=function(){var e=l.location.protocol+"//"+(l.location.hostname||l.location.host);return l.location.port&&(e+=":"+l.location.port),e+="/"},f.getBaseHref=function(){var e=l.getElementsByTagName("base"),t="";return 1===e.length&&(t=e[0].href.replace(/[^\/]+$/,"")),(t=t.replace(/\/+$/,""))&&(t+="/"),t},f.getBaseUrl=function(){return f.getBaseHref()||f.getBasePageUrl()||f.getRootUrl()},f.getPageUrl=function(){return((f.getState(!1,!1)||{}).url||f.getLocationHref()).replace(/\/+$/,"").replace(/[^\/]+$/,function(e,t,i){return/\./.test(e)?e:e+"/"})},f.getBasePageUrl=function(){return f.getLocationHref().replace(/[#\?].*/,"").replace(/[^\/]+$/,function(e,t,i){return/[^\/]$/.test(e)?"":e}).replace(/\/+$/,"")+"/"},f.getFullUrl=function(e,t){var i=e,a=e.substring(0,1);return t=void 0===t||t,/[a-z]+\:\/\//.test(e)||(i="/"===a?f.getRootUrl()+e.replace(/^\/+/,""):"#"===a?f.getPageUrl().replace(/#.*/,"")+e:"?"===a?f.getPageUrl().replace(/[\?#].*/,"")+e:t?f.getBaseUrl()+e.replace(/^(\.\/)+/,""):f.getBasePageUrl()+e.replace(/^(\.\/)+/,"")),i.replace(/\#$/,"")},f.getShortUrl=function(e){var t=e,i=f.getBaseUrl(),a=f.getRootUrl();return f.emulated.pushState&&(t=t.replace(i,"")),t=t.replace(a,"/"),f.isTraditionalAnchor(t)&&(t="./"+t),t=t.replace(/^(\.\/)+/g,"./").replace(/\#$/,"")},f.getLocationHref=function(e){return(e=e||l).URL===e.location.href?e.location.href:e.location.href===decodeURIComponent(e.URL)?e.URL:(!e.location.hash||decodeURIComponent(e.location.href.replace(/^[^#]+/,""))!==e.location.hash)&&(-1!=e.URL.indexOf("#")||-1==e.location.href.indexOf("#"))&&e.URL||e.location.href},f.store={},f.idToState=f.idToState||{},f.stateToId=f.stateToId||{},f.urlToId=f.urlToId||{},f.storedStates=f.storedStates||[],f.savedStates=f.savedStates||[],f.normalizeStore=function(){f.store.idToState=f.store.idToState||{},f.store.urlToId=f.store.urlToId||{},f.store.stateToId=f.store.stateToId||{}},f.getState=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=f.getLastSavedState();return!i&&t&&(i=f.createStateObject()),e&&((i=f.cloneObject(i)).url=i.cleanUrl||i.url),i},f.getIdByState=function(e){var t,i=f.extractId(e.url);if(!i)if(t=f.getStateString(e),void 0!==f.stateToId[t])i=f.stateToId[t];else if(void 0!==f.store.stateToId[t])i=f.store.stateToId[t];else{for(;i=(new Date).getTime()+String(Math.random()).replace(/\D/g,""),void 0!==f.idToState[i]||void 0!==f.store.idToState[i];);f.stateToId[t]=i,f.idToState[i]=e}return i},f.normalizeState=function(e){var t,i;return e&&"object"==typeof e||(e={}),void 0!==e.normalized?e:(e.data&&"object"==typeof e.data||(e.data={}),(t={normalized:!0}).title=e.title||"",t.url=f.getFullUrl(e.url?e.url:f.getLocationHref()),t.hash=f.getShortUrl(t.url),t.data=f.cloneObject(e.data),t.id=f.getIdByState(t),t.cleanUrl=t.url.replace(/\??\&_suid.*/,""),t.url=t.cleanUrl,i=!f.isEmptyObject(t.data),(t.title||i)&&!0!==f.options.disableSuid&&(t.hash=f.getShortUrl(t.url).replace(/\??\&_suid.*/,""),/\?/.test(t.hash)||(t.hash+="?"),t.hash+="&_suid="+t.id),t.hashedUrl=f.getFullUrl(t.hash),(f.emulated.pushState||f.bugs.safariPoll)&&f.hasUrlDuplicate(t)&&(t.url=t.hashedUrl),t)},f.createStateObject=function(e,t,i){var a={data:e,title:t,url:i};return a=f.normalizeState(a)},f.getStateById=function(e){return e=String(e),f.idToState[e]||f.store.idToState[e]||i},f.getStateString=function(e){var t;return t={data:f.normalizeState(e).data,title:e.title,url:e.url},p.stringify(t)},f.getStateId=function(e){return f.normalizeState(e).id},f.getHashByState=function(e){return f.normalizeState(e).hash},f.extractId=function(e){var t,i;return i=-1!=e.indexOf("#")?e.split("#")[0]:e,(t=/(.*)\&_suid=([0-9]+)$/.exec(i))&&t[1],(t?String(t[2]||""):"")||!1},f.isTraditionalAnchor=function(e){return!/[\/\?\.]/.test(e)},f.extractState=function(e,t){var i,a,n=null;return t=t||!1,(i=f.extractId(e))&&(n=f.getStateById(i)),n||(a=f.getFullUrl(e),(i=f.getIdByUrl(a)||!1)&&(n=f.getStateById(i)),n||!t||f.isTraditionalAnchor(e)||(n=f.createStateObject(null,null,a))),n},f.getIdByUrl=function(e){return f.urlToId[e]||f.store.urlToId[e]||i},f.getLastSavedState=function(){return f.savedStates[f.savedStates.length-1]||i},f.getLastStoredState=function(){return f.storedStates[f.storedStates.length-1]||i},f.hasUrlDuplicate=function(e){var t;return(t=f.extractState(e.url))&&t.id!==e.id},f.storeState=function(e){return f.urlToId[e.url]=e.id,f.storedStates.push(f.cloneObject(e)),e},f.isLastSavedState=function(e){var t=!1;return f.savedStates.length&&(t=e.id===f.getLastSavedState().id),t},f.saveState=function(e){return!f.isLastSavedState(e)&&(f.savedStates.push(f.cloneObject(e)),!0)},f.getStateByIndex=function(e){return void 0===e?f.savedStates[f.savedStates.length-1]:e<0?f.savedStates[f.savedStates.length+e]:f.savedStates[e]},f.getCurrentIndex=function(){return f.savedStates.length<1?0:f.savedStates.length-1},f.getHash=function(e){var t=f.getLocationHref(e);return f.getHashByUrl(t)},f.unescapeHash=function(e){var t=f.normalizeHash(e);return t=decodeURIComponent(t)},f.normalizeHash=function(e){return e.replace(/[^#]*#/,"").replace(/#.*/,"")},f.setHash=function(e,t){var i,a;return!1!==t&&f.busy()?(f.pushQueue({scope:f,callback:f.setHash,args:arguments,queue:t}),!1):(f.busy(!0),(i=f.extractState(e,!0))&&!f.emulated.pushState?f.pushState(i.data,i.title,i.url,!1):f.getHash()!==e&&(f.bugs.setHash?(a=f.getPageUrl(),f.pushState(null,null,a+"#"+e,!1)):l.location.hash=e),f)},f.escapeHash=function(e){var t=f.normalizeHash(e);return t=r.encodeURIComponent(t),f.bugs.hashEscape||(t=t.replace(/\%21/g,"!").replace(/\%26/g,"&").replace(/\%3D/g,"=").replace(/\%3F/g,"?")),t},f.getHashByUrl=function(e){var t=String(e).replace(/([^#]*)#?([^#]*)#?(.*)/,"$2");return t=f.unescapeHash(t)},f.setTitle=function(e){var t,i=e.title;i||(t=f.getStateByIndex(0))&&t.url===e.url&&(i=t.title||f.options.initialTitle);try{l.getElementsByTagName("title")[0].innerHTML=i.replace("<","&lt;").replace(">","&gt;").replace(" & "," &amp; ")}catch(e){}return l.title=i,f},f.queues=[],f.busy=function(e){if(void 0!==e?f.busy.flag=e:void 0===f.busy.flag&&(f.busy.flag=!1),!f.busy.flag){c(f.busy.timeout);var a=function(){var e,t,i;if(!f.busy.flag)for(e=f.queues.length-1;0<=e;--e)0!==(t=f.queues[e]).length&&(i=t.shift(),f.fireQueueItem(i),f.busy.timeout=s(a,f.options.busyDelay))};f.busy.timeout=s(a,f.options.busyDelay)}return f.busy.flag},f.busy.flag=!1,f.fireQueueItem=function(e){return e.callback.apply(e.scope||f,e.args||[])},f.pushQueue=function(e){return f.queues[e.queue||0]=f.queues[e.queue||0]||[],f.queues[e.queue||0].push(e),f},f.queue=function(e,t){return"function"==typeof e&&(e={callback:e}),void 0!==t&&(e.queue=t),f.busy()?f.pushQueue(e):f.fireQueueItem(e),f},f.clearQueue=function(){return f.busy.flag=!1,f.queues=[],f},f.stateChanged=!1,f.doubleChecker=!1,f.doubleCheckComplete=function(){return f.stateChanged=!0,f.doubleCheckClear(),f},f.doubleCheckClear=function(){return f.doubleChecker&&(c(f.doubleChecker),f.doubleChecker=!1),f},f.doubleCheck=function(e){return f.stateChanged=!1,f.doubleCheckClear(),f.bugs.ieDoubleCheck&&(f.doubleChecker=s(function(){return f.doubleCheckClear(),f.stateChanged||e(),!0},f.options.doubleCheckInterval)),f},f.safariStatePoll=function(){var e=f.extractState(f.getLocationHref());if(!f.isLastSavedState(e))return e||f.createStateObject(),f.Adapter.trigger(r,"popstate"),f},f.back=function(e){return!1!==e&&f.busy()?(f.pushQueue({scope:f,callback:f.back,args:arguments,queue:e}),!1):(f.busy(!0),f.doubleCheck(function(){f.back(!1)}),m.go(-1),!0)},f.forward=function(e){return!1!==e&&f.busy()?(f.pushQueue({scope:f,callback:f.forward,args:arguments,queue:e}),!1):(f.busy(!0),f.doubleCheck(function(){f.forward(!1)}),m.go(1),!0)},f.go=function(e,t){var i;if(0<e)for(i=1;i<=e;++i)f.forward(t);else{if(!(e<0))throw new Error("History.go: History.go requires a positive or negative integer passed.");for(i=-1;e<=i;--i)f.back(t)}return f},f.emulated.pushState){var t=function(){};f.pushState=f.pushState||t,f.replaceState=f.replaceState||t}else f.onPopState=function(e,t){var i,a,n=!1,s=!1;return f.doubleCheckComplete(),(i=f.getHash())?((a=f.extractState(i||f.getLocationHref(),!0))?f.replaceState(a.data,a.title,a.url,!1):(f.Adapter.trigger(r,"anchorchange"),f.busy(!1)),f.expectedStateId=!1):(s=(s=(n=f.Adapter.extractEventData("state",e,t)||!1)?f.getStateById(n):f.expectedStateId?f.getStateById(f.expectedStateId):f.extractState(f.getLocationHref()))||f.createStateObject(null,null,f.getLocationHref()),f.expectedStateId=!1,f.isLastSavedState(s)?(f.busy(!1),!1):(f.storeState(s),f.saveState(s),f.setTitle(s),f.Adapter.trigger(r,"statechange"),f.busy(!1),!0))},f.Adapter.bind(r,"popstate",f.onPopState),f.pushState=function(e,t,i,a){if(f.getHashByUrl(i)&&f.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(!1!==a&&f.busy())return f.pushQueue({scope:f,callback:f.pushState,args:arguments,queue:a}),!1;f.busy(!0);var n=f.createStateObject(e,t,i);return f.isLastSavedState(n)?f.busy(!1):(f.storeState(n),f.expectedStateId=n.id,m.pushState(n.id,n.title,n.url),f.Adapter.trigger(r,"popstate")),!0},f.replaceState=function(e,t,i,a){if(f.getHashByUrl(i)&&f.emulated.pushState)throw new Error("History.js does not support states with fragement-identifiers (hashes/anchors).");if(!1!==a&&f.busy())return f.pushQueue({scope:f,callback:f.replaceState,args:arguments,queue:a}),!1;f.busy(!0);var n=f.createStateObject(e,t,i);return f.isLastSavedState(n)?f.busy(!1):(f.storeState(n),f.expectedStateId=n.id,m.replaceState(n.id,n.title,n.url),f.Adapter.trigger(r,"popstate")),!0};if(n){try{f.store=p.parse(n.getItem("History.store"))||{}}catch(e){f.store={}}f.normalizeStore()}else f.store={},f.normalizeStore();f.Adapter.bind(r,"unload",f.clearAllIntervals),f.saveState(f.storeState(f.extractState(f.getLocationHref(),!0))),n&&(f.onUnload=function(){var t,e,i;try{t=p.parse(n.getItem("History.store"))||{}}catch(e){t={}}for(e in t.idToState=t.idToState||{},t.urlToId=t.urlToId||{},t.stateToId=t.stateToId||{},f.idToState)f.idToState.hasOwnProperty(e)&&(t.idToState[e]=f.idToState[e]);for(e in f.urlToId)f.urlToId.hasOwnProperty(e)&&(t.urlToId[e]=f.urlToId[e]);for(e in f.stateToId)f.stateToId.hasOwnProperty(e)&&(t.stateToId[e]=f.stateToId[e]);f.store=t,f.normalizeStore(),i=p.stringify(t);try{n.setItem("History.store",i)}catch(e){if(e.code!==DOMException.QUOTA_EXCEEDED_ERR)throw e;n.length&&(n.removeItem("History.store"),n.setItem("History.store",i))}},f.intervalList.push(d(f.onUnload,f.options.storeInterval)),f.Adapter.bind(r,"beforeunload",f.onUnload),f.Adapter.bind(r,"unload",f.onUnload)),f.emulated.pushState||(f.bugs.safariPoll&&f.intervalList.push(d(f.safariStatePoll,f.options.safariPollInterval)),"Apple Computer, Inc."!==a.vendor&&"Mozilla"!==(a.appCodeName||"")||(f.Adapter.bind(r,"hashchange",function(){f.Adapter.trigger(r,"popstate")}),f.getHash()&&f.Adapter.onDomLoad(function(){f.Adapter.trigger(r,"hashchange")})))},f.options&&f.options.delayInit||f.init()}(window),function(i){function a(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return i[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}var n={};a.m=i,a.c=n,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=3)}([function(e,t,i){"use strict";var a,n,s;n=[i(2)],void 0!==(s="function"==typeof(a=function(e){return e})?a.apply(t,n):a)&&(e.exports=s)},function(e,t,i){"use strict";var a,n,s,le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};n=[i(0),i(10),i(11)],void 0!==(s="function"==typeof(a=function(Z,J,ee,te){function ie(e,t,i){if(!(this instanceof ie))return new ie(e,t,i);this.el=te,this.events={},this.maskset=te,this.refreshValue=!1,!0!==i&&(Z.isPlainObject(e)?t=e:(t=t||{}).alias=e,this.opts=Z.extend(!0,{},this.defaults,t),this.noMasksCache=t&&t.definitions!==te,this.userOptions=t||{},this.isRTL=this.opts.numericInput,d(this.opts.alias,t,this.opts))}function d(e,t,i){var a=ie.prototype.aliases[e];return a?(a.alias&&d(a.alias,te,i),Z.extend(!0,i,a),Z.extend(!0,i,t),!0):(null===i.mask&&(i.mask=e),!1)}function r(i,o){function e(e,t,i){var a=!1;if(null!==e&&""!==e||((a=null!==i.regex)?e=(e=i.regex).replace(/^(\^)(.*)(\$)$/,"$2"):(a=!0,e=".*")),1===e.length&&!1===i.greedy&&0!==i.repeat&&(i.placeholder=""),i.repeat>0||"*"===i.repeat||"+"===i.repeat){var n="*"===i.repeat?0:"+"===i.repeat?1:i.repeat;e=i.groupmarker.start+e+i.groupmarker.end+i.quantifiermarker.start+n+","+i.repeat+i.quantifiermarker.end}var s,r=a?"regex_"+i.regex:i.numericInput?e.split("").reverse().join(""):e;return ie.prototype.masksCache[r]===te||!0===o?(s={mask:e,maskToken:ie.prototype.analyseMask(e,a,i),validPositions:{},_buffer:te,buffer:te,tests:{},metadata:t,maskLength:te},!0!==o&&(ie.prototype.masksCache[r]=s,s=Z.extend(!0,{},ie.prototype.masksCache[r]))):s=Z.extend(!0,{},ie.prototype.masksCache[r]),s}if(Z.isFunction(i.mask)&&(i.mask=i.mask(i)),Z.isArray(i.mask)){if(i.mask.length>1){i.keepStatic=null===i.keepStatic||i.keepStatic;var a=i.groupmarker.start;return Z.each(i.numericInput?i.mask.reverse():i.mask,function(e,t){a.length>1&&(a+=i.groupmarker.end+i.alternatormarker+i.groupmarker.start),t.mask===te||Z.isFunction(t.mask)?a+=t:a+=t.mask}),a+=i.groupmarker.end,e(a,i.mask,i)}i.mask=i.mask.pop()}return i.mask&&i.mask.mask!==te&&!Z.isFunction(i.mask.mask)?e(i.mask.mask,i.mask,i):e(i.mask,i.mask,i)}function ae(e,t,F){function n(e,t,i){t=t||0;var a,n,s,r=[],o=0,l=x();do{!0===e&&L().validPositions[o]?(n=(s=L().validPositions[o]).match,a=s.locator.slice(),r.push(!0===i?s.input:!1===i?n.nativeDef:I(o,n))):(n=(s=y(o,a,o-1)).match,a=s.locator.slice(),(!1===F.jitMasking||o<l||"number"==typeof F.jitMasking&&isFinite(F.jitMasking)&&F.jitMasking>o)&&r.push(!1===i?n.nativeDef:I(o,n))),o++}while((N===te||o<N)&&(null!==n.fn||""!==n.def)||t>o);return""===r[r.length-1]&&r.pop(),L().maskLength=o+1,r}function L(){return t}function w(e){var t=L();t.buffer=te,!0!==e&&(t.validPositions={},t.p=0)}function x(e,t,i){var a=-1,n=-1,s=i||L().validPositions;e===te&&(e=-1);for(var r in s){var o=parseInt(r);s[o]&&(t||!0!==s[o].generatedInput)&&(o<=e&&(a=o),o>=e&&(n=o))}return-1!==a&&e-a>1||n<e?a:n}function _(e,t,i,a){var n,s=e,r=Z.extend(!0,{},L().validPositions),o=!1;for(L().p=e,n=t-1;n>=s;n--)L().validPositions[n]!==te&&(!0!==i&&(!L().validPositions[n].match.optionality&&function(e){var t=L().validPositions[e];if(t!==te&&null===t.match.fn){var i=L().validPositions[e-1],a=L().validPositions[e+1];return i!==te&&a!==te}return!1}(n)||!1===F.canClearPosition(L(),n,x(),a,F))||delete L().validPositions[n]);for(w(!0),n=s+1;n<=x();){for(;L().validPositions[s]!==te;)s++;if(n<s&&(n=s+1),L().validPositions[n]===te&&E(n))n++;else{var l=y(n);!1===o&&r[s]&&r[s].match.def===l.match.def?(L().validPositions[s]=Z.extend(!0,{},r[s]),L().validPositions[s].input=l.input,delete L().validPositions[n],n++):b(s,l.match.def)?!1!==A(s,l.input||I(n),!0)&&(delete L().validPositions[n],n++,o=!0):E(n)||(n++,s--),s++}}w(!0)}function h(e,t){for(var i,a=e,n=x(),s=L().validPositions[n]||C(0)[0],r=s.alternation!==te?s.locator[s.alternation].toString().split(","):[],o=0;o<a.length&&(!((i=a[o]).match&&(F.greedy&&!0!==i.match.optionalQuantifier||(!1===i.match.optionality||!1===i.match.newBlockMarker)&&!0!==i.match.optionalQuantifier)&&(s.alternation===te||s.alternation!==i.alternation||i.locator[s.alternation]!==te&&T(i.locator[s.alternation].toString().split(","),r)))||!0===t&&(null!==i.match.fn||/[0-9a-bA-Z]/.test(i.match.def)));o++);return i}function y(e,t,i){return L().validPositions[e]||h(C(e,t?t.slice():t,i))}function o(e){return L().validPositions[e]?L().validPositions[e]:C(e)[0]}function b(e,t){for(var i=!1,a=C(e),n=0;n<a.length;n++)if(a[n].match&&a[n].match.def===t){i=!0;break}return i}function C(A,e,t){function E(j,S,e,t){function T(e,i,t){function s(i,a){var n=0===Z.inArray(i,a.matches);return n||Z.each(a.matches,function(e,t){if(!0===t.isQuantifier&&(n=s(i,a.matches[e-1])))return!1}),n}function l(e,n,s){var r,o;if(L().validPositions[e-1]&&s&&L().tests[e])for(var t=L().validPositions[e-1].locator,i=L().tests[e][0].locator,a=0;a<s;a++)if(t[a]!==i[a])return t.slice(s+1);return(L().tests[e]||L().validPositions[e])&&Z.each(L().tests[e]||[L().validPositions[e]],function(e,t){var i=s!==te?s:t.alternation,a=t.locator[i]!==te?t.locator[i].toString().indexOf(n):-1;(o===te||a<o)&&-1!==a&&(r=t,o=a)}),r?r.locator.slice((s!==te?s:r.alternation)+1):s!==te?l(e,n):te}if(M>1e4)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+L().mask;if(M===A&&e.matches===te)return I.push({match:e,locator:i.reverse(),cd:O}),!0;if(e.matches!==te){if(e.isGroup&&t!==e){if(e=T(j.matches[Z.inArray(e,j.matches)+1],i))return!0}else if(e.isOptional){var a=e;if(e=E(e,S,i,t)){if(D=I[I.length-1].match,!s(D,a))return!0;P=!0,M=A}}else if(e.isAlternator){var n,r=e,o=[],c=I.slice(),d=i.length,u=S.length>0?S.shift():-1;if(-1===u||"string"==typeof u){var p,h=M,f=S.slice(),m=[];if("string"==typeof u)m=u.split(",");else for(p=0;p<r.matches.length;p++)m.push(p);for(var v=0;v<m.length;v++){if(p=parseInt(m[v]),I=[],S=l(M,p,d)||f.slice(),!0!==(e=T(r.matches[p]||j.matches[p],[p].concat(i),t)||e)&&e!==te&&m[m.length-1]<r.matches.length){var g=Z.inArray(e,j.matches)+1;j.matches.length>g&&(e=T(j.matches[g],[g].concat(i.slice(1,i.length)),t))&&(m.push(g.toString()),Z.each(I,function(e,t){t.alternation=i.length-1}))}n=I.slice(),M=h,I=[];for(var _=0;_<n.length;_++){var y=n[_],b=!1;y.alternation=y.alternation||d;for(var k=0;k<o.length;k++){var $=o[k];if("string"!=typeof u||-1!==Z.inArray(y.locator[y.alternation].toString(),m)){if(function(e,t){return e.match.nativeDef===t.match.nativeDef||e.match.def===t.match.nativeDef||e.match.nativeDef===t.match.def}(y,$)){b=!0,y.alternation===$.alternation&&-1===$.locator[$.alternation].toString().indexOf(y.locator[y.alternation])&&($.locator[$.alternation]=$.locator[$.alternation]+","+y.locator[y.alternation],$.alternation=y.alternation),y.match.nativeDef===$.match.def&&(y.locator[y.alternation]=$.locator[$.alternation],o.splice(o.indexOf($),1,y));break}if(y.match.def===$.match.def){b=!1;break}if(function(e,t){return null===e.match.fn&&null!==t.match.fn&&t.match.fn.test(e.match.def,L(),A,!1,F,!1)}(y,$)||function(e,t){return null!==e.match.fn&&null!==t.match.fn&&t.match.fn.test(e.match.def.replace(/[\[\]]/g,""),L(),A,!1,F,!1)}(y,$)){y.alternation===$.alternation&&-1===y.locator[y.alternation].toString().indexOf($.locator[$.alternation].toString().split("")[0])&&(y.na=y.na||y.locator[y.alternation].toString(),-1===y.na.indexOf(y.locator[y.alternation].toString().split("")[0])&&(y.na=y.na+","+y.locator[$.alternation].toString().split("")[0]),b=!0,y.locator[y.alternation]=$.locator[$.alternation].toString().split("")[0]+","+y.locator[y.alternation],o.splice(o.indexOf($),0,y));break}}}b||o.push(y)}}"string"==typeof u&&(o=Z.map(o,function(e,t){if(isFinite(t)){var i=e.alternation,a=e.locator[i].toString().split(",");e.locator[i]=te,e.alternation=te;for(var n=0;n<a.length;n++)-1!==Z.inArray(a[n],m)&&(e.locator[i]!==te?(e.locator[i]+=",",e.locator[i]+=a[n]):e.locator[i]=parseInt(a[n]),e.alternation=i);if(e.locator[i]!==te)return e}})),I=c.concat(o),M=A,P=I.length>0,e=o.length>0,S=f.slice()}else e=T(r.matches[u]||j.matches[u],[u].concat(i),t);if(e)return!0}else if(e.isQuantifier&&t!==j.matches[Z.inArray(e,j.matches)-1])for(var w=e,x=S.length>0?S.shift():0;x<(isNaN(w.quantifier.max)?x+1:w.quantifier.max)&&M<=A;x++){var C=j.matches[Z.inArray(w,j.matches)-1];if(e=T(C,[x].concat(i),C)){if(D=I[I.length-1].match,D.optionalQuantifier=x>w.quantifier.min-1,s(D,C)){if(x>w.quantifier.min-1){P=!0,M=A;break}return!0}return!0}}else if(e=E(e,S,i,t))return!0}else M++}for(var i=S.length>0?S.shift():0;i<j.matches.length;i++)if(!0!==j.matches[i].isQuantifier){var a=T(j.matches[i],[i].concat(e),t);if(a&&M===A)return a;if(M>A)break}}function i(e){if(F.keepStatic&&A>0&&e.length>1+(""===e[e.length-1].match.def?1:0)&&!0!==e[0].match.optionality&&!0!==e[0].match.optionalQuantifier&&null===e[0].match.fn&&!/[0-9a-bA-Z]/.test(e[0].match.def)){if(L().validPositions[A-1]===te)return[h(e)];if(L().validPositions[A-1].alternation===e[0].alternation)return[h(e)];if(L().validPositions[A-1])return[h(e)]}return e}var D,a=L().maskToken,M=e?t:0,n=e?e.slice():[0],I=[],P=!1,O=e?e.join(""):"";if(A>-1){if(e===te){for(var s,r=A-1;(s=L().validPositions[r]||L().tests[r])===te&&r>-1;)r--;s!==te&&r>-1&&(n=function(e){var a=[];return Z.isArray(e)||(e=[e]),e.length>0&&(e[0].alternation===te?0===(a=h(e.slice()).locator.slice()).length&&(a=e[0].locator.slice()):Z.each(e,function(e,t){if(""!==t.def)if(0===a.length)a=t.locator.slice();else for(var i=0;i<a.length;i++)t.locator[i]&&-1===a[i].toString().indexOf(t.locator[i])&&(a[i]+=","+t.locator[i])})),a}(s),O=n.join(""),M=r)}if(L().tests[A]&&L().tests[A][0].cd===O)return i(L().tests[A]);for(var o=n.shift();o<a.length&&!(E(a[o],n,[o])&&M===A||M>A);o++);}return(0===I.length||P)&&I.push({match:{fn:null,cardinality:0,optionality:!0,casing:null,def:"",placeholder:""},locator:[],cd:O}),e!==te&&L().tests[A]?i(Z.extend(!0,[],I)):(L().tests[A]=Z.extend(!0,[],I),i(L().tests[A]))}function v(){return L()._buffer===te&&(L()._buffer=n(!1,1),L().buffer===te&&(L().buffer=L()._buffer.slice())),L()._buffer}function k(e){return L().buffer!==te&&!0!==e||(L().buffer=n(!0,x(),!0)),L().buffer}function j(e,t,i){var a,n;if(!0===e)w(),e=0,t=i.length;else for(a=e;a<t;a++)delete L().validPositions[a];for(n=e,a=e;a<t;a++)if(w(!0),i[a]!==F.skipOptionalPartCharacter){var s=A(n,i[a],!0,!0);!1!==s&&(w(!0),n=s.caret!==te?s.caret:s.pos+1)}}function S(e,t,i){switch(F.casing||t.casing){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break;case"title":var a=L().validPositions[i-1];e=0===i||a&&a.input===String.fromCharCode(ie.keyCode.SPACE)?e.toUpperCase():e.toLowerCase();break;default:if(Z.isFunction(F.casing)){var n=Array.prototype.slice.call(arguments);n.push(L().validPositions),e=F.casing.apply(this,n)}}return e}function T(e,t,i){for(var a,n=F.greedy?t:t.slice(0,1),s=!1,r=i!==te?i.split(","):[],o=0;o<r.length;o++)-1!==(a=e.indexOf(r[o]))&&e.splice(a,1);for(var l=0;l<e.length;l++)if(-1!==Z.inArray(e[l],n)){s=!0;break}return s}function A(f,e,t,$,i,a){function m(e){var t=H?e.begin-e.end>1||e.begin-e.end==1:e.end-e.begin>1||e.end-e.begin==1;return t&&0===e.begin&&e.end===L().maskLength?"full":t}function s(d,u,p){var h=!1;return Z.each(C(d),function(e,t){for(var i=t.match,a=u?1:0,n="",s=i.cardinality;s>a;s--)n+=M(d-(s-1));if(u&&(n+=u),k(!0),!1!==(h=null!=i.fn?i.fn.test(n,L(),d,p,F,m(f)):(u===i.def||u===F.skipOptionalPartCharacter)&&""!==i.def&&{c:I(d,i,!0)||i.def,pos:d})){var r=h.c!==te?h.c:u;r=r===F.skipOptionalPartCharacter&&null===i.fn?I(d,i,!0)||i.def:r;var o=d,l=k();if(h.remove!==te&&(Z.isArray(h.remove)||(h.remove=[h.remove]),Z.each(h.remove.sort(function(e,t){return t-e}),function(e,t){_(t,t+1,!0)})),h.insert!==te&&(Z.isArray(h.insert)||(h.insert=[h.insert]),Z.each(h.insert.sort(function(e,t){return e-t}),function(e,t){A(t.pos,t.c,!0,$)})),h.refreshFromBuffer){var c=h.refreshFromBuffer;if(j(!0===c?c:c.start,c.end,l),h.pos===te&&h.c===te)return h.pos=x(),!1;if((o=h.pos!==te?h.pos:d)!==d)return h=Z.extend(h,A(o,r,!0,$)),!1}else if(!0!==h&&h.pos!==te&&h.pos!==d&&(o=h.pos,j(d,o,k().slice()),o!==d))return h=Z.extend(h,A(o,r,!0)),!1;return(!0===h||h.pos!==te||h.c!==te)&&(e>0&&w(!0),v(o,Z.extend({},t,{input:S(r,i,o)}),$,m(f))||(h=!1),!1)}}),h}function v(e,t,i,a){if(a||F.insertMode&&L().validPositions[e]!==te&&i===te){var n,s=Z.extend(!0,{},L().validPositions),r=x(te,!0);for(n=e;n<=r;n++)delete L().validPositions[n];L().validPositions[e]=Z.extend(!0,{},t);var o,l=!0,c=L().validPositions,d=!1,u=L().maskLength;for(n=o=e;n<=r;n++){var p=s[n];if(p!==te)for(var h=o;h<L().maskLength&&(null===p.match.fn&&c[n]&&(!0===c[n].match.optionalQuantifier||!0===c[n].match.optionality)||null!=p.match.fn);){if(h++,!1===d&&s[h]&&s[h].match.def===p.match.def)L().validPositions[h]=Z.extend(!0,{},s[h]),L().validPositions[h].input=p.input,g(h),o=h,l=!0;else if(b(h,p.match.def)){var f=A(h,p.input,!0,!0);l=!1!==f,o=f.caret||f.insert?x():h,d=!0}else if(!(l=!0===p.generatedInput)&&h>=L().maskLength-1)break;if(L().maskLength<u&&(L().maskLength=u),l)break}if(!l)break}if(!l)return L().validPositions=Z.extend(!0,{},s),w(!0),!1}else L().validPositions[e]=Z.extend(!0,{},t);return w(!0),!0}function g(e){for(var t=e-1;t>-1&&!L().validPositions[t];t--);var i,a;for(t++;t<e;t++)L().validPositions[t]===te&&(!1===F.jitMasking||F.jitMasking>t)&&(""===(a=C(t,y(t-1).locator,t-1).slice())[a.length-1].match.def&&a.pop(),(i=h(a))&&(i.match.def===F.radixPointDefinitionSymbol||!E(t,!0)||Z.inArray(F.radixPoint,k())<t&&i.match.fn&&i.match.fn.test(I(t),L(),t,!1,F))&&!1!==(r=s(t,I(t,i.match,!0)||(null==i.match.fn?i.match.def:""!==I(t)?I(t):k()[t]),!0))&&(L().validPositions[r.pos||t].generatedInput=!0))}t=!0===t;var n=f;f.begin!==te&&(n=H&&!m(f)?f.end:f.begin);var r=!0,o=Z.extend(!0,{},L().validPositions);if(Z.isFunction(F.preValidation)&&!t&&!0!==$&&!0!==a&&(r=F.preValidation(k(),n,e,m(f),F)),!0===r){if(g(n),m(f)&&(P(te,ie.keyCode.DELETE,f,!0,!0),n=L().p),n<L().maskLength&&(N===te||n<N)&&(r=s(n,e,t),(!t||!0===$)&&!1===r&&!0!==a)){var l=L().validPositions[n];if(!l||null!==l.match.fn||l.match.def!==e&&e!==F.skipOptionalPartCharacter){if((F.insertMode||L().validPositions[D(n)]===te)&&!E(n,!0))for(var c=n+1,d=D(n);c<=d;c++)if(!1!==(r=s(c,e,t))){!function(e,t){var i=L().validPositions[t];if(i)for(var r=i.locator,o=r.length,a=e;a<t;a++)if(L().validPositions[a]===te&&!E(a,!0)){var n=C(a).slice(),l=h(n,!0),c=-1;""===n[n.length-1].match.def&&n.pop(),Z.each(n,function(e,t){for(var i=0;i<o;i++){if(t.locator[i]===te||!T(t.locator[i].toString().split(","),r[i].toString().split(","),t.na)){var a=r[i],n=l.locator[i],s=t.locator[i];a-n>Math.abs(a-s)&&(l=t);break}c<i&&(c=i,l=t)}}),(l=Z.extend({},l,{input:I(a,l.match,!0)||l.match.def})).generatedInput=!0,v(a,l,!0),L().validPositions[t]=te,s(t,i.input,!0)}}(n,r.pos!==te?r.pos:c),n=c;break}}else r={caret:D(n)}}!1===r&&F.keepStatic&&!t&&!0!==i&&(r=function(d,u,p){var e,h,t,i,f,m,v,g,_=Z.extend(!0,{},L().validPositions),y=!1,a=x();for(i=L().validPositions[a];a>=0;a--)if((t=L().validPositions[a])&&t.alternation!==te){if(e=a,h=L().validPositions[e].alternation,i.locator[t.alternation]!==t.locator[t.alternation])break;i=t}if(h!==te){g=parseInt(e);var b=i.locator[i.alternation||h]!==te?i.locator[i.alternation||h]:v[0];b.length>0&&(b=b.split(",")[0]);var k=L().validPositions[g],n=L().validPositions[g-1];Z.each(C(g,n?n.locator:te,g-1),function(e,t){v=t.locator[h]?t.locator[h].toString().split(","):[];for(var i=0;i<v.length;i++){var a=[],n=0,s=0,r=!1;if(b<v[i]&&(t.na===te||-1===Z.inArray(v[i],t.na.split(","))||-1===Z.inArray(b.toString(),v))){L().validPositions[g]=Z.extend(!0,{},t);var o=L().validPositions[g].locator;for(L().validPositions[g].locator[h]=parseInt(v[i]),null==t.match.fn?(k.input!==t.match.def&&(r=!0,!0!==k.generatedInput&&a.push(k.input)),s++,L().validPositions[g].generatedInput=!/[0-9a-bA-Z]/.test(t.match.def),L().validPositions[g].input=t.match.def):L().validPositions[g].input=k.input,f=g+1;f<x(te,!0)+1;f++)(m=L().validPositions[f])&&!0!==m.generatedInput&&/[0-9a-bA-Z]/.test(m.input)?a.push(m.input):f<d&&n++,delete L().validPositions[f];for(r&&a[0]===t.match.def&&a.shift(),w(!0),y=!0;a.length>0;){var l=a.shift();if(l!==F.skipOptionalPartCharacter&&!(y=A(x(te,!0)+1,l,!1,$,!0)))break}if(y){L().validPositions[g].locator=o;var c=x(d)+1;for(f=g+1;f<x()+1;f++)((m=L().validPositions[f])===te||null==m.match.fn)&&f<d+(s-n)&&s++;y=A((d+=s-n)>c?c:d,u,p,$,!0)}if(y)return!1;w(),L().validPositions=Z.extend(!0,{},_)}}})}return y}(n,e,t)),!0===r&&(r={pos:n})}if(Z.isFunction(F.postValidation)&&!1!==r&&!t&&!0!==$&&!0!==a){var u=F.postValidation(k(!0),r,F);if(u.refreshFromBuffer&&u.buffer){var p=u.refreshFromBuffer;j(!0===p?p:p.start,p.end,u.buffer)}r=!0===u?r:u}return r&&r.pos===te&&(r.pos=n),!1!==r&&!0!==a||(w(!0),L().validPositions=Z.extend(!0,{},o)),r}function E(e,t){var i=y(e).match;if(""===i.def&&(i=o(e).match),null!=i.fn)return i.fn;if(!0!==t&&e>-1){var a=C(e);return a.length>1+(""===a[a.length-1].match.def?1:0)}return!1}function D(e,t){var i=L().maskLength;if(e>=i)return i;var a=e;for(C(i+1).length>1&&(n(!0,i+1,!0),i=L().maskLength);++a<i&&(!0===t&&(!0!==o(a).match.newBlockMarker||!E(a))||!0!==t&&!E(a)););return a}function g(e,t){var i,a=e;if(a<=0)return 0;for(;--a>0&&(!0===t&&!0!==o(a).match.newBlockMarker||!0!==t&&!E(a)&&((i=C(a)).length<2||2===i.length&&""===i[1].match.def)););return a}function M(e){return L().validPositions[e]===te?I(e):L().validPositions[e].input}function $(e,t,i,a,n){if(a&&Z.isFunction(F.onBeforeWrite)){var s=F.onBeforeWrite.call(B,a,t,i,F);if(s){if(s.refreshFromBuffer){var r=s.refreshFromBuffer;j(!0===r?r:r.start,r.end,s.buffer||t),t=k(!0)}i!==te&&(i=s.caret!==te?s.caret:i)}}e!==te&&(e.inputmask._valueSet(t.join("")),i===te||a!==te&&"blur"===a.type?u(e,i,0===t.length):oe&&a&&"input"===a.type?setTimeout(function(){f(e,i)},0):f(e,i),!0===n&&(U=!0,Z(e).trigger("input")))}function I(e,t,i){if((t=t||o(e).match).placeholder!==te||!0===i)return Z.isFunction(t.placeholder)?t.placeholder(F):t.placeholder;if(null===t.fn){if(e>-1&&L().validPositions[e]===te){var a,n=C(e),s=[];if(n.length>1+(""===n[n.length-1].match.def?1:0))for(var r=0;r<n.length;r++)if(!0!==n[r].match.optionality&&!0!==n[r].match.optionalQuantifier&&(null===n[r].match.fn||a===te||!1!==n[r].match.fn.test(a.match.def,L(),e,!0,F))&&(s.push(n[r]),null===n[r].match.fn&&(a=n[r]),s.length>1&&/[0-9a-bA-Z]/.test(s[0].match.def)))return F.placeholder.charAt(e%F.placeholder.length)}return t.def}return F.placeholder.charAt(e%F.placeholder.length)}function d(c,e,d,t,i){function u(e,t){return-1!==v().slice(e,D(e)).join("").indexOf(t)&&!E(e)&&o(e).match.nativeDef===t.charAt(t.length-1)}var p=t.slice(),h="",f=-1,m=te;if(w(),d||!0===F.autoUnmask)f=D(f);else{var a=v().slice(0,D(-1)).join(""),n=p.join("").match(new RegExp("^"+ie.escapeRegex(a),"g"));n&&n.length>0&&(p.splice(0,n.length*a.length),f=D(f))}if(-1===f?(L().p=D(f),f=0):L().p=f,Z.each(p,function(e,t){if(t!==te)if(L().validPositions[e]===te&&p[e]===I(e)&&E(e,!0)&&!1===A(e,p[e],!0,te,te,!0))L().p++;else{var i=new Z.Event("_checkval");i.which=t.charCodeAt(0),h+=t;var a=x(te,!0),n=L().validPositions[a],s=y(a+1,n?n.locator.slice():te,a);if(!u(f,h)||d||F.autoUnmask){var r=d?e:null==s.match.fn&&s.match.optionality&&a+1<L().p?a+1:L().p;m=V.keypressEvent.call(c,i,!0,!1,d,r),f=r+1,h=""}else m=V.keypressEvent.call(c,i,!0,!1,!0,a+1);if(!1!==m&&!d&&Z.isFunction(F.onBeforeWrite)){var o=m;if(m=F.onBeforeWrite.call(B,i,k(),m.forwardPosition,F),(m=Z.extend(o,m))&&m.refreshFromBuffer){var l=m.refreshFromBuffer;j(!0===l?l:l.start,l.end,m.buffer),w(!0),m.caret&&(L().p=m.caret,m.forwardPosition=m.caret)}}}}),e){var s=te;ee.activeElement===c&&m&&(s=F.numericInput?g(m.forwardPosition):m.forwardPosition),$(c,k(),s,i||new Z.Event("checkval"),i&&"input"===i.type)}}function i(e){if(e){if(e.inputmask===te)return e.value;e.inputmask&&e.inputmask.refreshValue&&V.setValueEvent.call(e)}var t=[],i=L().validPositions;for(var a in i)i[a].match&&null!=i[a].match.fn&&t.push(i[a].input);var n=0===t.length?"":(H?t.reverse():t).join("");if(Z.isFunction(F.onUnMask)){var s=(H?k().slice().reverse():k()).join("");n=F.onUnMask.call(B,s,n,F)}return n}function f(e,t,i,a){function n(e){return!0===a||!H||"number"!=typeof e||F.greedy&&""===F.placeholder||(e=k().join("").length-e),e}var s;if(t===te)return e.setSelectionRange?(t=e.selectionStart,i=e.selectionEnd):J.getSelection?(s=J.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode!==e&&s.commonAncestorContainer!==e||(t=s.startOffset,i=s.endOffset):ee.selection&&ee.selection.createRange&&(i=(t=0-(s=ee.selection.createRange()).duplicate().moveStart("character",-e.inputmask._valueGet().length))+s.text.length),{begin:n(t),end:n(i)};if(t.begin!==te&&(i=t.end,t=t.begin),"number"==typeof t){t=n(t),i="number"==typeof(i=n(i))?i:t;var r=parseInt(((e.ownerDocument.defaultView||J).getComputedStyle?(e.ownerDocument.defaultView||J).getComputedStyle(e,null):e.currentStyle).fontSize)*i;if(e.scrollLeft=r>e.scrollWidth?r:0,ne||!1!==F.insertMode||t!==i||i++,e.setSelectionRange)e.selectionStart=t,e.selectionEnd=i;else if(J.getSelection){if(s=ee.createRange(),e.firstChild===te||null===e.firstChild){var o=ee.createTextNode("");e.appendChild(o)}s.setStart(e.firstChild,t<e.inputmask._valueGet().length?t:e.inputmask._valueGet().length),s.setEnd(e.firstChild,i<e.inputmask._valueGet().length?i:e.inputmask._valueGet().length),s.collapse(!0);var l=J.getSelection();l.removeAllRanges(),l.addRange(s)}else e.createTextRange&&((s=e.createTextRange()).collapse(!0),s.moveEnd("character",i),s.moveStart("character",t),s.select());u(e,{begin:t,end:i})}}function r(e){var t,i,a=k(),n=a.length,s=x(),r={},o=L().validPositions[s],l=o!==te?o.locator.slice():te;for(t=s+1;t<a.length;t++)l=(i=y(t,l,t-1)).locator.slice(),r[t]=Z.extend(!0,{},i);var c=o&&o.alternation!==te?o.locator[o.alternation]:te;for(t=n-1;t>s&&(((i=r[t]).match.optionality||i.match.optionalQuantifier&&i.match.newBlockMarker||c&&(c!==r[t].locator[o.alternation]&&null!=i.match.fn||null===i.match.fn&&i.locator[o.alternation]&&T(i.locator[o.alternation].toString().split(","),c.toString().split(","))&&""!==C(t)[0].def))&&a[t]===I(t,i.match));t--)n--;return e?{l:n,def:r[n]?r[n].match:te}:n}function l(e){for(var t,i=r(),a=e.length,n=L().validPositions[x()];i<a&&!E(i,!0)&&(t=n!==te?y(i,n.locator.slice(""),n):o(i))&&!0!==t.match.optionality&&(!0!==t.match.optionalQuantifier&&!0!==t.match.newBlockMarker||i+1===a&&""===(n!==te?y(i+1,n.locator.slice(""),n):o(i+1)).match.def);)i++;for(;(t=L().validPositions[i-1])&&t&&t.match.optionality&&t.input===F.skipOptionalPartCharacter;)i--;return e.splice(i),e}function m(e){if(Z.isFunction(F.isComplete))return F.isComplete(e,F);if("*"===F.repeat)return te;var t=!1,i=r(!0),a=g(i.l);if(i.def===te||i.def.newBlockMarker||i.def.optionality||i.def.optionalQuantifier){t=!0;for(var n=0;n<=a;n++){var s=y(n).match;if(null!==s.fn&&L().validPositions[n]===te&&!0!==s.optionality&&!0!==s.optionalQuantifier||null===s.fn&&e[n]!==I(n,s)){t=!1;break}}}return t}function P(r,e,t,i,a){if((F.numericInput||H)&&(e===ie.keyCode.BACKSPACE?e=ie.keyCode.DELETE:e===ie.keyCode.DELETE&&(e=ie.keyCode.BACKSPACE),H)){var n=t.end;t.end=t.begin,t.begin=n}e===ie.keyCode.BACKSPACE&&(t.end-t.begin<1||!1===F.insertMode)?(t.begin=g(t.begin),L().validPositions[t.begin]!==te&&L().validPositions[t.begin].input===F.groupSeparator&&t.begin--):e===ie.keyCode.DELETE&&t.begin===t.end&&(t.end=E(t.end,!0)&&L().validPositions[t.end]&&L().validPositions[t.end].input!==F.radixPoint?t.end+1:D(t.end)+1,L().validPositions[t.begin]!==te&&L().validPositions[t.begin].input===F.groupSeparator&&t.end++),_(t.begin,t.end,!1,i),!0!==i&&function(){if(F.keepStatic){for(var e=[],t=x(-1,!0),i=Z.extend(!0,{},L().validPositions),a=L().validPositions[t];t>=0;t--){var n=L().validPositions[t];if(n){if(!0!==n.generatedInput&&/[0-9a-bA-Z]/.test(n.input)&&e.push(n.input),delete L().validPositions[t],n.alternation!==te&&n.locator[n.alternation]!==a.locator[n.alternation])break;a=n}}if(t>-1)for(L().p=D(x(-1,!0));e.length>0;){var s=new Z.Event("keypress");s.which=e.pop().charCodeAt(0),V.keypressEvent.call(r,s,!0,!1,!1,L().p)}else L().validPositions=Z.extend(!0,{},i)}}();var s=x(t.begin,!0);if(s<t.begin)L().p=D(s);else if(!0!==i&&(L().p=t.begin,!0!==a))for(;L().p<s&&L().validPositions[L().p]===te;)L().p++}function s(c){function t(e){var t,i=ee.createElement("span");for(var a in d)isNaN(a)&&-1!==a.indexOf("font")&&(i.style[a]=d[a]);i.style.textTransform=d.textTransform,i.style.letterSpacing=d.letterSpacing,i.style.position="absolute",i.style.height="auto",i.style.width="auto",i.style.visibility="hidden",i.style.whiteSpace="nowrap",ee.body.appendChild(i);var n,s=c.inputmask._valueGet(),r=0;for(t=0,n=s.length;t<=n;t++){if(i.innerHTML+=s.charAt(t)||"_",i.offsetWidth>=e){var o=e-r,l=i.offsetWidth-e;i.innerHTML=s.charAt(t),t=(o-=i.offsetWidth/3)<l?t-1:t;break}r=i.offsetWidth}return ee.body.removeChild(i),t}var d=(c.ownerDocument.defaultView||J).getComputedStyle(c,null),e=ee.createElement("div");e.style.width=d.width,e.style.textAlign=d.textAlign,(R=ee.createElement("div")).className="im-colormask",c.parentNode.insertBefore(R,c),c.parentNode.removeChild(c),R.appendChild(e),R.appendChild(c),c.style.left=e.offsetLeft+"px",Z(c).on("click",function(e){return f(c,t(e.clientX)),V.clickEvent.call(c,[e])}),Z(c).on("keydown",function(e){e.shiftKey||!1===F.insertMode||setTimeout(function(){u(c)},0)})}function u(t,i,e){function a(){c||null!==s.fn&&r.input!==te?c&&(null!==s.fn&&r.input!==te||""===s.def)&&(c=!1,l+="</span>"):(c=!0,l+="<span class='im-static'>")}function n(e){!0!==e&&d!==i.begin||ee.activeElement!==t||(l+="<span class='im-caret' style='border-right-width: 1px;border-right-style: solid;'></span>")}var s,r,o,l="",c=!1,d=0;if(R!==te){var u=k();if(i===te?i=f(t):i.begin===te&&(i={begin:i,end:i}),!0!==e){var p=x();do{n(),L().validPositions[d]?(r=L().validPositions[d],s=r.match,o=r.locator.slice(),a(),l+=u[d]):(r=y(d,o,d-1),s=r.match,o=r.locator.slice(),(!1===F.jitMasking||d<p||"number"==typeof F.jitMasking&&isFinite(F.jitMasking)&&F.jitMasking>d)&&(a(),l+=I(d,s))),d++}while((N===te||d<N)&&(null!==s.fn||""!==s.def)||p>d||c);-1===l.indexOf("im-caret")&&n(!0),c&&a()}var h=R.getElementsByTagName("div")[0];h.innerHTML=l,t.inputmask.positionColorMask(t,h)}}t=t||this.maskset,F=F||this.opts;var O,c,N,R,B=this,p=this.el,H=this.isRTL,z=!1,U=!1,q=!1,W=!1,Y={on:function(e,t,s){var i=function(e){if(this.inputmask===te&&"FORM"!==this.nodeName){var t=Z.data(this,"_inputmask_opts");t?new ie(t).mask(this):Y.off(this)}else{if("setvalue"===e.type||"FORM"===this.nodeName||!(this.disabled||this.readOnly&&!("keydown"===e.type&&e.ctrlKey&&67===e.keyCode||!1===F.tabThrough&&e.keyCode===ie.keyCode.TAB))){switch(e.type){case"input":if(!0===U)return U=!1,e.preventDefault();break;case"keydown":z=!1,U=!1;break;case"keypress":if(!0===z)return e.preventDefault();z=!0;break;case"click":if(se||re){var i=this,a=arguments;return setTimeout(function(){s.apply(i,a)},0),!1}}var n=s.apply(this,arguments);return!1===n&&(e.preventDefault(),e.stopPropagation()),n}e.preventDefault()}};e.inputmask.events[t]=e.inputmask.events[t]||[],e.inputmask.events[t].push(i),-1!==Z.inArray(t,["submit","reset"])?null!==e.form&&Z(e.form).on(t,i):Z(e).on(t,i)},off:function(a,e){if(a.inputmask&&a.inputmask.events){var t;e?(t=[])[e]=a.inputmask.events[e]:t=a.inputmask.events,Z.each(t,function(e,t){for(;t.length>0;){var i=t.pop();-1!==Z.inArray(e,["submit","reset"])?null!==a.form&&Z(a.form).off(e,i):Z(a).off(e,i)}delete a.inputmask.events[e]})}}},V={keydownEvent:function(e){var t=this,i=Z(t),a=e.keyCode,n=f(t);if(a===ie.keyCode.BACKSPACE||a===ie.keyCode.DELETE||re&&a===ie.keyCode.BACKSPACE_SAFARI||e.ctrlKey&&a===ie.keyCode.X&&!function(e){var t=ee.createElement("input"),i="on"+e,a=i in t;return a||(t.setAttribute(i,"return;"),a="function"==typeof t[i]),t=null,a}("cut"))e.preventDefault(),P(t,a,n),$(t,k(!0),L().p,e,t.inputmask._valueGet()!==k().join("")),t.inputmask._valueGet()===v().join("")?i.trigger("cleared"):!0===m(k())&&i.trigger("complete");else if(a===ie.keyCode.END||a===ie.keyCode.PAGE_DOWN){e.preventDefault();var s=D(x());F.insertMode||s!==L().maskLength||e.shiftKey||s--,f(t,e.shiftKey?n.begin:s,s,!0)}else a===ie.keyCode.HOME&&!e.shiftKey||a===ie.keyCode.PAGE_UP?(e.preventDefault(),f(t,0,e.shiftKey?n.begin:0,!0)):(F.undoOnEscape&&a===ie.keyCode.ESCAPE||90===a&&e.ctrlKey)&&!0!==e.altKey?(d(t,!0,!1,O.split("")),i.trigger("click")):a!==ie.keyCode.INSERT||e.shiftKey||e.ctrlKey?!0===F.tabThrough&&a===ie.keyCode.TAB?(!0===e.shiftKey?(null===o(n.begin).match.fn&&(n.begin=D(n.begin)),n.end=g(n.begin,!0),n.begin=g(n.end,!0)):(n.begin=D(n.begin,!0),n.end=D(n.begin,!0),n.end<L().maskLength&&n.end--),n.begin<L().maskLength&&(e.preventDefault(),f(t,n.begin,n.end))):e.shiftKey||!1===F.insertMode&&(a===ie.keyCode.RIGHT?setTimeout(function(){var e=f(t);f(t,e.begin)},0):a===ie.keyCode.LEFT&&setTimeout(function(){var e=f(t);f(t,H?e.begin+1:e.begin-1)},0)):(F.insertMode=!F.insertMode,f(t,F.insertMode||n.begin!==L().maskLength?n.begin:n.begin-1));F.onKeyDown.call(this,e,k(),f(t).begin,F),q=-1!==Z.inArray(a,F.ignorables)},keypressEvent:function(e,t,i,a,n){var s=this,r=Z(s),o=e.which||e.charCode||e.keyCode;if(!(!0===t||e.ctrlKey&&e.altKey)&&(e.ctrlKey||e.metaKey||q))return o===ie.keyCode.ENTER&&O!==k().join("")&&(O=k().join(""),setTimeout(function(){r.trigger("change")},0)),!0;if(o){46===o&&!1===e.shiftKey&&""!==F.radixPoint&&(o=F.radixPoint.charCodeAt(0));var l,c=t?{begin:n,end:n}:f(s),d=String.fromCharCode(o);L().writeOutBuffer=!0;var u=A(c,d,a);if(!1!==u&&(w(!0),l=u.caret!==te?u.caret:t?u.pos+1:D(u.pos),L().p=l),!1!==i&&(setTimeout(function(){F.onKeyValidation.call(s,o,u,F)},0),L().writeOutBuffer&&!1!==u)){var p=k();$(s,p,F.numericInput&&u.caret===te?g(l):l,e,!0!==t),!0!==t&&setTimeout(function(){!0===m(p)&&r.trigger("complete")},0)}if(e.preventDefault(),t)return!1!==u&&(u.forwardPosition=l),u}},pasteEvent:function(e){var t,i=this,a=e.originalEvent||e,n=Z(i),s=i.inputmask._valueGet(!0),r=f(i);H&&(t=r.end,r.end=r.begin,r.begin=t);var o=s.substr(0,r.begin),l=s.substr(r.end,s.length);if(o===(H?v().reverse():v()).slice(0,r.begin).join("")&&(o=""),l===(H?v().reverse():v()).slice(r.end).join("")&&(l=""),H&&(t=o,o=l,l=t),J.clipboardData&&J.clipboardData.getData)s=o+J.clipboardData.getData("Text")+l;else{if(!a.clipboardData||!a.clipboardData.getData)return!0;s=o+a.clipboardData.getData("text/plain")+l}var c=s;if(Z.isFunction(F.onBeforePaste)){if(!1===(c=F.onBeforePaste.call(B,s,F)))return e.preventDefault();c||(c=s)}return d(i,!1,!1,H?c.split("").reverse():c.toString().split("")),$(i,k(),D(x()),e,O!==k().join("")),!0===m(k())&&n.trigger("complete"),e.preventDefault()},inputFallBackEvent:function(e){var a=this,t=a.inputmask._valueGet();if(k().join("")!==t){var i=f(a);if(!1===function(e,t,i){if("."===t.charAt(i.begin-1)&&""!==F.radixPoint&&((t=t.split(""))[i.begin-1]=F.radixPoint.charAt(0),t=t.join("")),t.charAt(i.begin-1)===F.radixPoint&&t.length>k().length){var a=new Z.Event("keypress");return a.which=F.radixPoint.charCodeAt(0),V.keypressEvent.call(e,a,!0,!0,!1,i.begin-1),!1}}(a,t,i))return!1;if(t=t.replace(new RegExp("("+ie.escapeRegex(v().join(""))+")*"),""),!1===function(e,t,i){if(se){var a=t.replace(k().join(""),"");if(1===a.length){var n=new Z.Event("keypress");return n.which=a.charCodeAt(0),V.keypressEvent.call(e,n,!0,!0,!1,L().validPositions[i.begin-1]?i.begin:i.begin-1),!1}}}(a,t,i))return!1;i.begin>t.length&&(f(a,t.length),i=f(a));var n=k().join(""),s=t.substr(0,i.begin),r=t.substr(i.begin),o=n.substr(0,i.begin),l=n.substr(i.begin),c=i,d="",u=!1;if(s!==o){c.begin=0;for(var p=(u=s.length>=o.length)?s.length:o.length,h=0;s.charAt(h)===o.charAt(h)&&h<p;h++)c.begin++;u&&(d+=s.slice(c.begin,c.end))}r!==l&&(r.length>l.length?u&&(c.end=c.begin):r.length<l.length?c.end+=l.length-r.length:r.charAt(0)!==l.charAt(0)&&c.end++),$(a,k(),c),d.length>0?Z.each(d.split(""),function(e,t){var i=new Z.Event("keypress");i.which=t.charCodeAt(0),q=!1,V.keypressEvent.call(a,i)}):(c.begin===c.end-1&&f(a,g(c.begin+1),c.end),e.keyCode=ie.keyCode.DELETE,V.keydownEvent.call(a,e)),e.preventDefault()}},setValueEvent:function(e){this.inputmask.refreshValue=!1;var t=this,i=t.inputmask._valueGet(!0);Z.isFunction(F.onBeforeMask)&&(i=F.onBeforeMask.call(B,i,F)||i),i=i.split(""),d(t,!0,!1,H?i.reverse():i),O=k().join(""),(F.clearMaskOnLostFocus||F.clearIncomplete)&&t.inputmask._valueGet()===v().join("")&&t.inputmask._valueSet("")},focusEvent:function(e){var t=this,i=t.inputmask._valueGet();F.showMaskOnFocus&&(!F.showMaskOnHover||F.showMaskOnHover&&""===i)&&(t.inputmask._valueGet()!==k().join("")?$(t,k(),D(x())):!1===W&&f(t,D(x()))),!0===F.positionCaretOnTab&&!1===W&&""!==i&&($(t,k(),f(t)),V.clickEvent.apply(t,[e,!0])),O=k().join("")},mouseleaveEvent:function(e){var t=this;if(W=!1,F.clearMaskOnLostFocus&&ee.activeElement!==t){var i=k().slice(),a=t.inputmask._valueGet();a!==t.getAttribute("placeholder")&&""!==a&&(-1===x()&&a===v().join("")?i=[]:l(i),$(t,i))}},clickEvent:function(e,c){function d(e){if(""!==F.radixPoint){var t=L().validPositions;if(t[e]===te||t[e].input===I(e)){if(e<D(-1))return!0;var i=Z.inArray(F.radixPoint,k());if(-1!==i){for(var a in t)if(i<a&&t[a].input!==I(a))return!1;return!0}}}return!1}var u=this;setTimeout(function(){if(ee.activeElement===u){var e=f(u);if(c&&(H?e.end=e.begin:e.begin=e.end),e.begin===e.end)switch(F.positionCaretOnClick){case"none":break;case"radixFocus":if(d(e.begin)){var t=k().join("").indexOf(F.radixPoint);f(u,F.numericInput?D(t):t);break}default:var i=e.begin,a=x(i,!0),n=D(a);if(i<n)f(u,E(i,!0)||E(i-1,!0)?i:D(i));else{var s=L().validPositions[a],r=y(n,s?s.match.locator:te,s),o=I(n,r.match);if(""!==o&&k()[n]!==o&&!0!==r.match.optionalQuantifier&&!0!==r.match.newBlockMarker||!E(n,!0)&&r.match.def===o){var l=D(n);(i>=l||i===n)&&(n=l)}f(u,n)}}}},0)},dblclickEvent:function(e){var t=this;setTimeout(function(){f(t,0,D(x()))},0)},cutEvent:function(e){var t=this,i=Z(t),a=f(t),n=e.originalEvent||e,s=J.clipboardData||n.clipboardData,r=H?k().slice(a.end,a.begin):k().slice(a.begin,a.end);s.setData("text",H?r.reverse().join(""):r.join("")),ee.execCommand&&ee.execCommand("copy"),P(t,ie.keyCode.DELETE,a),$(t,k(),L().p,e,O!==k().join("")),t.inputmask._valueGet()===v().join("")&&i.trigger("cleared")},blurEvent:function(e){var t=Z(this),i=this;if(i.inputmask){var a=i.inputmask._valueGet(),n=k().slice();""!==a&&(F.clearMaskOnLostFocus&&(-1===x()&&a===v().join("")?n=[]:l(n)),!1===m(n)&&(setTimeout(function(){t.trigger("incomplete")},0),F.clearIncomplete&&(w(),n=F.clearMaskOnLostFocus?[]:v().slice())),$(i,n,te,e)),O!==k().join("")&&(O=n.join(""),t.trigger("change"))}},mouseenterEvent:function(e){var t=this;W=!0,ee.activeElement!==t&&F.showMaskOnHover&&t.inputmask._valueGet()!==k().join("")&&$(t,k())},submitEvent:function(e){O!==k().join("")&&c.trigger("change"),F.clearMaskOnLostFocus&&-1===x()&&p.inputmask._valueGet&&p.inputmask._valueGet()===v().join("")&&p.inputmask._valueSet(""),F.removeMaskOnSubmit&&(p.inputmask._valueSet(p.inputmask.unmaskedvalue(),!0),setTimeout(function(){$(p,k())},0))},resetEvent:function(e){p.inputmask.refreshValue=!0,setTimeout(function(){c.trigger("setvalue")},0)}};ie.prototype.positionColorMask=function(e,t){e.style.left=t.offsetLeft+"px"};var a;if(e!==te)switch(e.action){case"isComplete":return p=e.el,m(k());case"unmaskedvalue":return p!==te&&e.value===te||(a=e.value,a=(Z.isFunction(F.onBeforeMask)?F.onBeforeMask.call(B,a,F)||a:a).split(""),d(te,!1,!1,H?a.reverse():a),Z.isFunction(F.onBeforeWrite)&&F.onBeforeWrite.call(B,te,k(),0,F)),i(p);case"mask":!function(e){Y.off(e);var t=function(e,r){var t=e.getAttribute("type"),i="INPUT"===e.tagName&&-1!==Z.inArray(t,r.supportsInputType)||e.isContentEditable||"TEXTAREA"===e.tagName;if(!i)if("INPUT"===e.tagName){var a=ee.createElement("input");a.setAttribute("type",t),i="text"===a.type,a=null}else i="partial";return!1!==i?function(e){function t(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==x()||!0!==r.nullable?ee.activeElement===this&&r.clearMaskOnLostFocus?(H?l(k().slice()).reverse():l(k().slice())).join(""):a.call(this):"":a.call(this)}function i(e){n.call(this,e),this.inputmask&&Z(this).trigger("setvalue")}var a,n;if(!e.inputmask.__valueGet){if(!0!==r.noValuePatching){if(Object.getOwnPropertyDescriptor){"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===le("test".__proto__)?function(e){return e.__proto__}:function(e){return e.constructor.prototype});var s=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(e),"value"):te;s&&s.get&&s.set?(a=s.get,n=s.set,Object.defineProperty(e,"value",{get:t,set:i,configurable:!0})):"INPUT"!==e.tagName&&(a=function(){return this.textContent},n=function(e){this.textContent=e},Object.defineProperty(e,"value",{get:t,set:i,configurable:!0}))}else ee.__lookupGetter__&&e.__lookupGetter__("value")&&(a=e.__lookupGetter__("value"),n=e.__lookupSetter__("value"),e.__defineGetter__("value",t),e.__defineSetter__("value",i));e.inputmask.__valueGet=a,e.inputmask.__valueSet=n}e.inputmask._valueGet=function(e){return H&&!0!==e?a.call(this.el).split("").reverse().join(""):a.call(this.el)},e.inputmask._valueSet=function(e,t){n.call(this.el,null===e||e===te?"":!0!==t&&H?e.split("").reverse().join(""):e)},a===te&&(a=function(){return this.value},n=function(e){this.value=e},function(e){if(Z.valHooks&&(Z.valHooks[e]===te||!0!==Z.valHooks[e].inputmaskpatch)){var i=Z.valHooks[e]&&Z.valHooks[e].get?Z.valHooks[e].get:function(e){return e.value},n=Z.valHooks[e]&&Z.valHooks[e].set?Z.valHooks[e].set:function(e,t){return e.value=t,e};Z.valHooks[e]={get:function(e){if(e.inputmask){if(e.inputmask.opts.autoUnmask)return e.inputmask.unmaskedvalue();var t=i(e);return-1!==x(te,te,e.inputmask.maskset.validPositions)||!0!==r.nullable?t:""}return i(e)},set:function(e,t){var i,a=Z(e);return i=n(e,t),e.inputmask&&a.trigger("setvalue"),i},inputmaskpatch:!0}}}(e.type),function(e){Y.on(e,"mouseenter",function(e){var t=Z(this);this.inputmask._valueGet()!==k().join("")&&t.trigger("setvalue")})}(e))}}(e):e.inputmask=te,i}(e,F);if(!1!==t&&(p=e,c=Z(p),-1===(N=p!==te?p.maxLength:te)&&(N=te),!0===F.colorMask&&s(p),oe&&(p.hasOwnProperty("inputmode")&&(p.inputmode=F.inputmode,p.setAttribute("inputmode",F.inputmode)),"rtfm"===F.androidHack&&(!0!==F.colorMask&&s(p),p.type="password")),!0===t&&(Y.on(p,"submit",V.submitEvent),Y.on(p,"reset",V.resetEvent),Y.on(p,"mouseenter",V.mouseenterEvent),Y.on(p,"blur",V.blurEvent),Y.on(p,"focus",V.focusEvent),Y.on(p,"mouseleave",V.mouseleaveEvent),!0!==F.colorMask&&Y.on(p,"click",V.clickEvent),Y.on(p,"dblclick",V.dblclickEvent),Y.on(p,"paste",V.pasteEvent),Y.on(p,"dragdrop",V.pasteEvent),Y.on(p,"drop",V.pasteEvent),Y.on(p,"cut",V.cutEvent),Y.on(p,"complete",F.oncomplete),Y.on(p,"incomplete",F.onincomplete),Y.on(p,"cleared",F.oncleared),oe||!0===F.inputEventOnly?p.removeAttribute("maxLength"):(Y.on(p,"keydown",V.keydownEvent),Y.on(p,"keypress",V.keypressEvent)),Y.on(p,"compositionstart",Z.noop),Y.on(p,"compositionupdate",Z.noop),Y.on(p,"compositionend",Z.noop),Y.on(p,"keyup",Z.noop),Y.on(p,"input",V.inputFallBackEvent),Y.on(p,"beforeinput",Z.noop)),Y.on(p,"setvalue",V.setValueEvent),O=v().join(""),""!==p.inputmask._valueGet(!0)||!1===F.clearMaskOnLostFocus||ee.activeElement===p)){var i=Z.isFunction(F.onBeforeMask)?F.onBeforeMask.call(B,p.inputmask._valueGet(!0),F)||p.inputmask._valueGet(!0):p.inputmask._valueGet(!0);""!==i&&d(p,!0,!1,H?i.split("").reverse():i.split(""));var a=k().slice();O=a.join(""),!1===m(a)&&F.clearIncomplete&&w(),F.clearMaskOnLostFocus&&ee.activeElement!==p&&(-1===x()?a=[]:l(a)),$(p,a),ee.activeElement===p&&f(p,D(x()))}}(p);break;case"format":return a=(Z.isFunction(F.onBeforeMask)?F.onBeforeMask.call(B,e.value,F)||e.value:e.value).split(""),d(te,!0,!1,H?a.reverse():a),e.metadata?{value:H?k().slice().reverse().join(""):k().join(""),metadata:ae.call(this,{action:"getmetadata"},t,F)}:H?k().slice().reverse().join(""):k().join("");case"isValid":e.value?(a=e.value.split(""),d(te,!0,!0,H?a.reverse():a)):e.value=k().join("");for(var G=k(),X=r(),K=G.length-1;K>X&&!E(K);K--);return G.splice(X,K+1-X),m(G)&&e.value===k().join("");case"getemptymask":return v().join("");case"remove":if(p&&p.inputmask){c=Z(p),p.inputmask._valueSet(F.autoUnmask?i(p):p.inputmask._valueGet(!0)),Y.off(p);Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(p),"value")&&p.inputmask.__valueGet&&Object.defineProperty(p,"value",{get:p.inputmask.__valueGet,set:p.inputmask.__valueSet,configurable:!0}):ee.__lookupGetter__&&p.__lookupGetter__("value")&&p.inputmask.__valueGet&&(p.__defineGetter__("value",p.inputmask.__valueGet),p.__defineSetter__("value",p.inputmask.__valueSet)),p.inputmask=te}return p;case"getmetadata":if(Z.isArray(t.metadata)){var Q=n(!0,0,!1).join("");return Z.each(t.metadata,function(e,t){if(t.mask===Q)return Q=t,!1}),Q}return t.metadata}}var e=navigator.userAgent,ne=/mobile/i.test(e),se=/iemobile/i.test(e),re=/iphone/i.test(e)&&!se,oe=/android/i.test(e)&&!se;return ie.prototype={dataAttribute:"data-inputmask",defaults:{placeholder:"_",optionalmarker:{start:"[",end:"]"},quantifiermarker:{start:"{",end:"}"},groupmarker:{start:"(",end:")"},alternatormarker:"|",escapeChar:"\\",mask:null,regex:null,oncomplete:Z.noop,onincomplete:Z.noop,oncleared:Z.noop,repeat:0,greedy:!0,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,clearIncomplete:!1,alias:null,onKeyDown:Z.noop,onBeforeMask:null,onBeforePaste:function(e,t){return Z.isFunction(t.onBeforeMask)?t.onBeforeMask.call(this,e,t):e},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:Z.noop,skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",radixPointDefinitionSymbol:te,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","password"],ignorables:[8,9,13,19,27,33,34,35,36,37,38,39,40,45,46,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],isComplete:null,canClearPosition:Z.noop,preValidation:null,postValidation:null,staticDefinitionSymbol:te,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"verbatim",colorMask:!1,androidHack:!1,importDataAttributes:!0},definitions:{9:{validator:"[0-9１-９]",cardinality:1,definitionSymbol:"*"},a:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,definitionSymbol:"*"},"*":{validator:"[0-9１-９A-Za-zА-яЁёÀ-ÿµ]",cardinality:1}},aliases:{},masksCache:{},mask:function(e){function n(i,e,a,n){if(!0===e.importDataAttributes){var t,s,r,o,l=function(e,t){null!==(t=t!==te?t:i.getAttribute(n+"-"+e))&&("string"==typeof t&&(0===e.indexOf("on")?t=J[t]:"false"===t?t=!1:"true"===t&&(t=!0)),a[e]=t)},c=i.getAttribute(n);if(c&&""!==c&&(c=c.replace(new RegExp("'","g"),'"'),s=JSON.parse("{"+c+"}")),s){r=te;for(o in s)if("alias"===o.toLowerCase()){r=s[o];break}}l("alias",r),a.alias&&d(a.alias,a,e);for(t in e){if(s){r=te;for(o in s)if(o.toLowerCase()===t.toLowerCase()){r=s[o];break}}l(t,r)}}return Z.extend(!0,e,a),("rtl"===i.dir||e.rightAlign)&&(i.style.textAlign="right"),("rtl"===i.dir||e.numericInput)&&(i.dir="ltr",i.removeAttribute("dir"),e.isRTL=!0),e}var s=this;return"string"==typeof e&&(e=ee.getElementById(e)||ee.querySelectorAll(e)),e=e.nodeName?[e]:e,Z.each(e,function(e,t){var i=Z.extend(!0,{},s.opts);n(t,i,Z.extend(!0,{},s.userOptions),s.dataAttribute);var a=r(i,s.noMasksCache);a!==te&&(t.inputmask!==te&&(t.inputmask.opts.autoUnmask=!0,t.inputmask.remove()),t.inputmask=new ie(te,te,!0),t.inputmask.opts=i,t.inputmask.noMasksCache=s.noMasksCache,t.inputmask.userOptions=Z.extend(!0,{},s.userOptions),t.inputmask.isRTL=i.isRTL||i.numericInput,t.inputmask.el=t,t.inputmask.maskset=a,Z.data(t,"_inputmask_opts",i),ae.call(t.inputmask,{action:"mask"}))}),e&&e[0]?e[0].inputmask||this:this},option:function(e,t){return"string"==typeof e?this.opts[e]:"object"===(void 0===e?"undefined":le(e))?(Z.extend(this.userOptions,e),this.el&&!0!==t&&this.mask(this.el),this):void 0},unmaskedvalue:function(e){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),ae.call(this,{action:"unmaskedvalue",value:e})},remove:function(){return ae.call(this,{action:"remove"})},getemptymask:function(){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),ae.call(this,{action:"getemptymask"})},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),ae.call(this,{action:"isComplete"})},getmetadata:function(){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),ae.call(this,{action:"getmetadata"})},isValid:function(e){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),ae.call(this,{action:"isValid",value:e})},format:function(e,t){return this.maskset=this.maskset||r(this.opts,this.noMasksCache),ae.call(this,{action:"format",value:e,metadata:t})},analyseMask:function(e,u,p){function t(e,t,i,a){this.matches=[],this.openGroup=e||!1,this.alternatorGroup=!1,this.isGroup=e||!1,this.isOptional=t||!1,this.isQuantifier=i||!1,this.isAlternator=a||!1,this.quantifier={min:1,max:1}}function n(i,e,a){a=a!==te?a:i.matches.length;var n=i.matches[a-1];if(u)0===e.indexOf("[")||g&&/\\d|\\s|\\w]/i.test(e)||"."===e?i.matches.splice(a++,0,{fn:new RegExp(e,p.casing?"i":""),cardinality:1,optionality:i.isOptional,newBlockMarker:n===te||n.def!==e,casing:null,def:e,placeholder:te,nativeDef:e}):(g&&(e=e[e.length-1]),Z.each(e.split(""),function(e,t){n=i.matches[a-1],i.matches.splice(a++,0,{fn:null,cardinality:0,optionality:i.isOptional,newBlockMarker:n===te||n.def!==t&&null!==n.fn,casing:null,def:p.staticDefinitionSymbol||t,placeholder:p.staticDefinitionSymbol!==te?t:te,nativeDef:t})})),g=!1;else{var t=(p.definitions?p.definitions[e]:te)||ie.prototype.definitions[e];if(t&&!g){for(var s=t.prevalidator,r=s?s.length:0,o=1;o<t.cardinality;o++){var l=r>=o?s[o-1]:[],c=l.validator,d=l.cardinality;i.matches.splice(a++,0,{fn:c?"string"==typeof c?new RegExp(c,p.casing?"i":""):new function(){this.test=c}:new RegExp("."),cardinality:d||1,optionality:i.isOptional,newBlockMarker:n===te||n.def!==(t.definitionSymbol||e),casing:t.casing,def:t.definitionSymbol||e,placeholder:t.placeholder,nativeDef:e}),n=i.matches[a-1]}i.matches.splice(a++,0,{fn:t.validator?"string"==typeof t.validator?new RegExp(t.validator,p.casing?"i":""):new function(){this.test=t.validator}:new RegExp("."),cardinality:t.cardinality,optionality:i.isOptional,newBlockMarker:n===te||n.def!==(t.definitionSymbol||e),casing:t.casing,def:t.definitionSymbol||e,placeholder:t.placeholder,nativeDef:e})}else i.matches.splice(a++,0,{fn:null,cardinality:0,optionality:i.isOptional,newBlockMarker:n===te||n.def!==e&&null!==n.fn,casing:null,def:p.staticDefinitionSymbol||e,placeholder:p.staticDefinitionSymbol!==te?e:te,nativeDef:e}),g=!1}}function s(a){a&&a.matches&&Z.each(a.matches,function(e,t){var i=a.matches[e+1];(i===te||i.matches===te||!1===i.isQuantifier)&&t&&t.isGroup&&(t.isGroup=!1,u||(n(t,p.groupmarker.start,0),!0!==t.openGroup&&n(t,p.groupmarker.end))),s(t)})}function i(){if(y.length>0){if(c=y[y.length-1],n(c,o),c.isAlternator){d=y.pop();for(var e=0;e<d.matches.length;e++)d.matches[e].isGroup=!1;y.length>0?(c=y[y.length-1]).matches.push(d):_.matches.push(d)}}else n(_,o)}function r(e){e.matches=e.matches.reverse();for(var t in e.matches)if(e.matches.hasOwnProperty(t)){var i=parseInt(t);if(e.matches[t].isQuantifier&&e.matches[i+1]&&e.matches[i+1].isGroup){var a=e.matches[t];e.matches.splice(t,1),e.matches.splice(i+1,0,a)}e.matches[t].matches!==te?e.matches[t]=r(e.matches[t]):e.matches[t]=function(e){return e===p.optionalmarker.start?e=p.optionalmarker.end:e===p.optionalmarker.end?e=p.optionalmarker.start:e===p.groupmarker.start?e=p.groupmarker.end:e===p.groupmarker.end&&(e=p.groupmarker.start),e}(e.matches[t])}return e}var a,o,l,c,d,h,f,m=/(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g,v=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,g=!1,_=new t,y=[],b=[];for(u&&(p.optionalmarker.start=te,p.optionalmarker.end=te);a=u?v.exec(e):m.exec(e);){if(o=a[0],u)switch(o.charAt(0)){case"?":o="{0,1}";break;case"+":case"*":o="{"+o+"}"}if(g)i();else switch(o.charAt(0)){case p.escapeChar:g=!0,u&&i();break;case p.optionalmarker.end:case p.groupmarker.end:if(l=y.pop(),l.openGroup=!1,l!==te)if(y.length>0){if((c=y[y.length-1]).matches.push(l),c.isAlternator){d=y.pop();for(var k=0;k<d.matches.length;k++)d.matches[k].isGroup=!1,d.matches[k].alternatorGroup=!1;y.length>0?(c=y[y.length-1]).matches.push(d):_.matches.push(d)}}else _.matches.push(l);else i();break;case p.optionalmarker.start:y.push(new t(!1,!0));break;case p.groupmarker.start:y.push(new t(!0));break;case p.quantifiermarker.start:var $=new t(!1,!1,!0),w=(o=o.replace(/[{}]/g,"")).split(","),x=isNaN(w[0])?w[0]:parseInt(w[0]),C=1===w.length?x:isNaN(w[1])?w[1]:parseInt(w[1]);if("*"!==C&&"+"!==C||(x="*"===C?0:1),$.quantifier={min:x,max:C},y.length>0){var j=y[y.length-1].matches;(a=j.pop()).isGroup||((f=new t(!0)).matches.push(a),a=f),j.push(a),j.push($)}else(a=_.matches.pop()).isGroup||(u&&null===a.fn&&"."===a.def&&(a.fn=new RegExp(a.def,p.casing?"i":"")),(f=new t(!0)).matches.push(a),a=f),_.matches.push(a),_.matches.push($);break;case p.alternatormarker:if(y.length>0){var S=(c=y[y.length-1]).matches[c.matches.length-1];h=c.openGroup&&(S.matches===te||!1===S.isGroup&&!1===S.isAlternator)?y.pop():c.matches.pop()}else h=_.matches.pop();if(h.isAlternator)y.push(h);else if(h.alternatorGroup?(d=y.pop(),h.alternatorGroup=!1):d=new t(!1,!1,!1,!0),d.matches.push(h),y.push(d),h.openGroup){h.openGroup=!1;var T=new t(!0);T.alternatorGroup=!0,y.push(T)}break;default:i()}}for(;y.length>0;)l=y.pop(),_.matches.push(l);return _.matches.length>0&&(s(_),b.push(_)),(p.numericInput||p.isRTL)&&r(b[0]),b}},ie.extendDefaults=function(e){Z.extend(!0,ie.prototype.defaults,e)},ie.extendDefinitions=function(e){Z.extend(!0,ie.prototype.definitions,e)},ie.extendAliases=function(e){Z.extend(!0,ie.prototype.aliases,e)},ie.format=function(e,t,i){return ie(t).format(e,i)},ie.unmask=function(e,t){return ie(t).unmaskedvalue(e)},ie.isValid=function(e,t){return ie(t).isValid(e)},ie.remove=function(e){Z.each(e,function(e,t){t.inputmask&&t.inputmask.remove()})},ie.escapeRegex=function(e){var t=["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"];return e.replace(new RegExp("(\\"+t.join("|\\")+")","gim"),"\\$1")},ie.keyCode={ALT:18,BACKSPACE:8,BACKSPACE_SAFARI:127,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91,X:88},ie})?a.apply(t,n):a)&&(e.exports=s)},function(e,t){e.exports=jQuery},function(e,t,i){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}i(4),i(9),i(12),i(13),i(14),i(15);var n=a(i(1)),s=a(i(0)),r=a(i(2));s.default===r.default&&i(16),window.Inputmask=n.default},function(e,t,i){var a=i(5);"string"==typeof a&&(a=[[e.i,a,""]]);var n={hmr:!0,transform:void 0};i(7)(a,n),a.locals&&(e.exports=a.locals)},function(e,t,i){(e.exports=i(6)(void 0)).push([e.i,"span.im-caret {\r\n    -webkit-animation: 1s blink step-end infinite;\r\n    animation: 1s blink step-end infinite;\r\n}\r\n\r\n@keyframes blink {\r\n    from, to {\r\n        border-right-color: black;\r\n    }\r\n    50% {\r\n        border-right-color: transparent;\r\n    }\r\n}\r\n\r\n@-webkit-keyframes blink {\r\n    from, to {\r\n        border-right-color: black;\r\n    }\r\n    50% {\r\n        border-right-color: transparent;\r\n    }\r\n}\r\n\r\nspan.im-static {\r\n    color: grey;\r\n}\r\n\r\ndiv.im-colormask {\r\n    display: inline-block;\r\n    border-style: inset;\r\n    border-width: 2px;\r\n    -webkit-appearance: textfield;\r\n    -moz-appearance: textfield;\r\n    appearance: textfield;\r\n}\r\n\r\ndiv.im-colormask > input {\r\n    position: absolute;\r\n    display: inline-block;\r\n    background-color: transparent;\r\n    color: transparent;\r\n    -webkit-appearance: caret;\r\n    -moz-appearance: caret;\r\n    appearance: caret;\r\n    border-style: none;\r\n    left: 0; /*calculated*/\r\n}\r\n\r\ndiv.im-colormask > input:focus {\r\n    outline: none;\r\n}\r\n\r\ndiv.im-colormask > input::-moz-selection{\r\n    background: none;\r\n}\r\n\r\ndiv.im-colormask > input::selection{\r\n    background: none;\r\n}\r\ndiv.im-colormask > input::-moz-selection{\r\n    background: none;\r\n}\r\n\r\ndiv.im-colormask > div {\r\n    color: black;\r\n    display: inline-block;\r\n    width: 100px; /*calculated*/\r\n}",""])},function(e,t){function a(e,t){var i,a=e[1]||"",n=e[3];if(!n)return a;if(t&&"function"==typeof btoa){var s=(i=n,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),r=n.sources.map(function(e){return"/*# sourceURL="+n.sourceRoot+e+" */"});return[a].concat(r).concat([s]).join("\n")}return[a].join("\n")}e.exports=function(i){var r=[];return r.toString=function(){return this.map(function(e){var t=a(e,i);return e[2]?"@media "+e[2]+"{"+t+"}":t}).join("")},r.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var i={},a=0;a<this.length;a++){var n=this[a][0];"number"==typeof n&&(i[n]=!0)}for(a=0;a<e.length;a++){var s=e[a];"number"==typeof s[0]&&i[s[0]]||(t&&!s[2]?s[2]=t:t&&(s[2]="("+s[2]+") and ("+t+")"),r.push(s))}},r}},function(e,t,i){function l(e,t){for(var i=0;i<e.length;i++){var a=e[i],n=m[a.id];if(n){for(n.refs++,r=0;r<n.parts.length;r++)n.parts[r](a.parts[r]);for(;r<a.parts.length;r++)n.parts.push(o(a.parts[r],t))}else{for(var s=[],r=0;r<a.parts.length;r++)s.push(o(a.parts[r],t));m[a.id]={id:a.id,refs:1,parts:s}}}}function c(e,t){for(var i=[],a={},n=0;n<e.length;n++){var s=e[n],r=t.base?s[0]+t.base:s[0],o={css:s[1],media:s[2],sourceMap:s[3]};a[r]?a[r].parts.push(o):i.push(a[r]={id:r,parts:[o]})}return i}function d(e,t){var i=r(e.insertInto);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var a=_[_.length-1];if("top"===e.insertAt)a?a.nextSibling?i.insertBefore(t,a.nextSibling):i.appendChild(t):i.insertBefore(t,i.firstChild),_.push(t);else if("bottom"===e.insertAt)i.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var n=r(e.insertInto+" "+e.insertAt.before);i.insertBefore(t,n)}}function u(e){if(null!==e.parentNode){e.parentNode.removeChild(e);var t=_.indexOf(e);0<=t&&_.splice(t,1)}}function p(e){var t=document.createElement("style");return e.attrs.type="text/css",h(t,e.attrs),d(e,t),t}function h(t,i){Object.keys(i).forEach(function(e){t.setAttribute(e,i[e])})}function o(t,e){var i,a,n,s,r,o;if(e.transform&&t.css){if(!(s=e.transform(t.css)))return function(){};t.css=s}if(e.singleton){var l=g++;i=v=v||p(e),a=f.bind(null,i,l,!1),n=f.bind(null,i,l,!0)}else n=t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(r=e,o=document.createElement("link"),r.attrs.type="text/css",r.attrs.rel="stylesheet",h(o,r.attrs),d(r,o),a=function(e,t,i){var a=i.css,n=i.sourceMap,s=void 0===t.convertToAbsoluteUrls&&n;(t.convertToAbsoluteUrls||s)&&(a=y(a)),n&&(a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */");var r=new Blob([a],{type:"text/css"}),o=e.href;e.href=URL.createObjectURL(r),o&&URL.revokeObjectURL(o)}.bind(null,i=o,e),function(){u(i),i.href&&URL.revokeObjectURL(i.href)}):(i=p(e),a=function(e,t){var i=t.css,a=t.media;if(a&&e.setAttribute("media",a),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}.bind(null,i),function(){u(i)});return a(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;a(t=e)}else n()}}function f(e,t,i,a){var n=i?"":a.css;if(e.styleSheet)e.styleSheet.cssText=k(t,n);else{var s=document.createTextNode(n),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(s,r[t]):e.appendChild(s)}}var a,n,m={},s=function(){return void 0===n&&(n=function(){return window&&document&&document.all&&!window.atob}.apply(this,arguments)),n},r=(a={},function(e){if(void 0===a[e]){var t=function(e){return document.querySelector(e)}.call(this,e);if(t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}a[e]=t}return a[e]}),v=null,g=0,_=[],y=i(8);e.exports=function(e,r){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(r=r||{}).attrs="object"==typeof r.attrs?r.attrs:{},r.singleton||(r.singleton=s()),r.insertInto||(r.insertInto="head"),r.insertAt||(r.insertAt="bottom");var o=c(e,r);return l(o,r),function(e){for(var t=[],i=0;i<o.length;i++){var a=o[i];(n=m[a.id]).refs--,t.push(n)}for(e&&l(c(e,r),r),i=0;i<t.length;i++){var n=t[i];if(0===n.refs){for(var s=0;s<n.parts.length;s++)n.parts[s]();delete m[n.id]}}}};var b,k=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")})},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,s=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var i,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(a)?e:(i=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:s+a.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},function(e,t,i){"use strict";var a,n,s;n=[i(0),i(1)],void 0!==(s="function"==typeof(a=function(r,o){function l(e){return isNaN(e)||29===new Date(e,2,0).getDate()}return o.extendAliases({"dd/mm/yyyy":{mask:"1/2/y",placeholder:"dd/mm/yyyy",regex:{val1pre:new RegExp("[0-3]"),val1:new RegExp("0[1-9]|[12][0-9]|3[01]"),val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|[12][0-9]|3[01])"+t+"[01])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|[12][0-9])"+t+"(0[1-9]|1[012]))|(30"+t+"(0[13-9]|1[012]))|(31"+t+"(0[13578]|1[02]))")}},leapday:"29/02/",separator:"/",yearrange:{minyear:1900,maxyear:2099},isInYearRange:function(e,t,i){if(isNaN(e))return!1;var a=parseInt(e.concat(t.toString().slice(e.length))),n=parseInt(e.concat(i.toString().slice(e.length)));return!isNaN(a)&&(t<=a&&a<=i)||!isNaN(n)&&(t<=n&&n<=i)},determinebaseyear:function(e,t,i){var a=(new Date).getFullYear();if(e>a)return e;if(t<a){for(var n=t.toString().slice(0,2),s=t.toString().slice(2,4);t<n+i;)n--;var r=n+s;return e>r?e:r}if(e<=a&&a<=t){for(var o=a.toString().slice(0,2);t<o+i;)o--;var l=o+i;return l<e?e:l}return a},onKeyDown:function(e,t,i,a){var n=r(this);if(e.ctrlKey&&e.keyCode===o.keyCode.RIGHT){var s=new Date;n.val(s.getDate().toString()+(s.getMonth()+1).toString()+s.getFullYear().toString()),n.trigger("setvalue")}},getFrontValue:function(e,t,i){for(var a=0,n=0,s=0;s<e.length&&"2"!==e.charAt(s);s++){var r=i.definitions[e.charAt(s)];r?(a+=n,n=r.cardinality):n++}return t.join("").substr(a,n)},postValidation:function(e,t,i){var a,n,s=e.join("");return 0===i.mask.indexOf("y")?(n=s.substr(0,4),a=s.substring(4,10)):(n=s.substring(6,10),a=s.substr(0,6)),t&&(a!==i.leapday||l(n))},definitions:{1:{validator:function(e,t,i,a,n){var s=n.regex.val1.test(e);return a||s||e.charAt(1)!==n.separator&&-1==="-./".indexOf(e.charAt(1))||!(s=n.regex.val1.test("0"+e.charAt(0)))?s:(t.buffer[i-1]="0",{refreshFromBuffer:{start:i-1,end:i},pos:i,c:e.charAt(0)})},cardinality:2,prevalidator:[{validator:function(e,t,i,a,n){var s=e;isNaN(t.buffer[i+1])||(s+=t.buffer[i+1]);var r=1===s.length?n.regex.val1pre.test(s):n.regex.val1.test(s);if(r&&t.validPositions[i]&&(n.regex.val2(n.separator).test(e+t.validPositions[i].input)||(t.validPositions[i].input="0"===e?"1":"0")),!a&&!r){if(r=n.regex.val1.test(e+"0"))return t.buffer[i]=e,t.buffer[++i]="0",{pos:i,c:"0"};if(r=n.regex.val1.test("0"+e))return t.buffer[i]="0",i++,{pos:i}}return r},cardinality:1}]},2:{validator:function(e,t,i,a,n){var s=n.getFrontValue(t.mask,t.buffer,n);-1!==s.indexOf(n.placeholder[0])&&(s="01"+n.separator);var r=n.regex.val2(n.separator).test(s+e);return a||r||e.charAt(1)!==n.separator&&-1==="-./".indexOf(e.charAt(1))||!(r=n.regex.val2(n.separator).test(s+"0"+e.charAt(0)))?r:(t.buffer[i-1]="0",{refreshFromBuffer:{start:i-1,end:i},pos:i,c:e.charAt(0)})},cardinality:2,prevalidator:[{validator:function(e,t,i,a,n){isNaN(t.buffer[i+1])||(e+=t.buffer[i+1]);var s=n.getFrontValue(t.mask,t.buffer,n);-1!==s.indexOf(n.placeholder[0])&&(s="01"+n.separator);var r=1===e.length?n.regex.val2pre(n.separator).test(s+e):n.regex.val2(n.separator).test(s+e);return r&&t.validPositions[i]&&(n.regex.val2(n.separator).test(e+t.validPositions[i].input)||(t.validPositions[i].input="0"===e?"1":"0")),a||r||!(r=n.regex.val2(n.separator).test(s+"0"+e))?r:(t.buffer[i]="0",i++,{pos:i})},cardinality:1}]},y:{validator:function(e,t,i,a,n){return n.isInYearRange(e,n.yearrange.minyear,n.yearrange.maxyear)},cardinality:4,prevalidator:[{validator:function(e,t,i,a,n){var s=n.isInYearRange(e,n.yearrange.minyear,n.yearrange.maxyear);if(!a&&!s){var r=n.determinebaseyear(n.yearrange.minyear,n.yearrange.maxyear,e+"0").toString().slice(0,1);if(s=n.isInYearRange(r+e,n.yearrange.minyear,n.yearrange.maxyear))return t.buffer[i++]=r.charAt(0),{pos:i};if(r=n.determinebaseyear(n.yearrange.minyear,n.yearrange.maxyear,e+"0").toString().slice(0,2),s=n.isInYearRange(r+e,n.yearrange.minyear,n.yearrange.maxyear))return t.buffer[i++]=r.charAt(0),t.buffer[i++]=r.charAt(1),{pos:i}}return s},cardinality:1},{validator:function(e,t,i,a,n){var s=n.isInYearRange(e,n.yearrange.minyear,n.yearrange.maxyear);if(!a&&!s){var r=n.determinebaseyear(n.yearrange.minyear,n.yearrange.maxyear,e).toString().slice(0,2);if(s=n.isInYearRange(e[0]+r[1]+e[1],n.yearrange.minyear,n.yearrange.maxyear))return t.buffer[i++]=r.charAt(1),{pos:i};if(r=n.determinebaseyear(n.yearrange.minyear,n.yearrange.maxyear,e).toString().slice(0,2),s=n.isInYearRange(r+e,n.yearrange.minyear,n.yearrange.maxyear))return t.buffer[i-1]=r.charAt(0),t.buffer[i++]=r.charAt(1),t.buffer[i++]=e.charAt(0),{refreshFromBuffer:{start:i-3,end:i},pos:i}}return s},cardinality:2},{validator:function(e,t,i,a,n){return n.isInYearRange(e,n.yearrange.minyear,n.yearrange.maxyear)},cardinality:3}]}},insertMode:!1,autoUnmask:!1},"mm/dd/yyyy":{placeholder:"mm/dd/yyyy",alias:"dd/mm/yyyy",regex:{val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(e,t,i,a){var n=r(this);if(e.ctrlKey&&e.keyCode===o.keyCode.RIGHT){var s=new Date;n.val((s.getMonth()+1).toString()+s.getDate().toString()+s.getFullYear().toString()),n.trigger("setvalue")}}},"yyyy/mm/dd":{mask:"y/1/2",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",leapday:"/02/29",onKeyDown:function(e,t,i,a){var n=r(this);if(e.ctrlKey&&e.keyCode===o.keyCode.RIGHT){var s=new Date;n.val(s.getFullYear().toString()+(s.getMonth()+1).toString()+s.getDate().toString()),n.trigger("setvalue")}}},"dd.mm.yyyy":{mask:"1.2.y",placeholder:"dd.mm.yyyy",leapday:"29.02.",separator:".",alias:"dd/mm/yyyy"},"dd-mm-yyyy":{mask:"1-2-y",placeholder:"dd-mm-yyyy",leapday:"29-02-",separator:"-",alias:"dd/mm/yyyy"},"mm.dd.yyyy":{mask:"1.2.y",placeholder:"mm.dd.yyyy",leapday:"02.29.",separator:".",alias:"mm/dd/yyyy"},"mm-dd-yyyy":{mask:"1-2-y",placeholder:"mm-dd-yyyy",leapday:"02-29-",separator:"-",alias:"mm/dd/yyyy"},"yyyy.mm.dd":{mask:"y.1.2",placeholder:"yyyy.mm.dd",leapday:".02.29",separator:".",alias:"yyyy/mm/dd"},"yyyy-mm-dd":{mask:"y-1-2",placeholder:"yyyy-mm-dd",leapday:"-02-29",separator:"-",alias:"yyyy/mm/dd"},datetime:{mask:"1/2/y h:s",placeholder:"dd/mm/yyyy hh:mm",alias:"dd/mm/yyyy",regex:{hrspre:new RegExp("[012]"),hrs24:new RegExp("2[0-4]|1[3-9]"),hrs:new RegExp("[01][0-9]|2[0-4]"),ampm:new RegExp("^[a|p|A|P][m|M]"),mspre:new RegExp("[0-5]"),ms:new RegExp("[0-5][0-9]")},timeseparator:":",hourFormat:"24",definitions:{h:{validator:function(e,t,i,a,n){if("24"===n.hourFormat&&24===parseInt(e,10))return t.buffer[i-1]="0",t.buffer[i]="0",{refreshFromBuffer:{start:i-1,end:i},c:"0"};var s=n.regex.hrs.test(e);if(!a&&!s&&(e.charAt(1)===n.timeseparator||-1!=="-.:".indexOf(e.charAt(1)))&&(s=n.regex.hrs.test("0"+e.charAt(0))))return t.buffer[i-1]="0",t.buffer[i]=e.charAt(0),i++,{refreshFromBuffer:{start:i-2,end:i},pos:i,c:n.timeseparator};if(s&&"24"!==n.hourFormat&&n.regex.hrs24.test(e)){var r=parseInt(e,10);return 24===r?(t.buffer[i+5]="a",t.buffer[i+6]="m"):(t.buffer[i+5]="p",t.buffer[i+6]="m"),(r-=12)<10?(t.buffer[i]=r.toString(),t.buffer[i-1]="0"):(t.buffer[i]=r.toString().charAt(1),t.buffer[i-1]=r.toString().charAt(0)),{refreshFromBuffer:{start:i-1,end:i+6},c:t.buffer[i]}}return s},cardinality:2,prevalidator:[{validator:function(e,t,i,a,n){var s=n.regex.hrspre.test(e);return a||s||!(s=n.regex.hrs.test("0"+e))?s:(t.buffer[i]="0",i++,{pos:i})},cardinality:1}]},s:{validator:"[0-5][0-9]",cardinality:2,prevalidator:[{validator:function(e,t,i,a,n){var s=n.regex.mspre.test(e);return a||s||!(s=n.regex.ms.test("0"+e))?s:(t.buffer[i]="0",i++,{pos:i})},cardinality:1}]},t:{validator:function(e,t,i,a,n){return n.regex.ampm.test(e+"m")},casing:"lower",cardinality:1}},insertMode:!1,autoUnmask:!1},datetime12:{mask:"1/2/y h:s t\\m",placeholder:"dd/mm/yyyy hh:mm xm",alias:"datetime",hourFormat:"12"},"mm/dd/yyyy hh:mm xm":{mask:"1/2/y h:s t\\m",placeholder:"mm/dd/yyyy hh:mm xm",alias:"datetime12",regex:{val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},leapday:"02/29/",onKeyDown:function(e,t,i,a){var n=r(this);if(e.ctrlKey&&e.keyCode===o.keyCode.RIGHT){var s=new Date;n.val((s.getMonth()+1).toString()+s.getDate().toString()+s.getFullYear().toString()),n.trigger("setvalue")}}},"hh:mm t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"h:s t":{mask:"h:s t\\m",placeholder:"hh:mm xm",alias:"datetime",hourFormat:"12"},"hh:mm:ss":{mask:"h:s:s",placeholder:"hh:mm:ss",alias:"datetime",autoUnmask:!1},"hh:mm":{mask:"h:s",placeholder:"hh:mm",alias:"datetime",autoUnmask:!1},date:{alias:"dd/mm/yyyy"},"mm/yyyy":{mask:"1/y",placeholder:"mm/yyyy",leapday:"donotuse",separator:"/",alias:"mm/dd/yyyy"},shamsi:{regex:{val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"[0-3])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[1-9]|1[012])"+t+"30)|((0[1-6])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},yearrange:{minyear:1300,maxyear:1499},mask:"y/1/2",leapday:"/12/30",placeholder:"yyyy/mm/dd",alias:"mm/dd/yyyy",clearIncomplete:!0},"yyyy-mm-dd hh:mm:ss":{mask:"y-1-2 h:s:s",placeholder:"yyyy-mm-dd hh:mm:ss",alias:"datetime",separator:"-",leapday:"-02-29",regex:{val2pre:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[13-9]|1[012])"+t+"[0-3])|(02"+t+"[0-2])")},val2:function(e){var t=o.escapeRegex.call(this,e);return new RegExp("((0[1-9]|1[012])"+t+"(0[1-9]|[12][0-9]))|((0[13-9]|1[012])"+t+"30)|((0[13578]|1[02])"+t+"31)")},val1pre:new RegExp("[01]"),val1:new RegExp("0[1-9]|1[012]")},onKeyDown:function(e,t,i,a){}}}),o})?a.apply(t,n):a)&&(e.exports=s)},function(e,t,i){"use strict";var a;void 0!==(a=function(){return window}.call(t,i,t,e))&&(e.exports=a)},function(e,t,i){"use strict";var a;void 0!==(a=function(){return document}.call(t,i,t,e))&&(e.exports=a)},function(e,t,i){"use strict";var a,n,s;n=[i(0),i(1)],void 0!==(s="function"==typeof(a=function(e,t){return t.extendDefinitions({A:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,casing:"upper"},"&":{validator:"[0-9A-Za-zА-яЁёÀ-ÿµ]",cardinality:1,casing:"upper"},"#":{validator:"[0-9A-Fa-f]",cardinality:1,casing:"upper"}}),t.extendAliases({url:{definitions:{i:{validator:".",cardinality:1}},mask:"(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)i{+}",insertMode:!1,autoUnmask:!1,inputmode:"url"},ip:{mask:"i[i[i]].i[i[i]].i[i[i]].i[i[i]]",definitions:{i:{validator:function(e,t,i,a,n){return i-1>-1&&"."!==t.buffer[i-1]?(e=t.buffer[i-1]+e,e=i-2>-1&&"."!==t.buffer[i-2]?t.buffer[i-2]+e:"0"+e):e="00"+e,new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(e)},cardinality:1}},onUnMask:function(e,t,i){return e},inputmode:"numeric"},email:{mask:"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",greedy:!1,onBeforePaste:function(e,t){return(e=e.toLowerCase()).replace("mailto:","")},definitions:{"*":{validator:"[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]",cardinality:1,casing:"lower"},"-":{validator:"[0-9A-Za-z-]",cardinality:1,casing:"lower"}},onUnMask:function(e,t,i){return e},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",cardinality:1,casing:"upper"}},clearIncomplete:!0,autoUnmask:!0}}),t})?a.apply(t,n):a)&&(e.exports=s)},function(e,t,i){"use strict";var a,n,s;n=[i(0),i(1)],void 0!==(s="function"==typeof(a=function(m,v,g){function s(e,t){for(var i="",a=0;a<e.length;a++)v.prototype.definitions[e.charAt(a)]||t.definitions[e.charAt(a)]||t.optionalmarker.start===e.charAt(a)||t.optionalmarker.end===e.charAt(a)||t.quantifiermarker.start===e.charAt(a)||t.quantifiermarker.end===e.charAt(a)||t.groupmarker.start===e.charAt(a)||t.groupmarker.end===e.charAt(a)||t.alternatormarker===e.charAt(a)?i+="\\"+e.charAt(a):i+=e.charAt(a);return i}return v.extendAliases({numeric:{mask:function(e){if(0!==e.repeat&&isNaN(e.integerDigits)&&(e.integerDigits=e.repeat),e.repeat=0,e.groupSeparator===e.radixPoint&&("."===e.radixPoint?e.groupSeparator=",":","===e.radixPoint?e.groupSeparator=".":e.groupSeparator="")," "===e.groupSeparator&&(e.skipOptionalPartCharacter=g),e.autoGroup=e.autoGroup&&""!==e.groupSeparator,e.autoGroup&&("string"==typeof e.groupSize&&isFinite(e.groupSize)&&(e.groupSize=parseInt(e.groupSize)),isFinite(e.integerDigits))){var t=Math.floor(e.integerDigits/e.groupSize),i=e.integerDigits%e.groupSize;e.integerDigits=parseInt(e.integerDigits)+(0===i?t-1:t),e.integerDigits<1&&(e.integerDigits="*")}e.placeholder.length>1&&(e.placeholder=e.placeholder.charAt(0)),"radixFocus"===e.positionCaretOnClick&&""===e.placeholder&&!1===e.integerOptional&&(e.positionCaretOnClick="lvp"),e.definitions[";"]=e.definitions["~"],e.definitions[";"].definitionSymbol="~",!0===e.numericInput&&(e.positionCaretOnClick="radixFocus"===e.positionCaretOnClick?"lvp":e.positionCaretOnClick,e.digitsOptional=!1,isNaN(e.digits)&&(e.digits=2),e.decimalProtect=!1);var a="[+]";if(a+=s(e.prefix,e),!0===e.integerOptional?a+="~{1,"+e.integerDigits+"}":a+="~{"+e.integerDigits+"}",e.digits!==g){e.radixPointDefinitionSymbol=e.decimalProtect?":":e.radixPoint;var n=e.digits.toString().split(",");isFinite(n[0]&&n[1]&&isFinite(n[1]))?a+=e.radixPointDefinitionSymbol+";{"+e.digits+"}":(isNaN(e.digits)||parseInt(e.digits)>0)&&(e.digitsOptional?a+="["+e.radixPointDefinitionSymbol+";{1,"+e.digits+"}]":a+=e.radixPointDefinitionSymbol+";{"+e.digits+"}")}return a+=s(e.suffix,e),a+="[-]",e.greedy=!1,a},placeholder:"",greedy:!1,digits:"*",digitsOptional:!0,enforceDigitsOnBlur:!1,radixPoint:".",positionCaretOnClick:"radixFocus",groupSize:3,groupSeparator:"",autoGroup:!1,allowMinus:!0,negationSymbol:{front:"-",back:""},integerDigits:"+",integerOptional:!0,prefix:"",suffix:"",rightAlign:!0,decimalProtect:!0,min:null,max:null,step:1,insertMode:!0,autoUnmask:!1,unmaskAsNumber:!1,inputmode:"numeric",preValidation:function(e,t,i,a,n){if("-"===i||i===n.negationSymbol.front)return!0===n.allowMinus&&(n.isNegative=n.isNegative===g||!n.isNegative,""===e.join("")||{caret:t,dopost:!0});if(!1===a&&i===n.radixPoint&&n.digits!==g&&(isNaN(n.digits)||parseInt(n.digits)>0)){var s=m.inArray(n.radixPoint,e);if(-1!==s)return!0===n.numericInput?t===s:{caret:s+1}}return!0},postValidation:function(e,t,i){var a=i.suffix.split(""),n=i.prefix.split("");if(t.pos===g&&t.caret!==g&&!0!==t.dopost)return t;var s=t.caret!==g?t.caret:t.pos,r=e.slice();i.numericInput&&(s=r.length-s-1,r=r.reverse());var o=r[s];if(o===i.groupSeparator&&(o=r[s+=1]),s===r.length-i.suffix.length-1&&o===i.radixPoint)return t;o!==g&&o!==i.radixPoint&&o!==i.negationSymbol.front&&o!==i.negationSymbol.back&&(r[s]="?",i.prefix.length>0&&s>=(!1===i.isNegative?1:0)&&s<i.prefix.length-1+(!1===i.isNegative?1:0)?n[s-(!1===i.isNegative?1:0)]="?":i.suffix.length>0&&s>=r.length-i.suffix.length-(!1===i.isNegative?1:0)&&(a[s-(r.length-i.suffix.length-(!1===i.isNegative?1:0))]="?")),n=n.join(""),a=a.join("");var l=r.join("").replace(n,"");if(l=l.replace(a,""),l=l.replace(new RegExp(v.escapeRegex(i.groupSeparator),"g"),""),l=l.replace(new RegExp("[-"+v.escapeRegex(i.negationSymbol.front)+"]","g"),""),l=l.replace(new RegExp(v.escapeRegex(i.negationSymbol.back)+"$"),""),isNaN(i.placeholder)&&(l=l.replace(new RegExp(v.escapeRegex(i.placeholder),"g"),"")),l.length>1&&1!==l.indexOf(i.radixPoint)&&("0"===o&&(l=l.replace(/^\?/g,"")),l=l.replace(/^0/g,"")),l.charAt(0)===i.radixPoint&&""!==i.radixPoint&&!0!==i.numericInput&&(l="0"+l),""!==l){if(l=l.split(""),(!i.digitsOptional||i.enforceDigitsOnBlur&&"blur"===t.event)&&isFinite(i.digits)){var c=m.inArray(i.radixPoint,l),d=m.inArray(i.radixPoint,r);-1===c&&(l.push(i.radixPoint),c=l.length-1);for(var u=1;u<=i.digits;u++)i.digitsOptional&&(!i.enforceDigitsOnBlur||"blur"!==t.event)||l[c+u]!==g&&l[c+u]!==i.placeholder.charAt(0)?-1!==d&&r[d+u]!==g&&(l[c+u]=l[c+u]||r[d+u]):l[c+u]=t.placeholder||i.placeholder.charAt(0)}if(!0!==i.autoGroup||""===i.groupSeparator||o===i.radixPoint&&t.pos===g&&!t.dopost)l=l.join("");else{var p=l[l.length-1]===i.radixPoint&&t.c===i.radixPoint;l=v(function(e,t){var i="";if(i+="("+t.groupSeparator+"*{"+t.groupSize+"}){*}",""!==t.radixPoint){var a=e.join("").split(t.radixPoint);a[1]&&(i+=t.radixPoint+"*{"+a[1].match(/^\d*\??\d*/)[0].length+"}")}return i}(l,i),{numericInput:!0,jitMasking:!0,definitions:{"*":{validator:"[0-9?]",cardinality:1}}}).format(l.join("")),p&&(l+=i.radixPoint),l.charAt(0)===i.groupSeparator&&l.substr(1)}}if(i.isNegative&&"blur"===t.event&&(i.isNegative="0"!==l),l=n+l,l+=a,i.isNegative&&(l=i.negationSymbol.front+l,l+=i.negationSymbol.back),l=l.split(""),o!==g)if(o!==i.radixPoint&&o!==i.negationSymbol.front&&o!==i.negationSymbol.back)(s=m.inArray("?",l))>-1?l[s]=o:s=t.caret||0;else if(o===i.radixPoint||o===i.negationSymbol.front||o===i.negationSymbol.back){var h=m.inArray(o,l);-1!==h&&(s=h)}i.numericInput&&(s=l.length-s-1,l=l.reverse());var f={caret:o===g||t.pos!==g?s+(i.numericInput?-1:1):s,buffer:l,refreshFromBuffer:t.dopost||e.join("")!==l.join("")};return f.refreshFromBuffer?f:t},onBeforeWrite:function(e,t,i,a){if(e)switch(e.type){case"keydown":return a.postValidation(t,{caret:i,dopost:!0},a);case"blur":case"checkval":var n;if(function(e){e.parseMinMaxOptions===g&&(null!==e.min&&(e.min=e.min.toString().replace(new RegExp(v.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.min=e.min.replace(e.radixPoint,".")),e.min=isFinite(e.min)?parseFloat(e.min):NaN,isNaN(e.min)&&(e.min=Number.MIN_VALUE)),null!==e.max&&(e.max=e.max.toString().replace(new RegExp(v.escapeRegex(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.max=e.max.replace(e.radixPoint,".")),e.max=isFinite(e.max)?parseFloat(e.max):NaN,isNaN(e.max)&&(e.max=Number.MAX_VALUE)),e.parseMinMaxOptions="done")}(a),null!==a.min||null!==a.max){if(n=a.onUnMask(t.join(""),g,m.extend({},a,{unmaskAsNumber:!0})),null!==a.min&&n<a.min)return a.isNegative=a.min<0,a.postValidation(a.min.toString().replace(".",a.radixPoint).split(""),{caret:i,dopost:!0,placeholder:"0"},a);if(null!==a.max&&n>a.max)return a.isNegative=a.max<0,a.postValidation(a.max.toString().replace(".",a.radixPoint).split(""),{caret:i,dopost:!0,placeholder:"0"},a)}return a.postValidation(t,{caret:i,placeholder:"0",event:"blur"},a);case"_checkval":return{caret:i}}},regex:{integerPart:function(e,t){return t?new RegExp("["+v.escapeRegex(e.negationSymbol.front)+"+]?"):new RegExp("["+v.escapeRegex(e.negationSymbol.front)+"+]?\\d+")},integerNPart:function(e){return new RegExp("[\\d"+v.escapeRegex(e.groupSeparator)+v.escapeRegex(e.placeholder.charAt(0))+"]+")}},definitions:{"~":{validator:function(e,t,i,a,n,s){var r=a?new RegExp("[0-9"+v.escapeRegex(n.groupSeparator)+"]").test(e):new RegExp("[0-9]").test(e);if(!0===r){if(!0!==n.numericInput&&t.validPositions[i]!==g&&"~"===t.validPositions[i].match.def&&!s){var o=t.buffer.join(""),l=(o=(o=o.replace(new RegExp("[-"+v.escapeRegex(n.negationSymbol.front)+"]","g"),"")).replace(new RegExp(v.escapeRegex(n.negationSymbol.back)+"$"),"")).split(n.radixPoint);l.length>1&&(l[1]=l[1].replace(/0/g,n.placeholder.charAt(0))),"0"===l[0]&&(l[0]=l[0].replace(/0/g,n.placeholder.charAt(0))),o=l[0]+n.radixPoint+l[1]||"";var c=t._buffer.join("");for(o===n.radixPoint&&(o=c);null===o.match(v.escapeRegex(c)+"$");)c=c.slice(1);r=(o=(o=o.replace(c,"")).split(""))[i]===g?{pos:i,remove:i}:{pos:i}}}else a||e!==n.radixPoint||t.validPositions[i-1]!==g||(t.buffer[i]="0",r={pos:i+1});return r},cardinality:1},"+":{validator:function(e,t,i,a,n){return n.allowMinus&&("-"===e||e===n.negationSymbol.front)},cardinality:1,placeholder:""},"-":{validator:function(e,t,i,a,n){return n.allowMinus&&e===n.negationSymbol.back},cardinality:1,placeholder:""},":":{validator:function(e,t,i,a,n){var s="["+v.escapeRegex(n.radixPoint)+"]",r=new RegExp(s).test(e);return r&&t.validPositions[i]&&t.validPositions[i].match.placeholder===n.radixPoint&&(r={caret:i+1}),r},cardinality:1,placeholder:function(e){return e.radixPoint}}},onUnMask:function(e,t,i){if(""===t&&!0===i.nullable)return t;var a=e.replace(i.prefix,"");return a=a.replace(i.suffix,""),a=a.replace(new RegExp(v.escapeRegex(i.groupSeparator),"g"),""),""!==i.placeholder.charAt(0)&&(a=a.replace(new RegExp(i.placeholder.charAt(0),"g"),"0")),i.unmaskAsNumber?(""!==i.radixPoint&&-1!==a.indexOf(i.radixPoint)&&(a=a.replace(v.escapeRegex.call(this,i.radixPoint),".")),a=a.replace(new RegExp("^"+v.escapeRegex(i.negationSymbol.front)),"-"),a=a.replace(new RegExp(v.escapeRegex(i.negationSymbol.back)+"$"),""),Number(a)):a},isComplete:function(e,t){var i=e.join("");if(e.slice().join("")!==i)return!1;var a=i.replace(t.prefix,"");return a=a.replace(t.suffix,""),a=a.replace(new RegExp(v.escapeRegex(t.groupSeparator),"g"),""),","===t.radixPoint&&(a=a.replace(v.escapeRegex(t.radixPoint),".")),isFinite(a)},onBeforeMask:function(e,t){if(t.isNegative=g,e=e.toString().charAt(e.length-1)===t.radixPoint?e.toString().substr(0,e.length-1):e.toString(),""!==t.radixPoint&&isFinite(e)){var i=e.split("."),a=""!==t.groupSeparator?parseInt(t.groupSize):0;2===i.length&&(i[0].length>a||i[1].length>a||i[0].length<=a&&i[1].length<a)&&(e=e.replace(".",t.radixPoint))}var n=e.match(/,/g),s=e.match(/\./g);if(e=s&&n?s.length>n.length?(e=e.replace(/\./g,"")).replace(",",t.radixPoint):n.length>s.length?(e=e.replace(/,/g,"")).replace(".",t.radixPoint):e.indexOf(".")<e.indexOf(",")?e.replace(/\./g,""):e.replace(/,/g,""):e.replace(new RegExp(v.escapeRegex(t.groupSeparator),"g"),""),0===t.digits&&(-1!==e.indexOf(".")?e=e.substring(0,e.indexOf(".")):-1!==e.indexOf(",")&&(e=e.substring(0,e.indexOf(",")))),""!==t.radixPoint&&isFinite(t.digits)&&-1!==e.indexOf(t.radixPoint)){var r=e.split(t.radixPoint)[1].match(new RegExp("\\d*"))[0];if(parseInt(t.digits)<r.toString().length){var o=Math.pow(10,parseInt(t.digits));e=e.replace(v.escapeRegex(t.radixPoint),"."),e=(e=Math.round(parseFloat(e)*o)/o).toString().replace(".",t.radixPoint)}}return e},canClearPosition:function(e,t,i,a,n){var s=e.validPositions[t],r=s.input!==n.radixPoint||null!==e.validPositions[t].match.fn&&!1===n.decimalProtect||s.input===n.radixPoint&&e.validPositions[t+1]&&null===e.validPositions[t+1].match.fn||isFinite(s.input)||t===i||s.input===n.groupSeparator||s.input===n.negationSymbol.front||s.input===n.negationSymbol.back;return!r||"+"!==s.match.nativeDef&&"-"!==s.match.nativeDef||(n.isNegative=!1),r},onKeyDown:function(e,t,i,a){var n=m(this);if(e.ctrlKey)switch(e.keyCode){case v.keyCode.UP:n.val(parseFloat(this.inputmask.unmaskedvalue())+parseInt(a.step)),n.trigger("setvalue");break;case v.keyCode.DOWN:n.val(parseFloat(this.inputmask.unmaskedvalue())-parseInt(a.step)),n.trigger("setvalue")}}},currency:{prefix:"$ ",groupSeparator:",",alias:"numeric",placeholder:"0",autoGroup:!0,digits:2,digitsOptional:!1,clearMaskOnLostFocus:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",digits:0,radixPoint:""},percentage:{alias:"numeric",digits:2,digitsOptional:!0,radixPoint:".",placeholder:"0",autoGroup:!1,min:0,max:100,suffix:" %",allowMinus:!1}}),v})?a.apply(t,n):a)&&(e.exports=s)},function(e,t,i){"use strict";var a,n,s;n=[i(0),i(1)],void 0!==(s="function"==typeof(a=function(r,t){function i(e,t){var i=(e.mask||e).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),a=(t.mask||t).replace(/#/g,"9").replace(/\)/,"9").replace(/[+()#-]/g,""),n=(e.mask||e).split("#")[0],s=(t.mask||t).split("#")[0];return 0===s.indexOf(n)?-1:0===n.indexOf(s)?1:i.localeCompare(a)}var a=t.prototype.analyseMask;return t.prototype.analyseMask=function(o,e,n){function l(e,t,i){t=t||"",i=i||c,""!==t&&(i[t]={});for(var a="",n=i[t]||i,s=e.length-1;s>=0;s--)n[a=(o=e[s].mask||e[s]).substr(0,1)]=n[a]||[],n[a].unshift(o.substr(1)),e.splice(s,1);for(var r in n)n[r].length>500&&l(n[r].slice(),r,n)}function s(e){var t="",i=[];for(var a in e)r.isArray(e[a])?1===e[a].length?i.push(a+e[a]):i.push(a+n.groupmarker.start+e[a].join(n.groupmarker.end+n.alternatormarker+n.groupmarker.start)+n.groupmarker.end):i.push(a+s(e[a]));return 1===i.length?t+=i[0]:t+=n.groupmarker.start+i.join(n.groupmarker.end+n.alternatormarker+n.groupmarker.start)+n.groupmarker.end,t}var c={};return n.phoneCodes&&(n.phoneCodes&&n.phoneCodes.length>1e3&&(l((o=o.substr(1,o.length-2)).split(n.groupmarker.end+n.alternatormarker+n.groupmarker.start)),o=s(c)),o=o.replace(/9/g,"\\9")),a.call(this,o,e,n)},t.extendAliases({abstractphone:{groupmarker:{start:"<",end:">"},countrycode:"",phoneCodes:[],mask:function(e){return e.definitions={"#":t.prototype.definitions[9]},e.phoneCodes.sort(i)},keepStatic:!0,onBeforeMask:function(e,t){var i=e.replace(/^0{1,2}/,"").replace(/[\s]/g,"");return(i.indexOf(t.countrycode)>1||-1===i.indexOf(t.countrycode))&&(i="+"+t.countrycode+i),i},onUnMask:function(e,t,i){return e.replace(/[()#-]/g,"")},inputmode:"tel"}}),t})?a.apply(t,n):a)&&(e.exports=s)},function(e,t,i){"use strict";var a,n,s;n=[i(0),i(1)],void 0!==(s="function"==typeof(a=function(k,e){return e.extendAliases({Regex:{mask:"r",greedy:!1,repeat:"*",regex:null,regexTokens:null,tokenizer:/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,quantifierFilter:/[0-9]+[^,]/,isComplete:function(e,t){return new RegExp(t.regex,t.casing?"i":"").test(e.join(""))},definitions:{r:{validator:function(e,t,i,a,v){function c(e,t){this.matches=[],this.isGroup=e||!1,this.isQuantifier=t||!1,this.quantifier={min:1,max:1},this.repeaterPart=void 0}function g(e,t){var i=!1;t&&(y+="(",b++);for(var a=0;a<e.matches.length;a++){var n=e.matches[a];if(!0===n.isGroup)i=g(n,!0);else if(!0===n.isQuantifier){var s=k.inArray(n,e.matches),r=e.matches[s-1],o=y;if(isNaN(n.quantifier.max)){for(;n.repeaterPart&&n.repeaterPart!==y&&n.repeaterPart.length>y.length&&!(i=g(r,!0)););(i=i||g(r,!0))&&(n.repeaterPart=y),y=o+n.quantifier.max}else{for(var l=0,c=n.quantifier.max-1;l<c&&!(i=g(r,!0));l++);y=o+"{"+n.quantifier.min+","+n.quantifier.max+"}"}}else if(void 0!==n.matches)for(var d=0;d<n.length&&!(i=g(n[d],t));d++);else{var u;if("["==n.charAt(0)){u=y,u+=n;for(f=0;f<b;f++)u+=")";i=(m=new RegExp("^("+u+")$",v.casing?"i":"")).test(_)}else for(var p=0,h=n.length;p<h;p++)if("\\"!==n.charAt(p)){u=y,u=(u+=n.substr(0,p+1)).replace(/\|$/,"");for(var f=0;f<b;f++)u+=")";var m=new RegExp("^("+u+")$",v.casing?"i":"");if(i=m.test(_))break}y+=n}if(i)break}return t&&(y+=")",b--),i}var _,d,n=t.buffer.slice(),y="",s=!1,b=0;null===v.regexTokens&&function(){var e,t,i=new c,a=[];for(v.regexTokens=[];e=v.tokenizer.exec(v.regex);)switch((t=e[0]).charAt(0)){case"(":a.push(new c(!0));break;case")":d=a.pop(),a.length>0?a[a.length-1].matches.push(d):i.matches.push(d);break;case"{":case"+":case"*":var n=new c(!1,!0),s=(t=t.replace(/[{}]/g,"")).split(","),r=isNaN(s[0])?s[0]:parseInt(s[0]),o=1===s.length?r:isNaN(s[1])?s[1]:parseInt(s[1]);if(n.quantifier={min:r,max:o},a.length>0){var l=a[a.length-1].matches;(e=l.pop()).isGroup||((d=new c(!0)).matches.push(e),e=d),l.push(e),l.push(n)}else(e=i.matches.pop()).isGroup||((d=new c(!0)).matches.push(e),e=d),i.matches.push(e),i.matches.push(n);break;default:a.length>0?a[a.length-1].matches.push(t):i.matches.push(t)}i.matches.length>0&&v.regexTokens.push(i)}(),n.splice(i,0,e),_=n.join("");for(var r=0;r<v.regexTokens.length;r++){var o=v.regexTokens[r];if(s=g(o,o.isGroup))break}return s},cardinality:1}}}}),e})?a.apply(t,n):a)&&(e.exports=s)},function(e,t,i){"use strict";var a,n,s,r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};n=[i(2),i(1)],void 0!==(s="function"==typeof(a=function(n,s){return void 0===n.fn.inputmask&&(n.fn.inputmask=function(e,t){var i,a=this[0];if(void 0===t&&(t={}),"string"==typeof e)switch(e){case"unmaskedvalue":return a&&a.inputmask?a.inputmask.unmaskedvalue():n(a).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":return a&&a.inputmask?a.inputmask.getemptymask():"";case"hasMaskedValue":return!(!a||!a.inputmask)&&a.inputmask.hasMaskedValue();case"isComplete":return!a||!a.inputmask||a.inputmask.isComplete();case"getmetadata":return a&&a.inputmask?a.inputmask.getmetadata():void 0;case"setvalue":n(a).val(t),a&&void 0===a.inputmask&&n(a).triggerHandler("setvalue");break;case"option":if("string"!=typeof t)return this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(t)});if(a&&void 0!==a.inputmask)return a.inputmask.option(t);break;default:return t.alias=e,i=new s(t),this.each(function(){i.mask(this)})}else{if("object"==(void 0===e?"undefined":r(e)))return i=new s(e),void 0===e.mask&&void 0===e.alias?this.each(function(){if(void 0!==this.inputmask)return this.inputmask.option(e);i.mask(this)}):this.each(function(){i.mask(this)});if(void 0===e)return this.each(function(){(i=new s(t)).mask(this)})}}),n.fn.inputmask})?a.apply(t,n):a)&&(e.exports=s)}]);var $jscomp={scope:{},findInternal:function(e,t,i){e instanceof String&&(e=String(e));for(var a=e.length,n=0;n<a;n++){var s=e[n];if(t.call(i,s,n,e))return{i:n,v:s}}return{i:-1,v:void 0}}};function FileDragHover(e){e.stopPropagation(),e.preventDefault(),$(this).addClass("draghover")}function FileDragHover1(e){e.stopPropagation(),e.preventDefault(),$(this).removeClass("draghover")}function FileSelectHandler(e){FileDragHover(e),void 0===window.FileReader&&alert_message("error","Перетаскивание не поддерживается браузером");for(var t,i=e.originalEvent.dataTransfer.files,a=0;t=i[a];a++){var n=$(this).find(".js-upload-file").attr("type_block"),s=$(this).find(".js-upload-file").attr("type_load"),r=$(this).find(".js-upload-file").attr("id_object"),o=$("[name=myfile]").parents("form");o.attr("type_load",s),o.attr("type_block",n),o.attr("id_object",r);var l=s,c=n,d=(r=r,$('div[type_block="'+c+'"]').parents(".js-image-gl")),u=d.find(".li-image").length+1;if(t){var p="";0!=d.find(".list-image-icons").length&&(p='<span class="type-img"></span>'),d.find(".list-image").append('<div number_li="'+u+'" class="li-image"><span class="name-img"><a>'+t.name+"</a></span>"+p+'<span class="del-img js-dell-image"></span><span class="size-img">'+(t.size/1024/1024).toFixed(2)+' МБ</span><div class="progress-img"><div class="p-img" style="width: 0%;"></div></div></div>'),d.find(".list-image").show(),d.find(".js-upload-file").hide().addClass("eshe-load-file"),d.find("[number_li="+u+"] .p-img").show(),uploadS(t,l,r,u,c)}return!1}}function ParseFile(e){alert("<p>File information: <strong>"+e.name+"</strong> type: <strong>"+e.type+"</strong> size: <strong>"+e.size+"</strong> bytes</p>")}$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){if(i.get||i.set)throw new TypeError("ES3 does not support getters and setters.");e!=Array.prototype&&e!=Object.prototype&&(e[t]=i.value)},$jscomp.getGlobal=function(e){return("undefined"==typeof window||window!==e)&&"undefined"!=typeof global&&null!=global?global:e},$jscomp.global=$jscomp.getGlobal(this),$jscomp.polyfill=function(e,t,i,a){if(t){for(i=$jscomp.global,e=e.split("."),a=0;a<e.length-1;a++){var n=e[a];n in i||(i[n]={}),i=i[n]}(t=t(a=i[e=e[e.length-1]]))!=a&&null!=t&&$jscomp.defineProperty(i,e,{configurable:!0,writable:!0,value:t})}},$jscomp.polyfill("Array.prototype.find",function(e){return e||function(e,t){return $jscomp.findInternal(this,e,t).v}},"es6-impl","es3"),function(e,t,i){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(t||i)}(function(r){function o(c,y,b){var k={invalid:[],getCaret:function(){try{var e,t=0,i=c.get(0),a=document.selection,n=i.selectionStart;return a&&-1===navigator.appVersion.indexOf("MSIE 10")?((e=a.createRange()).moveStart("character",-k.val().length),t=e.text.length):!n&&"0"!==n||(t=n),t}catch(e){}},setCaret:function(e){try{if(c.is(":focus")){var t,i=c.get(0);i.setSelectionRange?i.setSelectionRange(e,e):((t=i.createTextRange()).collapse(!0),t.moveEnd("character",e),t.moveStart("character",e),t.select())}}catch(e){}},events:function(){c.on("keydown.mask",function(e){c.data("mask-keycode",e.keyCode||e.which),c.data("mask-previus-value",c.val()),c.data("mask-previus-caret-pos",k.getCaret()),k.maskDigitPosMapOld=k.maskDigitPosMap}).on(r.jMaskGlobals.useInput?"input.mask":"keyup.mask",k.behaviour).on("paste.mask drop.mask",function(){setTimeout(function(){c.keydown().keyup()},100)}).on("change.mask",function(){c.data("changed",!0)}).on("blur.mask",function(){s===k.val()||c.data("changed")||c.trigger("change"),c.data("changed",!1)}).on("blur.mask",function(){s=k.val()}).on("focus.mask",function(e){!0===b.selectOnFocus&&r(e.target).select()}).on("focusout.mask",function(){b.clearIfNotMatch&&!a.test(k.val())&&k.val("")})},getRegexMask:function(){for(var e,t,i,a,n=[],s=0;s<y.length;s++)(e=$.translation[y.charAt(s)])?(t=e.pattern.toString().replace(/.{1}$|^.{1}/g,""),i=e.optional,(e=e.recursive)?(n.push(y.charAt(s)),a={digit:y.charAt(s),pattern:t}):n.push(i||e?t+"?":t)):n.push(y.charAt(s).replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));return n=n.join(""),a&&(n=n.replace(new RegExp("("+a.digit+"(.*"+a.digit+")?)"),"($1)?").replace(new RegExp(a.digit,"g"),a.pattern)),new RegExp(n)},destroyEvents:function(){c.off("input keydown keyup paste drop blur focusout ".split(" ").join(".mask "))},val:function(e){var t=c.is("input")?"val":"text";return t=0<arguments.length?(c[t]()!==e&&c[t](e),c):c[t]()},calculateCaretPosition:function(){var e=c.data("mask-previus-value")||"",t=k.getMasked(),i=k.getCaret();if(e!==t){var a,n=c.data("mask-previus-caret-pos")||0,s=(t=t.length,e.length),r=e=0,o=0,l=0;for(a=i;a<t&&k.maskDigitPosMap[a];a++)r++;for(a=i-1;0<=a&&k.maskDigitPosMap[a];a--)e++;for(a=i-1;0<=a;a--)k.maskDigitPosMap[a]&&o++;for(a=n-1;0<=a;a--)k.maskDigitPosMapOld[a]&&l++;s<i?i=10*t:i<=n&&n!==s?k.maskDigitPosMapOld[i]||(i=(n=i)-(l-o)-e,k.maskDigitPosMap[i]&&(i=n)):n<i&&(i=i+(o-l)+r)}return i},behaviour:function(e){e=e||window.event,k.invalid=[];var t=c.data("mask-keycode");if(-1===r.inArray(t,$.byPassKeys)){t=k.getMasked();var i=k.getCaret();return setTimeout(function(){k.setCaret(k.calculateCaretPosition())},r.jMaskGlobals.keyStrokeCompensation),k.val(t),k.setCaret(i),k.callbacks(e)}},getMasked:function(e,t){var i,a,n,s=[],r=void 0===t?k.val():t+"",o=0,l=y.length,c=0,d=r.length,u=1,p="push",h=-1,f=0,m=[];for(a=b.reverse?(p="unshift",u=-1,i=0,o=l-1,c=d-1,function(){return-1<o&&-1<c}):(i=l-1,function(){return o<l&&c<d});a();){var v=y.charAt(o),g=r.charAt(c),_=$.translation[v];_?(g.match(_.pattern)?(s[p](g),_.recursive&&(-1===h?h=o:o===i&&o!==h&&(o=h-u),i===h&&(o-=u)),o+=u):g===n?(f--,n=void 0):_.optional?(o+=u,c-=u):_.fallback?(s[p](_.fallback),o+=u,c-=u):k.invalid.push({p:c,v:g,e:_.pattern}),c+=u):(e||s[p](v),g===v?(m.push(c),c+=u):(n=v,m.push(c+f),f++),o+=u)}return r=y.charAt(i),l!==d+1||$.translation[r]||s.push(r),s=s.join(""),k.mapMaskdigitPositions(s,m,d),s},mapMaskdigitPositions:function(e,t,i){for(e=b.reverse?e.length-i:0,k.maskDigitPosMap={},i=0;i<t.length;i++)k.maskDigitPosMap[t[i]+e]=1},callbacks:function(e){function t(e,t,i){"function"==typeof b[e]&&t&&b[e].apply(this,i)}var i=k.val(),a=i!==s,n=[i,e,c,b];t("onChange",!0==a,n),t("onKeyPress",!0==a,n),t("onComplete",i.length===y.length,n),t("onInvalid",0<k.invalid.length,[i,e,c,k.invalid,b])}};c=r(c);var a,$=this,s=k.val();y="function"==typeof y?y(k.val(),void 0,c,b):y,$.mask=y,$.options=b,$.remove=function(){var e=k.getCaret();return $.options.placeholder&&c.removeAttr("placeholder"),c.data("mask-maxlength")&&c.removeAttr("maxlength"),k.destroyEvents(),k.val($.getCleanVal()),k.setCaret(e),c},$.getCleanVal=function(){return k.getMasked(!0)},$.getMaskedVal=function(e){return k.getMasked(!1,e)},$.init=function(e){if(e=e||!1,b=b||{},$.clearIfNotMatch=r.jMaskGlobals.clearIfNotMatch,$.byPassKeys=r.jMaskGlobals.byPassKeys,$.translation=r.extend({},r.jMaskGlobals.translation,b.translation),$=r.extend(!0,{},$,b),a=k.getRegexMask(),e)k.events(),k.val(k.getMasked());else{b.placeholder&&c.attr("placeholder",b.placeholder),c.data("mask")&&c.attr("autocomplete","off");for(var t=!(e=0);e<y.length;e++){var i=$.translation[y.charAt(e)];if(i&&i.recursive){t=!1;break}}t&&c.attr("maxlength",y.length).data("mask-maxlength",!0),k.destroyEvents(),k.events(),e=k.getCaret(),k.val(k.getMasked()),k.setCaret(e)}},$.init(!c.is("input"))}r.maskWatchers={};function t(){var e=r(this),t={},i=e.attr("data-mask");if(e.attr("data-mask-reverse")&&(t.reverse=!0),e.attr("data-mask-clearifnotmatch")&&(t.clearIfNotMatch=!0),"true"===e.attr("data-mask-selectonfocus")&&(t.selectOnFocus=!0),l(e,i,t))return e.data("mask",new o(this,i,t))}var l=function(e,t,i){i=i||{};var a=r(e).data("mask"),n=JSON.stringify;e=r(e).val()||r(e).text();try{return"function"==typeof t&&(t=t(e)),"object"!=typeof a||n(a.options)!==n(i)||a.mask!==t}catch(e){}},e=function(e){var t,i=document.createElement("div");return(t=(e="on"+e)in i)||(i.setAttribute(e,"return;"),t="function"==typeof i[e]),t};r.fn.mask=function(e,t){t=t||{};function i(){if(l(this,e,t))return r(this).data("mask",new o(this,e,t))}var a=this.selector,n=(s=r.jMaskGlobals).watchInterval,s=t.watchInputs||s.watchInputs;return r(this).each(i),a&&""!==a&&s&&(clearInterval(r.maskWatchers[a]),r.maskWatchers[a]=setInterval(function(){r(document).find(a).each(i)},n)),this},r.fn.masked=function(e){return this.data("mask").getMaskedVal(e)},r.fn.unmask=function(){return clearInterval(r.maskWatchers[this.selector]),delete r.maskWatchers[this.selector],this.each(function(){var e=r(this).data("mask");e&&e.remove().removeData("mask")})},r.fn.cleanVal=function(){return this.data("mask").getCleanVal()},r.applyDataMask=function(e){((e=e||r.jMaskGlobals.maskElements)instanceof r?e:r(e)).filter(r.jMaskGlobals.dataMaskAttr).each(t)},e={maskElements:"input,td,span,div",dataMaskAttr:"*[data-mask]",dataMask:!0,watchInterval:300,watchInputs:!0,keyStrokeCompensation:10,useInput:!/Chrome\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent)&&e("input"),watchDataMask:!1,byPassKeys:[9,16,17,18,36,37,38,39,40,91],translation:{0:{pattern:/\d/},9:{pattern:/\d/,optional:!0},"#":{pattern:/\d/,recursive:!0},A:{pattern:/[a-zA-Z0-9]/},S:{pattern:/[a-zA-Z]/}}},r.jMaskGlobals=r.jMaskGlobals||{},(e=r.jMaskGlobals=r.extend(!0,{},e,r.jMaskGlobals)).dataMask&&r.applyDataMask(),setInterval(function(){r.jMaskGlobals.watchDataMask&&r.applyDataMask()},e.watchInterval)},window.jQuery,window.Zepto),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof module&&module.exports?module.exports=e(require("jquery")):e(jQuery)}(function(r){"use strict";function g(e){return!e.nodeName||-1!==r.inArray(e.nodeName.toLowerCase(),["iframe","#document","html","body"])}function t(e){return r.isFunction(e)||r.isPlainObject(e)?e:{top:e,left:e}}var _=r.scrollTo=function(e,t,i){return r(window).scrollTo(e,t,i)};return _.defaults={axis:"xy",duration:0,limit:!0},r.fn.scrollTo=function(e,i,m){"object"==typeof i&&(m=i,i=0),"function"==typeof m&&(m={onAfter:m}),"max"===e&&(e=9e9),m=r.extend({},_.defaults,m),i=i||m.duration;var v=m.queue&&1<m.axis.length;return v&&(i/=2),m.offset=t(m.offset),m.over=t(m.over),this.each(function(){function o(e){var t=r.extend({},m,{queue:!0,duration:i,complete:e&&function(){e.call(d,p,m)}});u.animate(h,t)}if(null!==e){var l,c=g(this),d=c?this.contentWindow||window:this,u=r(d),p=e,h={};switch(typeof p){case"number":case"string":if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(p)){p=t(p);break}p=c?r(p):r(p,d);case"object":if(0===p.length)return;(p.is||p.style)&&(l=(p=r(p)).offset())}var f=r.isFunction(m.offset)&&m.offset(d,p)||m.offset;r.each(m.axis.split(""),function(e,t){var i="x"===t?"Left":"Top",a=i.toLowerCase(),n="scroll"+i,s=u[n](),r=_.max(d,t);l?(h[n]=l[a]+(c?0:s-u.offset()[a]),m.margin&&(h[n]-=parseInt(p.css("margin"+i),10)||0,h[n]-=parseInt(p.css("border"+i+"Width"),10)||0),h[n]+=f[a]||0,m.over[a]&&(h[n]+=p["x"===t?"width":"height"]()*m.over[a])):(i=p[a],h[n]=i.slice&&"%"===i.slice(-1)?parseFloat(i)/100*r:i),m.limit&&/^\d+$/.test(h[n])&&(h[n]=h[n]<=0?0:Math.min(h[n],r)),!e&&1<m.axis.length&&(s===h[n]?h={}:v&&(o(m.onAfterFirst),h={}))}),o(m.onAfter)}})},_.max=function(e,t){var i="scroll"+(a="x"===t?"Width":"Height");if(!g(e))return e[i]-r(e)[a.toLowerCase()]();var a="client"+a,n=(s=e.ownerDocument||e.document).documentElement,s=s.body;return Math.max(n[i],s[i])-Math.min(n[a],s[a])},r.Tween.propHooks.scrollLeft=r.Tween.propHooks.scrollTop={get:function(e){return r(e.elem)[e.prop]()},set:function(e){var t=this.get(e);if(e.options.interrupt&&e._last&&e._last!==t)return r(e.elem).stop();var i=Math.round(e.now);t!==i&&(r(e.elem)[e.prop](i),e._last=this.get(e))}},_}),function(w){jQuery.fn.extend({slimScroll:function(k){var $=w.extend({width:"auto",height:"250px",size:"7px",color:"#000",position:"right",distance:"1px",start:"top",opacity:.4,alwaysVisible:!1,disableFadeOut:!1,railVisible:!1,railColor:"#333",railOpacity:.2,railDraggable:!0,railClass:"slimScrollRail",barClass:"slimScrollBar",wrapperClass:"slimScrollDiv",allowPageScroll:!1,wheelStep:20,touchScrollStep:200,borderRadius:"7px",railBorderRadius:"7px"},k);return this.each(function(){function e(e){var t=0;(e=e||window.event).wheelDelta&&(t=-e.wheelDelta/120),e.detail&&(t=e.detail/3),w(e.target||e.srcTarget||e.srcElement).closest("."+$.wrapperClass).is(v.parent())&&a(t,!0),e.preventDefault&&!m&&e.preventDefault(),m||(e.returnValue=!1)}function a(e,t,i){m=!1;var a=e,n=v.outerHeight()-_.outerHeight();t&&(a=parseInt(_.css("top"))+e*parseInt($.wheelStep)/100*_.outerHeight(),a=Math.min(Math.max(a,0),n),a=0<e?Math.ceil(a):Math.floor(a),_.css({top:a+"px"})),a=(p=parseInt(_.css("top"))/(v.outerHeight()-_.outerHeight()))*(v[0].scrollHeight-v.outerHeight()),i&&(e=(a=e)/v[0].scrollHeight*v.outerHeight(),e=Math.min(Math.max(e,0),n),_.css({top:e+"px"})),v.scrollTop(a),v.trigger("slimscrolling",~~a),s(),r()}function i(){u=Math.max(v.outerHeight()/v[0].scrollHeight*v.outerHeight(),f),_.css({height:u+"px"});var e=u==v.outerHeight()?"none":"block";_.css({display:e})}function s(){i(),clearTimeout(c),p==~~p?(m=$.allowPageScroll,h!=p&&v.trigger("slimscroll",0==~~p?"top":"bottom")):m=!1,h=p,u>=v.outerHeight()?m=!0:(_.stop(!0,!0).fadeIn("fast"),$.railVisible&&y.stop(!0,!0).fadeIn("fast"))}function r(){$.alwaysVisible||(c=setTimeout(function(){$.disableFadeOut&&n||o||l||(_.fadeOut("slow"),y.fadeOut("slow"))},1e3))}var n,o,l,c,d,u,p,h,f=30,m=!1,v=w(this);if(v.parent().hasClass($.wrapperClass)){var g=v.scrollTop(),_=v.parent().find("."+$.barClass),y=v.parent().find("."+$.railClass);if(i(),w.isPlainObject(k)){if("height"in k&&"auto"==k.height){v.parent().css("height","auto"),v.css("height","auto");var b=v.parent().parent().height();v.parent().css("height",b),v.css("height",b)}if("scrollTo"in k)g=parseInt($.scrollTo);else if("scrollBy"in k)g+=parseInt($.scrollBy);else if("destroy"in k)return _.remove(),y.remove(),void v.unwrap();a(g,!1,!0)}}else{$.height="auto"==k.height?v.parent().height():k.height,g=w("<div></div>").addClass($.wrapperClass).css({position:"relative",overflow:"hidden",width:$.width,height:$.height}),v.css({overflow:"hidden",width:$.width,height:$.height});y=w("<div></div>").addClass($.railClass).css({width:$.size,height:"100%",position:"absolute",top:0,display:$.alwaysVisible&&$.railVisible?"block":"none","border-radius":$.railBorderRadius,background:$.railColor,opacity:$.railOpacity,zIndex:90}),_=w("<div></div>").addClass($.barClass).css({background:$.color,width:$.size,position:"absolute",top:0,opacity:$.opacity,display:$.alwaysVisible?"block":"none","border-radius":$.borderRadius,BorderRadius:$.borderRadius,MozBorderRadius:$.borderRadius,WebkitBorderRadius:$.borderRadius,zIndex:99}),b="right"==$.position?{right:$.distance}:{left:$.distance};y.css(b),_.css(b),v.wrap(g),v.parent().append(_),v.parent().append(y),$.railDraggable&&_.bind("mousedown",function(e){var i=w(document);return l=!0,t=parseFloat(_.css("top")),pageY=e.pageY,i.bind("mousemove.slimscroll",function(e){currTop=t+e.pageY-pageY,_.css("top",currTop),a(0,_.position().top,!1)}),i.bind("mouseup.slimscroll",function(e){l=!1,r(),i.unbind(".slimscroll")}),!1}).bind("selectstart.slimscroll",function(e){return e.stopPropagation(),e.preventDefault(),!1}),y.hover(function(){s()},function(){r()}),_.hover(function(){o=!0},function(){o=!1}),v.hover(function(){n=!0,s(),r()},function(){n=!1,r()}),v.bind("touchstart",function(e,t){e.originalEvent.touches.length&&(d=e.originalEvent.touches[0].pageY)}),v.bind("touchmove",function(e){m||e.originalEvent.preventDefault(),e.originalEvent.touches.length&&(a((d-e.originalEvent.touches[0].pageY)/$.touchScrollStep,!0),d=e.originalEvent.touches[0].pageY)}),i(),"bottom"===$.start?(_.css({top:v.outerHeight()-_.outerHeight()}),a(0,!0)):"top"!==$.start&&(a(w($.start).position().top,null,!0),$.alwaysVisible||_.hide()),function(){window.addEventListener?(this.addEventListener("DOMMouseScroll",e,!1),this.addEventListener("mousewheel",e,!1)):document.attachEvent("onmousewheel",e)}()}}),this}}),jQuery.fn.extend({slimscroll:jQuery.fn.slimScroll})}(jQuery),function(t){"function"==typeof define&&define.amd?define(["jquery"],function(e){return t(e)}):"object"==typeof exports?module.exports=t(require("jquery")):t(jQuery)}(function(e){!function(m,v,a){"use strict";function t(e,t){if(this.el=e,this.$el=m(e),this.s=m.extend({},i,t),this.s.dynamic&&"undefined"!==this.s.dynamicEl&&this.s.dynamicEl.constructor===Array&&!this.s.dynamicEl.length)throw"When using dynamic mode, you must also define dynamicEl as an Array.";return this.modules={},this.lGalleryOn=!1,this.lgBusy=!1,this.hideBartimeout=!1,this.isTouch="ontouchstart"in a.documentElement,this.s.slideEndAnimatoin&&(this.s.hideControlOnEnd=!1),this.s.dynamic?this.$items=this.s.dynamicEl:"this"===this.s.selector?this.$items=this.$el:""!==this.s.selector?this.s.selectWithin?this.$items=m(this.s.selectWithin).find(this.s.selector):this.$items=this.$el.find(m(this.s.selector)):this.$items=this.$el.children(),this.$slide="",this.$outer="",this.init(),this}var i={mode:"lg-slide",cssEasing:"ease",easing:"linear",speed:600,height:"100%",width:"100%",addClass:"",startClass:"lg-start-zoom",backdropDuration:150,hideBarsDelay:6e3,useLeft:!1,closable:!0,loop:!0,escKey:!0,keyPress:!0,controls:!0,slideEndAnimatoin:!0,hideControlOnEnd:!1,mousewheel:!0,getCaptionFromTitleOrAlt:!0,appendSubHtmlTo:".lg-sub-html",subHtmlSelectorRelative:!1,preload:1,showAfterLoad:!0,selector:"",selectWithin:"",nextHtml:"",prevHtml:"",index:!1,iframeMaxWidth:"100%",download:!0,counter:!0,appendCounterTo:".lg-toolbar",swipeThreshold:50,enableSwipe:!0,enableDrag:!0,dynamic:!1,dynamicEl:[],galleryId:1};t.prototype.init=function(){var e=this;e.s.preload>e.$items.length&&(e.s.preload=e.$items.length);var t=v.location.hash;0<t.indexOf("lg="+this.s.galleryId)&&(e.index=parseInt(t.split("&slide=")[1],10),m("body").addClass("lg-from-hash"),m("body").hasClass("lg-on")||(setTimeout(function(){e.build(e.index)}),m("body").addClass("lg-on"))),e.s.dynamic?(e.$el.trigger("onBeforeOpen.lg"),e.index=e.s.index||0,m("body").hasClass("lg-on")||setTimeout(function(){e.build(e.index),m("body").addClass("lg-on")})):e.$items.on("click.lgcustom",function(t){try{t.preventDefault(),t.preventDefault()}catch(e){t.returnValue=!1}e.$el.trigger("onBeforeOpen.lg"),e.index=e.s.index||e.$items.index(this),m("body").hasClass("lg-on")||(e.build(e.index),m("body").addClass("lg-on"))})},t.prototype.build=function(e){var t=this;t.structure(),m.each(m.fn.lightGallery.modules,function(e){t.modules[e]=new m.fn.lightGallery.modules[e](t.el)}),t.slide(e,!1,!1),t.s.keyPress&&t.keyPress(),1<t.$items.length&&(t.arrow(),setTimeout(function(){t.enableDrag(),t.enableSwipe()},50),t.s.mousewheel&&t.mousewheel()),t.counter(),t.closeGallery(),t.$el.trigger("onAfterOpen.lg"),t.$outer.on("mousemove.lg click.lg touchstart.lg",function(){t.$outer.removeClass("lg-hide-items"),clearTimeout(t.hideBartimeout),t.hideBartimeout=setTimeout(function(){t.$outer.addClass("lg-hide-items")},t.s.hideBarsDelay)})},t.prototype.structure=function(){var e,t="",i="",a=0,n="",s=this;for(m("body").append('<div class="lg-backdrop"></div>'),m(".lg-backdrop").css("transition-duration",this.s.backdropDuration+"ms"),a=0;a<this.$items.length;a++)t+='<div class="lg-item"></div>';if(this.s.controls&&1<this.$items.length&&(i='<div class="lg-actions"><div class="lg-prev lg-icon">'+this.s.prevHtml+'</div><div class="lg-next lg-icon">'+this.s.nextHtml+"</div></div>"),".lg-sub-html"===this.s.appendSubHtmlTo&&(n='<div class="lg-sub-html"></div>'),e='<div class="lg-outer '+this.s.addClass+" "+this.s.startClass+'"><div class="lg" style="width:'+this.s.width+"; height:"+this.s.height+'"><div class="lg-inner">'+t+'</div><div class="lg-toolbar group"><span class="lg-close lg-icon"></span></div>'+i+n+"</div></div>",m("body").append(e),this.$outer=m(".lg-outer"),this.$slide=this.$outer.find(".lg-item"),this.s.useLeft?(this.$outer.addClass("lg-use-left"),this.s.mode="lg-slide"):this.$outer.addClass("lg-use-css3"),s.setTop(),m(v).on("resize.lg orientationchange.lg",function(){setTimeout(function(){s.setTop()},100)}),this.$slide.eq(this.index).addClass("lg-current"),this.doCss()?this.$outer.addClass("lg-css3"):(this.$outer.addClass("lg-css"),this.s.speed=0),this.$outer.addClass(this.s.mode),this.s.enableDrag&&1<this.$items.length&&this.$outer.addClass("lg-grab"),this.s.showAfterLoad&&this.$outer.addClass("lg-show-after-load"),this.doCss()){var r=this.$outer.find(".lg-inner");r.css("transition-timing-function",this.s.cssEasing),r.css("transition-duration",this.s.speed+"ms")}setTimeout(function(){m(".lg-backdrop").addClass("in")}),setTimeout(function(){s.$outer.addClass("lg-visible")},this.s.backdropDuration),this.s.download&&this.$outer.find(".lg-toolbar").append('<a id="lg-download" target="_blank" download class="lg-download lg-icon"></a>'),this.prevScrollTop=m(v).scrollTop()},t.prototype.setTop=function(){if("100%"!==this.s.height){var e=m(v).height(),t=(e-parseInt(this.s.height,10))/2,i=this.$outer.find(".lg");e>=parseInt(this.s.height,10)?i.css("top",t+"px"):i.css("top","0px")}},t.prototype.doCss=function(){return!!function(){var e=["transition","MozTransition","WebkitTransition","OTransition","msTransition","KhtmlTransition"],t=a.documentElement,i=0;for(i=0;i<e.length;i++)if(e[i]in t.style)return!0}()},t.prototype.isVideo=function(e,t){var i;if(i=this.s.dynamic?this.s.dynamicEl[t].html:this.$items.eq(t).attr("data-html"),!e&&i)return{html5:!0};var a=e.match(/\/\/(?:www\.)?youtu(?:\.be|be\.com)\/(?:watch\?v=|embed\/)?([a-z0-9\-\_\%]+)/i),n=e.match(/\/\/(?:www\.)?vimeo.com\/([0-9a-z\-_]+)/i),s=e.match(/\/\/(?:www\.)?dai.ly\/([0-9a-z\-_]+)/i),r=e.match(/\/\/(?:www\.)?(?:vk\.com|vkontakte\.ru)\/(?:video_ext\.php\?)(.*)/i);return a?{youtube:a}:n?{vimeo:n}:s?{dailymotion:s}:r?{vk:r}:void 0},t.prototype.counter=function(){this.s.counter&&m(this.s.appendCounterTo).append('<div id="lg-counter"><span id="lg-counter-current">'+(parseInt(this.index,10)+1)+'</span> / <span id="lg-counter-all">'+this.$items.length+"</span></div>")},t.prototype.addHtml=function(e){var t,i,a=null;if(this.s.dynamic?this.s.dynamicEl[e].subHtmlUrl?t=this.s.dynamicEl[e].subHtmlUrl:a=this.s.dynamicEl[e].subHtml:(i=this.$items.eq(e)).attr("data-sub-html-url")?t=i.attr("data-sub-html-url"):(a=i.attr("data-sub-html"),this.s.getCaptionFromTitleOrAlt&&!a&&(a=i.attr("title")||i.find("img").first().attr("alt"))),!t)if(null!=a){var n=a.substring(0,1);"."!==n&&"#"!==n||(a=this.s.subHtmlSelectorRelative&&!this.s.dynamic?i.find(a).html():m(a).html())}else a="";".lg-sub-html"===this.s.appendSubHtmlTo?t?this.$outer.find(this.s.appendSubHtmlTo).load(t):this.$outer.find(this.s.appendSubHtmlTo).html(a):t?this.$slide.eq(e).load(t):this.$slide.eq(e).append(a),null!=a&&(""===a?this.$outer.find(this.s.appendSubHtmlTo).addClass("lg-empty-html"):this.$outer.find(this.s.appendSubHtmlTo).removeClass("lg-empty-html")),this.$el.trigger("onAfterAppendSubHtml.lg",[e])},t.prototype.preload=function(e){var t=1,i=1;for(t=1;t<=this.s.preload&&!(t>=this.$items.length-e);t++)this.loadContent(e+t,!1,0);for(i=1;i<=this.s.preload&&!(e-i<0);i++)this.loadContent(e-i,!1,0)},t.prototype.loadContent=function(t,e,i){function a(e){for(var t=[],i=[],a=0;a<e.length;a++){var n=e[a].split(" ");""===n[0]&&n.splice(0,1),i.push(n[0]),t.push(n[1])}for(var s=m(v).width(),r=0;r<t.length;r++)if(parseInt(t[r],10)>s){o=i[r];break}}var n,o,s,r,l,c,d=this,u=!1;if(d.s.dynamic){if(d.s.dynamicEl[t].poster&&(u=!0,s=d.s.dynamicEl[t].poster),c=d.s.dynamicEl[t].html,o=d.s.dynamicEl[t].src,d.s.dynamicEl[t].responsive)a(d.s.dynamicEl[t].responsive.split(","));r=d.s.dynamicEl[t].srcset,l=d.s.dynamicEl[t].sizes}else{if(d.$items.eq(t).attr("data-poster")&&(u=!0,s=d.$items.eq(t).attr("data-poster")),c=d.$items.eq(t).attr("data-html"),o=d.$items.eq(t).attr("href")||d.$items.eq(t).attr("data-src"),d.$items.eq(t).attr("data-responsive"))a(d.$items.eq(t).attr("data-responsive").split(","));r=d.$items.eq(t).attr("data-srcset"),l=d.$items.eq(t).attr("data-sizes")}var p=!1;d.s.dynamic?d.s.dynamicEl[t].iframe&&(p=!0):"true"===d.$items.eq(t).attr("data-iframe")&&(p=!0);var h=d.isVideo(o,t);if(!d.$slide.eq(t).hasClass("lg-loaded")){if(p)d.$slide.eq(t).prepend('<div class="lg-video-cont" style="max-width:'+d.s.iframeMaxWidth+'"><div class="lg-video"><iframe class="lg-object" frameborder="0" src="'+o+'"  allowfullscreen="true"></iframe></div></div>');else if(u){var f;f=h&&h.youtube?"lg-has-youtube":h&&h.vimeo?"lg-has-vimeo":"lg-has-html5",d.$slide.eq(t).prepend('<div class="lg-video-cont '+f+' "><div class="lg-video"><span class="lg-video-play"></span><img class="lg-object lg-has-poster" src="'+s+'" /></div></div>')}else h?(d.$slide.eq(t).prepend('<div class="lg-video-cont "><div class="lg-video"></div></div>'),d.$el.trigger("hasVideo.lg",[t,o,c])):d.$slide.eq(t).prepend('<div class="lg-img-wrap"><img class="lg-object lg-image" src="'+o+'" /></div>');if(d.$el.trigger("onAferAppendSlide.lg",[t]),n=d.$slide.eq(t).find(".lg-object"),l&&n.attr("sizes",l),r){n.attr("srcset",r);try{picturefill({elements:[n[0]]})}catch(e){console.error("Make sure you have included Picturefill version 2")}}".lg-sub-html"!==this.s.appendSubHtmlTo&&d.addHtml(t),d.$slide.eq(t).addClass("lg-loaded")}d.$slide.eq(t).find(".lg-object").on("load.lg error.lg",function(){var e=0;i&&!m("body").hasClass("lg-from-hash")&&(e=i),setTimeout(function(){d.$slide.eq(t).addClass("lg-complete"),d.$el.trigger("onSlideItemLoad.lg",[t,i||0])},e)}),h&&h.html5&&!u&&d.$slide.eq(t).addClass("lg-complete"),!0===e&&(d.$slide.eq(t).hasClass("lg-complete")?d.preload(t):d.$slide.eq(t).find(".lg-object").on("load.lg error.lg",function(){d.preload(t)}))},t.prototype.slide=function(e,t,i){var a=this.$outer.find(".lg-current").index(),n=this;if(!n.lGalleryOn||a!==e){var s=this.$slide.length,r=n.lGalleryOn?this.s.speed:0,o=!1,l=!1;if(!n.lgBusy){var c;if(this.s.download)(c=n.s.dynamic?!1!==n.s.dynamicEl[e].downloadUrl&&(n.s.dynamicEl[e].downloadUrl||n.s.dynamicEl[e].src):"false"!==n.$items.eq(e).attr("data-download-url")&&(n.$items.eq(e).attr("data-download-url")||n.$items.eq(e).attr("href")||n.$items.eq(e).attr("data-src")))?(m("#lg-download").attr("href",c),n.$outer.removeClass("lg-hide-download")):n.$outer.addClass("lg-hide-download");if(this.$el.trigger("onBeforeSlide.lg",[a,e,t,i]),n.lgBusy=!0,clearTimeout(n.hideBartimeout),".lg-sub-html"===this.s.appendSubHtmlTo&&setTimeout(function(){n.addHtml(e)},r),this.arrowDisable(e),t){var d=e-1,u=e+1;(0===e&&a===s-1||e===s-1&&0===a)&&(u=0,d=s-1),this.$slide.removeClass("lg-prev-slide lg-current lg-next-slide"),n.$slide.eq(d).addClass("lg-prev-slide"),n.$slide.eq(u).addClass("lg-next-slide"),n.$slide.eq(e).addClass("lg-current")}else n.$outer.addClass("lg-no-trans"),this.$slide.removeClass("lg-prev-slide lg-next-slide"),e<a?(l=!0,0!==e||a!==s-1||i||(o=!(l=!1))):a<e&&(o=!0,e!==s-1||0!==a||i||(o=!(l=!0))),l?(this.$slide.eq(e).addClass("lg-prev-slide"),this.$slide.eq(a).addClass("lg-next-slide")):o&&(this.$slide.eq(e).addClass("lg-next-slide"),this.$slide.eq(a).addClass("lg-prev-slide")),setTimeout(function(){n.$slide.removeClass("lg-current"),n.$slide.eq(e).addClass("lg-current"),n.$outer.removeClass("lg-no-trans")},50);n.lGalleryOn?(setTimeout(function(){n.loadContent(e,!0,0)},this.s.speed+50),setTimeout(function(){n.lgBusy=!1,n.$el.trigger("onAfterSlide.lg",[a,e,t,i])},this.s.speed)):(n.loadContent(e,!0,n.s.backdropDuration),n.lgBusy=!1,n.$el.trigger("onAfterSlide.lg",[a,e,t,i])),n.lGalleryOn=!0,this.s.counter&&m("#lg-counter-current").text(e+1)}}},t.prototype.goToNextSlide=function(e){var t=this;t.lgBusy||(t.index+1<t.$slide.length?(t.index++,t.$el.trigger("onBeforeNextSlide.lg",[t.index]),t.slide(t.index,e,!1)):t.s.loop?(t.index=0,t.$el.trigger("onBeforeNextSlide.lg",[t.index]),t.slide(t.index,e,!1)):t.s.slideEndAnimatoin&&(t.$outer.addClass("lg-right-end"),setTimeout(function(){t.$outer.removeClass("lg-right-end")},400)))},t.prototype.goToPrevSlide=function(e){var t=this;t.lgBusy||(0<t.index?(t.index--,t.$el.trigger("onBeforePrevSlide.lg",[t.index,e]),t.slide(t.index,e,!1)):t.s.loop?(t.index=t.$items.length-1,t.$el.trigger("onBeforePrevSlide.lg",[t.index,e]),t.slide(t.index,e,!1)):t.s.slideEndAnimatoin&&(t.$outer.addClass("lg-left-end"),setTimeout(function(){t.$outer.removeClass("lg-left-end")},400)))},t.prototype.keyPress=function(){var t=this;1<this.$items.length&&m(v).on("keyup.lg",function(e){1<t.$items.length&&(37===e.keyCode&&(e.preventDefault(),t.goToPrevSlide()),39===e.keyCode&&(e.preventDefault(),t.goToNextSlide()))}),m(v).on("keydown.lg",function(e){!0===t.s.escKey&&27===e.keyCode&&(e.preventDefault(),t.$outer.hasClass("lg-thumb-open")?t.$outer.removeClass("lg-thumb-open"):t.destroy())})},t.prototype.arrow=function(){var e=this;this.$outer.find(".lg-prev").on("click.lg",function(){e.goToPrevSlide()}),this.$outer.find(".lg-next").on("click.lg",function(){e.goToNextSlide()})},t.prototype.arrowDisable=function(e){!this.s.loop&&this.s.hideControlOnEnd&&(e+1<this.$slide.length?this.$outer.find(".lg-next").removeAttr("disabled").removeClass("disabled"):this.$outer.find(".lg-next").attr("disabled","disabled").addClass("disabled"),0<e?this.$outer.find(".lg-prev").removeAttr("disabled").removeClass("disabled"):this.$outer.find(".lg-prev").attr("disabled","disabled").addClass("disabled"))},t.prototype.setTranslate=function(e,t,i){this.s.useLeft?e.css("left",t):e.css({transform:"translate3d("+t+"px, "+i+"px, 0px)"})},t.prototype.touchMove=function(e,t){var i=t-e;15<Math.abs(i)&&(this.$outer.addClass("lg-dragging"),this.setTranslate(this.$slide.eq(this.index),i,0),this.setTranslate(m(".lg-prev-slide"),-this.$slide.eq(this.index).width()+i,0),this.setTranslate(m(".lg-next-slide"),this.$slide.eq(this.index).width()+i,0))},t.prototype.touchEnd=function(e){var t=this;"lg-slide"!==t.s.mode&&t.$outer.addClass("lg-slide"),this.$slide.not(".lg-current, .lg-prev-slide, .lg-next-slide").css("opacity","0"),setTimeout(function(){t.$outer.removeClass("lg-dragging"),e<0&&Math.abs(e)>t.s.swipeThreshold?t.goToNextSlide(!0):0<e&&Math.abs(e)>t.s.swipeThreshold?t.goToPrevSlide(!0):Math.abs(e)<5&&t.$el.trigger("onSlideClick.lg"),t.$slide.removeAttr("style")}),setTimeout(function(){t.$outer.hasClass("lg-dragging")||"lg-slide"===t.s.mode||t.$outer.removeClass("lg-slide")},t.s.speed+100)},t.prototype.enableSwipe=function(){var t=this,i=0,a=0,n=!1;t.s.enableSwipe&&t.isTouch&&t.doCss()&&(t.$slide.on("touchstart.lg",function(e){t.$outer.hasClass("lg-zoomed")||t.lgBusy||(e.preventDefault(),t.manageSwipeClass(),i=e.originalEvent.targetTouches[0].pageX)}),t.$slide.on("touchmove.lg",function(e){t.$outer.hasClass("lg-zoomed")||(e.preventDefault(),a=e.originalEvent.targetTouches[0].pageX,t.touchMove(i,a),n=!0)}),t.$slide.on("touchend.lg",function(){t.$outer.hasClass("lg-zoomed")||(n?(n=!1,t.touchEnd(a-i)):t.$el.trigger("onSlideClick.lg"))}))},t.prototype.enableDrag=function(){var t=this,i=0,a=0,n=!1,s=!1;t.s.enableDrag&&!t.isTouch&&t.doCss()&&(t.$slide.on("mousedown.lg",function(e){t.$outer.hasClass("lg-zoomed")||(m(e.target).hasClass("lg-object")||m(e.target).hasClass("lg-video-play"))&&(e.preventDefault(),t.lgBusy||(t.manageSwipeClass(),i=e.pageX,n=!0,t.$outer.scrollLeft+=1,--t.$outer.scrollLeft,t.$outer.removeClass("lg-grab").addClass("lg-grabbing"),t.$el.trigger("onDragstart.lg")))}),m(v).on("mousemove.lg",function(e){n&&(s=!0,a=e.pageX,t.touchMove(i,a),t.$el.trigger("onDragmove.lg"))}),m(v).on("mouseup.lg",function(e){s?(s=!1,t.touchEnd(a-i),t.$el.trigger("onDragend.lg")):(m(e.target).hasClass("lg-object")||m(e.target).hasClass("lg-video-play"))&&t.$el.trigger("onSlideClick.lg"),n&&(n=!1,t.$outer.removeClass("lg-grabbing").addClass("lg-grab"))}))},t.prototype.manageSwipeClass=function(){var e=this.index+1,t=this.index-1,i=this.$slide.length;this.s.loop&&(0===this.index?t=i-1:this.index===i-1&&(e=0)),this.$slide.removeClass("lg-next-slide lg-prev-slide"),-1<t&&this.$slide.eq(t).addClass("lg-prev-slide"),this.$slide.eq(e).addClass("lg-next-slide")},t.prototype.mousewheel=function(){var t=this;t.$outer.on("mousewheel.lg",function(e){e.deltaY&&(0<e.deltaY?t.goToPrevSlide():t.goToNextSlide(),e.preventDefault())})},t.prototype.closeGallery=function(){var t=this,i=!1;this.$outer.find(".lg-close").on("click.lg",function(){t.destroy()}),t.s.closable&&(t.$outer.on("mousedown.lg",function(e){i=!!(m(e.target).is(".lg-outer")||m(e.target).is(".lg-item ")||m(e.target).is(".lg-img-wrap"))}),t.$outer.on("mouseup.lg",function(e){(m(e.target).is(".lg-outer")||m(e.target).is(".lg-item ")||m(e.target).is(".lg-img-wrap")&&i)&&(t.$outer.hasClass("lg-dragging")||t.destroy())}))},t.prototype.destroy=function(e){var t=this;e||t.$el.trigger("onBeforeClose.lg"),m(v).scrollTop(t.prevScrollTop),e&&(t.s.dynamic||this.$items.off("click.lg click.lgcustom"),m.removeData(t.el,"lightGallery")),this.$el.off(".lg.tm"),m.each(m.fn.lightGallery.modules,function(e){t.modules[e]&&t.modules[e].destroy()}),this.lGalleryOn=!1,clearTimeout(t.hideBartimeout),this.hideBartimeout=!1,m(v).off(".lg"),m("body").removeClass("lg-on lg-from-hash"),t.$outer&&t.$outer.removeClass("lg-visible"),m(".lg-backdrop").removeClass("in"),setTimeout(function(){t.$outer&&t.$outer.remove(),m(".lg-backdrop").remove(),e||t.$el.trigger("onCloseAfter.lg")},t.s.backdropDuration+50)},m.fn.lightGallery=function(e){return this.each(function(){if(m.data(this,"lightGallery"))try{m(this).data("lightGallery").init()}catch(e){console.error("lightGallery has not initiated properly")}else m.data(this,"lightGallery",new t(this,e))})},m.fn.lightGallery.modules={}}(jQuery,window,document)}),window.Modernizr=function(e,l,_){function t(e,t){var i=e.charAt(0).toUpperCase()+e.substr(1);return a((e+" "+m.join(i+" ")+i).split(" "),t)}function a(e,t){for(var i in e)if(h[e[i]]!==_)return"pfx"!=t||e[i];return!1}function i(e,t){return typeof e===t}function n(e){h.cssText=e}function s(e,t,i,a){var n,s,r,o=l.createElement("div");if(parseInt(i,10))for(;i--;)(r=l.createElement("div")).id=a?a[i]:u+(i+1),o.appendChild(r);return n=["&shy;","<style>",e,"</style>"].join(""),o.id=u,o.innerHTML+=n,d.appendChild(o),s=t(o,e),o.parentNode.removeChild(o),!!s}var r,o,c={},d=l.documentElement,u=(l.head||l.getElementsByTagName("head")[0],"modernizr"),p=l.createElement(u),h=p.style,f=(Object.prototype.toString," -webkit- -moz- -o- -ms- -khtml- ".split(" ")),m="Webkit Moz O ms Khtml".split(" "),v={},g=[],y={}.hasOwnProperty;o=i(y,_)||i(y.call,_)?function(e,t){return t in e&&i(e.constructor.prototype[t],_)}:function(e,t){return y.call(e,t)};var b,k,$,w;b=[,"csstransforms3d"],k=[,["@media (",f.join("transform-3d),("),u,")","{#csstransforms3d{left:9px;position:absolute}}"].join("")].join(""),s(k,function(e,t){for(var i=l.styleSheets[l.styleSheets.length-1],a=(i.cssRules&&i.cssRules[0]?i.cssRules[0].cssText:i.cssText,e.childNodes),n={};$--;)n[a[$].id]=a[$];c.csstransforms3d=9===n.csstransforms3d.offsetLeft},$=b.length,b);for(var x in v.csstransforms=function(){return!!a(["transformProperty","WebkitTransform","MozTransform","OTransform","msTransform"])},v.csstransforms3d=function(){var e=!!a(["perspectiveProperty","WebkitPerspective","MozPerspective","OPerspective","msPerspective"]);return e&&"webkitPerspective"in d.style&&(e=c.csstransforms3d),e},v.csstransitions=function(){return t("transitionProperty")},v)o(v,x)&&(r=x.toLowerCase(),c[r]=v[x](),g.push((c[r]?"":"no-")+r));return n(""),p=null,e.attachEvent&&((w=l.createElement("div")).innerHTML="<elem></elem>",1!==w.childNodes.length)&&function(e,n){function t(e){for(var t=-1;++t<l;)e.createElement(o[t])}e.iepp=e.iepp||{};var s,r=e.iepp,i=r.html5elements||"abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",o=i.split("|"),l=o.length,a=new RegExp("(^|\\s)("+i+")","gi"),c=new RegExp("<(/*)("+i+")","gi"),d=/^\s*[\{\}]\s*$/,u=new RegExp("(^|[^\\n]*?\\s)("+i+")([^\\n]*)({[\\n\\w\\W]*?})","gi"),p=n.createDocumentFragment(),h=n.documentElement,f=h.firstChild,m=n.createElement("body"),v=n.createElement("style"),g=/print|all/;r.getCSS=function(e,t){if(e+""===_)return"";for(var i,a=-1,n=e.length,s=[];++a<n;)(i=e[a]).disabled||(t=i.media||t,g.test(t)&&s.push(r.getCSS(i.imports,t),i.cssText),t="all");return s.join("")},r.parseCSS=function(e){for(var t,i=[];null!=(t=u.exec(e));)i.push(((d.exec(t[1])?"\n":t[1])+t[2]+t[3]).replace(a,"$1.iepp_$2")+t[4]);return i.join("\n")},r.writeHTML=function(){var e=-1;for(s=s||n.body;++e<l;)for(var t=n.getElementsByTagName(o[e]),i=t.length,a=-1;++a<i;)t[a].className.indexOf("iepp_")<0&&(t[a].className+=" iepp_"+o[e]);p.appendChild(s),h.appendChild(m),m.className=s.className,m.id=s.id,m.innerHTML=s.innerHTML.replace(c,"<$1font")},r._beforePrint=function(){v.styleSheet.cssText=r.parseCSS(r.getCSS(n.styleSheets,"all")),r.writeHTML()},r.restoreHTML=function(){m.innerHTML="",h.removeChild(m),h.appendChild(s)},r._afterPrint=function(){r.restoreHTML(),v.styleSheet.cssText=""},t(n),t(p),r.disablePP||(f.insertBefore(v,f.firstChild),v.media="print",v.className="iepp-printshim",e.attachEvent("onbeforeprint",r._beforePrint),e.attachEvent("onafterprint",r._afterPrint))}(e,l),c._version="2.0.6",c._prefixes=f,c._domPrefixes=m,c.testProp=function(e){return a([e])},c.testAllProps=t,c.testStyles=s,d.className=d.className.replace(/\bno-js\b/,"")+(" js "+g.join(" ")),c}(this,this.document),function(e,h){function f(e){return!e||"loaded"==e||"complete"==e}function m(){for(var e=1,t=-1;b.length-++t&&(!b[t].s||(e=b[t].r)););e&&v()}function v(){var a=b.shift();k=1,a?a.t?_(function(){var e,t,i;"c"==a.t?function(e){var i,t=h.createElement("link");if(t.href=e.s,t.rel="stylesheet",t.type="text/css",e.e||!l&&!s)t.onload=function(){i||(i=1,_(function(){m()},0))},e.e&&t.onload();else{var a=function(t){_(function(){if(!i)try{t.sheet.cssRules.length?(i=1,m()):a(t)}catch(e){1e3==e.code||"security"==e.message||"denied"==e.message?(i=1,_(function(){m()},0)):a(t)}},0)};a(t)}_(function(){i||(i=1,m())},g.errorTimeout),e.e||y.parentNode.insertBefore(t,y)}(a):(e=a,(i=h.createElement("script")).src=e.s,i.onreadystatechange=i.onload=function(){!t&&f(i.readyState)&&(t=1,m(),i.onload=i.onreadystatechange=null)},_(function(){t||(t=1,m())},g.errorTimeout),e.e?i.onload():y.parentNode.insertBefore(i,y))},0):(a(),m()):k=0}function t(e,t,i){var a,n,s,r,o,l,c,d,u="c"==t?C:x;function p(){!c&&f(l.readyState)&&(d.r=c=1,k||m(),l.onload=l.onreadystatechange=null,_(function(){w.removeChild(l)},0))}return k=0,t=t||"j",j(e)?(a=u,n=e,s=t,r=this.i++,o=i,l=h.createElement(a),c=0,d={t:s,s:n,e:o},l.src=l.data=n,$||(l.style.display="none"),l.width=l.height="0","object"!=a&&(l.type=s),l.onload=l.onreadystatechange=p,"img"==a?l.onerror=p:"script"==a&&(l.onerror=function(){d.e=d.r=1,v()}),b.splice(r,0,d),w.insertBefore(l,$?null:y),_(function(){c||(w.removeChild(l),d.r=d.e=c=1,m())},g.errorTimeout)):(b.splice(this.i++,0,e),1==b.length&&v()),this}function o(){var e=g;return e.loader={load:t,i:0},e}function c(e){return Object(e)===e}function d(e){return"[object Function]"==n.call(e)}var i,g,a=h.documentElement,_=e.setTimeout,y=h.getElementsByTagName("script")[0],n={}.toString,b=[],k=0,s="MozAppearance"in a.style,$=s&&!!h.createRange().compareNode,w=$?a:y.parentNode,r=e.opera&&"[object Opera]"==n.call(e.opera),l="webkitAppearance"in a.style,u=l&&"async"in h.createElement("script"),x=s?"object":r||u?"img":"script",C=l?"img":x,p=Array.isArray||function(e){return"[object Array]"==n.call(e)},j=function(e){return"string"==typeof e},S=[],T={};(g=function(e){function l(e,t,i,a,n){var s=function(e){var t,i,a=e.split("!"),n=S.length,s=a.pop(),r=a.length,o={url:s,origUrl:s,prefixes:a};for(i=0;i<r;i++)(t=T[a[i]])&&(o=t(o));for(i=0;i<n;i++)o=S[i](o);return o}(e),r=s.autoCallback;if(!s.bypass){if(t=t&&(d(t)?t:t[e]||t[a]||t[e.split("/").pop().split("?")[0]]),s.instead)return s.instead(e,t,i,a,n);i.load(s.url,s.forceCSS||!s.forceJS&&/css$/.test(s.url)?"c":void 0,s.noexec),(d(t)||d(r))&&i.load(function(){o(),t&&t(s.origUrl,n,a),r&&r(s.origUrl,n,a)})}}function t(e,t){function i(e){if(j(e))l(e,o,t,0,n);else if(c(e))for(a in e)e.hasOwnProperty(a)&&l(e[a],o,t,a,n)}var a,n=!!e.test,s=n?e.yep:e.nope,r=e.load||e.both,o=e.callback;i(s),i(r),e.complete&&t.load(e.complete)}var i,a,n=this.yepnope.loader;if(j(e))l(e,0,n,0);else if(p(e))for(i=0;i<e.length;i++)a=e[i],j(a)?l(a,0,n,0):p(a)?g(a):c(a)&&t(a,n);else c(e)&&t(e,n)}).addPrefix=function(e,t){T[e]=t},g.addFilter=function(e){S.push(e)},g.errorTimeout=1e4,null==h.readyState&&h.addEventListener&&(h.readyState="loading",h.addEventListener("DOMContentLoaded",i=function(){h.removeEventListener("DOMContentLoaded",i,0),h.readyState="complete"},0)),e.yepnope=o()}(this,this.document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))},function(n){"use strict";function a(){for(var e=0;e<_.length;e++)m(_[e],d)}var e,t,i,s,r,o,l,c,d=function(e,t){if($.push(e.responseText),w.push(t),w.length===_.length){for(var i=0;i<w.length;i++)u($[i],w[i]);0<(_=y.slice(0)).length?(w=[],$=[],y=[],a()):p()}},u=function(e,t){for(var i,a=v(e).replace(/\/\*[\s\S]*?\*\//g,""),n=a.match(/[\w\d\s\-\/\\\[\]:,.'"*()<>+~%#^$_=|@]+\{[\w\d\s\-\/\\%#:!;,.'"*()]+\d*\.?\d+rem[\w\d\s\-\/\\%#:!;,.'"*()]*\}/g),s=a.match(/\d*\.?\d+rem/g),r=/(.*\/)/.exec(t)[0],o=/@import (?:url\()?['"]?([^'\)"]*)['"]?\)?[^;]*/gm;null!==(i=o.exec(e));)0===i[1].indexOf("/")?y.push(i[1]):y.push(r+i[1]);null!==n&&0!==n.length&&(b=b.concat(n),k=k.concat(s))},p=function(){for(var e=/[\w\d\s\-\/\\%#:,.'"*()]+\d*\.?\d+rem[\w\d\s\-\/\\%#:!,.'"*()]*[;}]/g,t=0;t<b.length;t++){g+=b[t].substr(0,b[t].indexOf("{")+1);for(var i=b[t].match(e),a=0;a<i.length;a++)g+=i[a],a===i.length-1&&"}"!==g[g.length-1]&&(g+="\n}")}h()},h=function(){for(var e=0;e<k.length;e++)x[e]=Math.round(parseFloat(k[e].substr(0,k[e].length-3)*C))+"px";f()},f=function(){for(var e=0;e<x.length;e++)x[e]&&(g=g.replace(k[e],x[e]));var t=document.createElement("style");t.setAttribute("type","text/css"),t.id="remReplace",document.getElementsByTagName("head")[0].appendChild(t),t.styleSheet?t.styleSheet.cssText=g:t.appendChild(document.createTextNode(g))},m=function(t,i){try{var e=n.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP")||new ActiveXObject("Msxml2.XMLHTTP"):new XMLHttpRequest;e.open("GET",t,!0),e.onreadystatechange=function(){4===e.readyState&&i(e,t)},e.send(null)}catch(e){if(n.XDomainRequest){var a=new XDomainRequest;a.open("get",t),a.onload=function(){i(a,t)},a.onerror=function(){return!1},a.send()}}},v=function(e){return n.matchMedia||n.msMatchMedia||(e=e.replace(/@media[\s\S]*?\}\s*\}/g,"")),e};if((c=document.createElement("div")).style.cssText="font-size: 1rem;",!/rem/.test(c.style.fontSize)){var g="",_=function(){for(var e=document.getElementsByTagName("link"),t=[],i=0;i<e.length;i++)"stylesheet"===e[i].rel.toLowerCase()&&null===e[i].getAttribute("data-norem")&&t.push(e[i].href);return t}(),y=[],b=[],k=[],$=[],w=[],x=[],C="";t=document,i=t.documentElement,s=t.body||t.createElement("body"),r=!t.body,o=t.createElement("div"),l=s.style.fontSize,r&&i.appendChild(s),o.style.cssText="width:1em; position:absolute; visibility:hidden; padding: 0;",s.style.fontSize="1em",s.appendChild(o),e=o.offsetWidth,r?i.removeChild(s):(s.removeChild(o),s.style.fontSize=l),C=e,a()}}(window),function(e){"use strict";var t,i,a,n,s,r;e.matchMedia=e.matchMedia||(t=e.document,a=t.documentElement,n=a.firstElementChild||a.firstChild,s=t.createElement("body"),(r=t.createElement("div")).id="mq-test-1",r.style.cssText="position:absolute;top:-100em",s.style.background="none",s.appendChild(r),function(e){return r.innerHTML='&shy;<style media="'+e+'"> #mq-test-1 { width: 42px; }</style>',a.insertBefore(s,n),i=42===r.offsetWidth,a.removeChild(s),{matches:i,media:e}})}(this),function(g){"use strict";var h={};(g.respond=h).update=function(){};function e(e,t){var i=a();i&&(i.open("GET",e,!0),i.onreadystatechange=function(){4!==i.readyState||200!==i.status&&304!==i.status||t(i.responseText)},4!==i.readyState&&i.send(null))}function f(e){return e.replace(h.regex.minmaxwh,"").match(h.regex.other)}var s=[],a=function(){var t=!1;try{t=new g.XMLHttpRequest}catch(e){t=new g.ActiveXObject("Microsoft.XMLHTTP")}return function(){return t}}();if(h.ajax=e,h.queue=s,h.unsupportedmq=f,h.regex={media:/@media[^\{]+\{([^\{\}]*\{[^\}\{]*\})+/gi,keyframes:/@(?:\-(?:o|moz|webkit)\-)?keyframes[^\{]+\{(?:[^\{\}]*\{[^\}\{]*\})+[^\}]*\}/gi,comments:/\/\*[^*]*\*+([^/][^*]*\*+)*\//gi,urls:/(url\()['"]?([^\/\)'"][^:\)'"]+)['"]?(\))/g,findStyles:/@media *([^\{]+)\{([\S\s]+?)$/,only:/(only\s+)?([a-zA-Z]+)\s?/,minw:/\(\s*min\-width\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/,maxw:/\(\s*max\-width\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/,minmaxwh:/\(\s*m(in|ax)\-(height|width)\s*:\s*(\s*[0-9\.]+)(px|em)\s*\)/gi,other:/\([^\)]*\)/g},h.mediaQueriesSupported=g.matchMedia&&null!==g.matchMedia("only all")&&g.matchMedia("only all").matches,!h.mediaQueriesSupported){var _,y,b,k=g.document,$=k.documentElement,w=[],x=[],C=[],r={},j=k.getElementsByTagName("head")[0]||$,o=k.getElementsByTagName("base")[0],S=j.getElementsByTagName("link"),T=function(){var e,t=k.createElement("div"),i=k.body,a=$.style.fontSize,n=i&&i.style.fontSize,s=!1;return t.style.cssText="position:absolute;font-size:1em;width:1em",i||((i=s=k.createElement("body")).style.background="none"),$.style.fontSize="100%",i.style.fontSize="100%",i.appendChild(t),s&&$.insertBefore(i,$.firstChild),e=t.offsetWidth,s?$.removeChild(i):i.removeChild(t),$.style.fontSize=a,n&&(i.style.fontSize=n),e=b=parseFloat(e)},A=function(e){var t="clientWidth",i=$[t],a="CSS1Compat"===k.compatMode&&i||k.body[t]||i,n={},s=S[S.length-1],r=(new Date).getTime();if(e&&_&&r-_<30)return g.clearTimeout(y),void(y=g.setTimeout(A,30));for(var o in _=r,w)if(w.hasOwnProperty(o)){var l=w[o],c=l.minw,d=l.maxw,u=null===c,p=null===d;c=c&&parseFloat(c)*(-1<c.indexOf("em")?b||T():1),d=d&&parseFloat(d)*(-1<d.indexOf("em")?b||T():1),l.hasquery&&(u&&p||!(u||c<=a)||!(p||a<=d))||(n[l.media]||(n[l.media]=[]),n[l.media].push(x[l.rules]))}for(var h in C)C.hasOwnProperty(h)&&C[h]&&C[h].parentNode===j&&j.removeChild(C[h]);for(var f in C.length=0,n)if(n.hasOwnProperty(f)){var m=k.createElement("style"),v=n[f].join("\n");m.type="text/css",m.media=f,j.insertBefore(m,s.nextSibling),m.styleSheet?m.styleSheet.cssText=v:m.appendChild(k.createTextNode(v)),C.push(m)}},l=function(e,t,i){function a(e){return e.replace(h.regex.urls,"$1"+t+"$2$3")}var n=e.replace(h.regex.comments,"").replace(h.regex.keyframes,"").match(h.regex.media),s=n&&n.length||0,r=!s&&i;(t=t.substring(0,t.lastIndexOf("/"))).length&&(t+="/"),r&&(s=1);for(var o=0;o<s;o++){var l,c,d,u;r?(l=i,x.push(a(e))):(l=n[o].match(h.regex.findStyles)&&RegExp.$1,x.push(RegExp.$2&&a(RegExp.$2))),u=(d=l.split(",")).length;for(var p=0;p<u;p++)c=d[p],f(c)||w.push({media:c.split("(")[0].match(h.regex.only)&&RegExp.$2||"all",rules:x.length-1,hasquery:-1<c.indexOf("("),minw:c.match(h.regex.minw)&&parseFloat(RegExp.$1)+(RegExp.$2||""),maxw:c.match(h.regex.maxw)&&parseFloat(RegExp.$1)+(RegExp.$2||"")})}A()},c=function(){if(s.length){var t=s.shift();e(t.href,function(e){l(e,t.href,t.media),r[t.href]=!0,g.setTimeout(function(){c()},0)})}},t=function(){for(var e=0;e<S.length;e++){var t=S[e],i=t.href,a=t.media,n=t.rel&&"stylesheet"===t.rel.toLowerCase();i&&n&&!r[i]&&(t.styleSheet&&t.styleSheet.rawCssText?(l(t.styleSheet.rawCssText,i,a),r[i]=!0):(/^([a-zA-Z:]*\/\/)/.test(i)||o)&&i.replace(RegExp.$1,"").split("/")[0]!==g.location.host||("//"===i.substring(0,2)&&(i=g.location.protocol+i),s.push({href:i,media:a})))}c()};t(),h.update=t,h.getEmValue=T,g.addEventListener?g.addEventListener("resize",i,!1):g.attachEvent&&g.attachEvent("onresize",i)}function i(){A(!0)}}(this),function(e,t){"function"==typeof define&&define.amd?define(["jquery"],t):t(e.jQuery)}(this,function(g){"use strict";var d={data:{index:0,name:"scrollbar"},macosx:/mac/i.test(navigator.platform),mobile:/android|webos|iphone|ipad|ipod|blackberry/i.test(navigator.userAgent),overlay:null,scroll:null,scrolls:[],webkit:/webkit/i.test(navigator.userAgent)&&!/edge\/\d+/i.test(navigator.userAgent)};d.scrolls.add=function(e){this.remove(e).push(e)};function e(e){var t;d.scroll||(d.overlay=!((t=s(!0)).height||t.width),d.scroll=s(),c(),g(window).resize(function(){var e=!1;if(d.scroll&&(d.scroll.height||d.scroll.width)){var t=s();t.height===d.scroll.height&&t.width===d.scroll.width||(d.scroll=t,e=!0)}c(e)})),this.container=e,this.namespace=".scrollbar_"+d.data.index++,this.options=g.extend({},i,window.jQueryScrollbarOptions||{}),this.scrollTo=null,this.scrollx={},this.scrolly={},e.data(d.data.name,this),d.scrolls.add(this)}var i={autoScrollSize:!0,autoUpdate:!0,debug:!(d.scrolls.remove=function(e){for(;0<=g.inArray(e,this);)this.splice(g.inArray(e,this),1);return this}),disableBodyScroll:!1,duration:200,ignoreMobile:!1,ignoreOverlay:!1,scrollStep:30,showArrows:!1,stepScrolling:!0,scrollx:null,scrolly:null,onDestroy:null,onInit:null,onScroll:null,onUpdate:null};e.prototype={destroy:function(){if(this.wrapper){this.container.removeData(d.data.name),d.scrolls.remove(this);var e=this.container.scrollLeft(),t=this.container.scrollTop();this.container.insertBefore(this.wrapper).css({height:"",margin:"","max-height":""}).removeClass("scroll-content scroll-scrollx_visible scroll-scrolly_visible").off(this.namespace).scrollLeft(e).scrollTop(t),this.scrollx.scroll.removeClass("scroll-scrollx_visible").find("div").andSelf().off(this.namespace),this.scrolly.scroll.removeClass("scroll-scrolly_visible").find("div").andSelf().off(this.namespace),this.wrapper.remove(),g(document).add("body").off(this.namespace),g.isFunction(this.options.onDestroy)&&this.options.onDestroy.apply(this,[this.container])}},init:function(e){var p=this,h=this.container,n=this.containerWrapper||h,f=this.namespace,m=g.extend(this.options,e||{}),v={x:this.scrollx,y:this.scrolly},i=this.wrapper,t={scrollLeft:h.scrollLeft(),scrollTop:h.scrollTop()};if(d.mobile&&m.ignoreMobile||d.overlay&&m.ignoreOverlay||d.macosx&&!d.webkit)return!1;if(i)n.css({height:"auto","margin-bottom":-1*d.scroll.height+"px","margin-right":-1*d.scroll.width+"px","max-height":""});else{if(this.wrapper=i=g("<div>").addClass("scroll-wrapper").addClass(h.attr("class")).css("position","absolute"==h.css("position")?"absolute":"fixed").insertBefore(h).append(h),h.is("textarea")&&(this.containerWrapper=n=g("<div>").insertBefore(h).append(h),i.addClass("scroll-textarea")),n.addClass("scroll-content").css({height:"auto","margin-bottom":-1*d.scroll.height+"px","margin-right":-1*d.scroll.width+"px","max-height":""}),h.on("scroll"+f,function(e){g.isFunction(m.onScroll)&&m.onScroll.call(p,{maxScroll:v.y.maxScrollOffset,scroll:h.scrollTop(),size:v.y.size,visible:v.y.visible},{maxScroll:v.x.maxScrollOffset,scroll:h.scrollLeft(),size:v.x.size,visible:v.x.visible}),v.x.isVisible&&v.x.scroll.bar.css("left",h.scrollLeft()*v.x.kx+"px"),v.y.isVisible&&v.y.scroll.bar.css("top",h.scrollTop()*v.y.kx+"px")}),i.on("scroll"+f,function(){i.scrollTop(0).scrollLeft(0)}),m.disableBodyScroll){var a=function(e){_(e)?v.y.isVisible&&v.y.mousewheel(e):v.x.isVisible&&v.x.mousewheel(e)};i.on("MozMousePixelScroll"+f,a),i.on("mousewheel"+f,a),d.mobile&&i.on("touchstart"+f,function(e){var t=e.originalEvent.touches&&e.originalEvent.touches[0]||e,i=t.pageX,a=t.pageY,n=h.scrollLeft(),s=h.scrollTop();g(document).on("touchmove"+f,function(e){var t=e.originalEvent.targetTouches&&e.originalEvent.targetTouches[0]||e;h.scrollLeft(n+i-t.pageX),h.scrollTop(s+a-t.pageY),e.preventDefault()}),g(document).on("touchend"+f,function(){g(document).off(f)})})}g.isFunction(m.onInit)&&m.onInit.apply(this,[h])}g.each(v,function(n,s){function r(){var e=h[c]();h[c](e+d),1==l&&u<=e+d&&(e=h[c]()),-1==l&&e+d<=u&&(e=h[c]()),h[c]()==e&&o&&o()}var o=null,l=1,c="x"===n?"scrollLeft":"scrollTop",d=m.scrollStep,u=0;s.scroll||(s.scroll=p._getScroll(m["scroll"+n]).addClass("scroll-"+n),m.showArrows&&s.scroll.addClass("scroll-element_arrows_visible"),s.mousewheel=function(e){if(!s.isVisible||"x"===n&&_(e))return!0;if("y"===n&&!_(e))return v.x.mousewheel(e),!0;var t=-1*e.originalEvent.wheelDelta||e.originalEvent.detail,i=s.size-s.visible-s.offset;return(0<t&&u<i||t<0&&0<u)&&((u+=t)<0&&(u=0),i<u&&(u=i),p.scrollTo=p.scrollTo||{},p.scrollTo[c]=u,setTimeout(function(){p.scrollTo&&(h.stop().animate(p.scrollTo,240,"linear",function(){u=h[c]()}),p.scrollTo=null)},1)),e.preventDefault(),!1},s.scroll.on("MozMousePixelScroll"+f,s.mousewheel).on("mousewheel"+f,s.mousewheel).on("mouseenter"+f,function(){u=h[c]()}),s.scroll.find(".scroll-arrow, .scroll-element_track").on("mousedown"+f,function(e){if(1!=e.which)return!0;l=1;var t={eventOffset:e["x"===n?"pageX":"pageY"],maxScrollValue:s.size-s.visible-s.offset,scrollbarOffset:s.scroll.bar.offset()["x"===n?"left":"top"],scrollbarSize:s.scroll.bar["x"===n?"outerWidth":"outerHeight"]()},i=0,a=0;return u=g(this).hasClass("scroll-arrow")?(l=g(this).hasClass("scroll-arrow_more")?1:-1,d=m.scrollStep*l,0<l?t.maxScrollValue:0):(l=t.scrollbarOffset+t.scrollbarSize<t.eventOffset?1:t.eventOffset<t.scrollbarOffset?-1:0,d=Math.round(.75*s.visible)*l,u=t.eventOffset-t.scrollbarOffset-(m.stepScrolling?1==l?t.scrollbarSize:0:Math.round(t.scrollbarSize/2)),h[c]()+u/s.kx),p.scrollTo=p.scrollTo||{},p.scrollTo[c]=m.stepScrolling?h[c]()+d:u,m.stepScrolling&&(o=function(){u=h[c](),clearInterval(a),clearTimeout(i),a=i=0},i=setTimeout(function(){a=setInterval(r,40)},m.duration+100)),setTimeout(function(){p.scrollTo&&(h.animate(p.scrollTo,m.duration),p.scrollTo=null)},1),p._handleMouseDown(o,e)}),s.scroll.bar.on("mousedown"+f,function(e){if(1!=e.which)return!0;var i=e["x"===n?"pageX":"pageY"],a=h[c]();return s.scroll.addClass("scroll-draggable"),g(document).on("mousemove"+f,function(e){var t=parseInt((e["x"===n?"pageX":"pageY"]-i)/s.kx,10);h[c](a+t)}),p._handleMouseDown(function(){s.scroll.removeClass("scroll-draggable"),u=h[c]()},e)}))}),g.each(v,function(e,t){var i="scroll-scroll"+e+"_visible",a="x"==e?v.y:v.x;t.scroll.removeClass(i),a.scroll.removeClass(i),n.removeClass(i)}),g.each(v,function(e,t){g.extend(t,"x"==e?{offset:parseInt(h.css("left"),10)||0,size:h.prop("scrollWidth"),visible:i.width()}:{offset:parseInt(h.css("top"),10)||0,size:h.prop("scrollHeight"),visible:i.height()})}),this._updateScroll("x",this.scrollx),this._updateScroll("y",this.scrolly),g.isFunction(m.onUpdate)&&m.onUpdate.apply(this,[h]),g.each(v,function(e,t){var i="x"===e?"left":"top",a="x"===e?"outerWidth":"outerHeight",n="x"===e?"width":"height",s=parseInt(h.css(i),10)||0,r=t.size,o=t.visible+s,l=t.scroll.size[a]()+(parseInt(t.scroll.size.css(i),10)||0);m.autoScrollSize&&(t.scrollbarSize=parseInt(l*o/r,10),t.scroll.bar.css(n,t.scrollbarSize+"px")),t.scrollbarSize=t.scroll.bar[a](),t.kx=(l-t.scrollbarSize)/(r-o)||1,t.maxScrollOffset=r-o}),h.scrollLeft(t.scrollLeft).scrollTop(t.scrollTop).trigger("scroll")},_getScroll:function(e){var t={advanced:['<div class="scroll-element">','<div class="scroll-element_corner"></div>','<div class="scroll-arrow scroll-arrow_less"></div>','<div class="scroll-arrow scroll-arrow_more"></div>','<div class="scroll-element_outer">','<div class="scroll-element_size"></div>','<div class="scroll-element_inner-wrapper">','<div class="scroll-element_inner scroll-element_track">','<div class="scroll-element_inner-bottom"></div>',"</div>","</div>",'<div class="scroll-bar">','<div class="scroll-bar_body">','<div class="scroll-bar_body-inner"></div>',"</div>",'<div class="scroll-bar_bottom"></div>','<div class="scroll-bar_center"></div>',"</div>","</div>","</div>"].join(""),simple:['<div class="scroll-element">','<div class="scroll-element_outer">','<div class="scroll-element_size"></div>','<div class="scroll-element_track"></div>','<div class="scroll-bar"></div>',"</div>","</div>"].join("")};return t[e]&&(e=t[e]),e="string"==typeof(e=e||t.simple)?g(e).appendTo(this.wrapper):g(e),g.extend(e,{bar:e.find(".scroll-bar"),size:e.find(".scroll-element_size"),track:e.find(".scroll-element_track")}),e},_handleMouseDown:function(e,t){var i=this.namespace;return g(document).on("blur"+i,function(){g(document).add("body").off(i),e&&e()}),g(document).on("dragstart"+i,function(e){return e.preventDefault(),!1}),g(document).on("mouseup"+i,function(){g(document).add("body").off(i),e&&e()}),g("body").on("selectstart"+i,function(e){return e.preventDefault(),!1}),t&&t.preventDefault(),!1},_updateScroll:function(e,t){var i=this.container,a=this.containerWrapper||i,n="scroll-scroll"+e+"_visible",s="x"===e?this.scrolly:this.scrollx,r=parseInt(this.container.css("x"===e?"left":"top"),10)||0,o=this.wrapper,l=t.size,c=t.visible+r;t.isVisible=1<l-c,t.isVisible?(t.scroll.addClass(n),s.scroll.addClass(n),a.addClass(n)):(t.scroll.removeClass(n),s.scroll.removeClass(n),a.removeClass(n)),"y"===e&&(i.is("textarea")||l<c?a.css({height:c+d.scroll.height+"px","max-height":"none"}):a.css({"max-height":c+d.scroll.height+"px"})),t.size==i.prop("scrollWidth")&&s.size==i.prop("scrollHeight")&&t.visible==o.width()&&s.visible==o.height()&&t.offset==(parseInt(i.css("left"),10)||0)&&s.offset==(parseInt(i.css("top"),10)||0)||(g.extend(this.scrollx,{offset:parseInt(i.css("left"),10)||0,size:i.prop("scrollWidth"),visible:o.width()}),g.extend(this.scrolly,{offset:parseInt(i.css("top"),10)||0,size:this.container.prop("scrollHeight"),visible:o.height()}),this._updateScroll("x"===e?"y":"x",s))}};var n=e;g.fn.scrollbar=function(i,a){return"string"!=typeof i&&(a=i,i="init"),void 0===a&&(a=[]),g.isArray(a)||(a=[a]),this.not("body, .scroll-wrapper").each(function(){var e=g(this),t=e.data(d.data.name);(t||"init"===i)&&(t=t||new n(e))[i]&&t[i].apply(t,a)}),this},g.fn.scrollbar.options=i;var l,a,c=(l=0,function(e){var t,i,a,n,s,r,o;for(t=0;t<d.scrolls.length;t++)i=(n=d.scrolls[t]).container,a=n.options,s=n.wrapper,r=n.scrollx,o=n.scrolly,(e||a.autoUpdate&&s&&s.is(":visible")&&(i.prop("scrollWidth")!=r.size||i.prop("scrollHeight")!=o.size||s.width()!=r.visible||s.height()!=o.visible))&&(n.init(),!a.debug||window.console&&console.log({scrollHeight:i.prop("scrollHeight")+":"+n.scrolly.size,scrollWidth:i.prop("scrollWidth")+":"+n.scrollx.size,visibleHeight:s.height()+":"+n.scrolly.visible,visibleWidth:s.width()+":"+n.scrollx.visible},!0));clearTimeout(l),l=setTimeout(c,300)});function s(e){if(d.webkit&&!e)return{height:0,width:0};if(!d.data.outer){var t={border:"none","box-sizing":"content-box",height:"200px",margin:"0",padding:"0",width:"200px"};d.data.inner=g("<div>").css(g.extend({},t)),d.data.outer=g("<div>").css(g.extend({left:"-1000px",overflow:"scroll",position:"absolute",top:"-1000px"},t)).append(d.data.inner).appendTo("body")}return d.data.outer.scrollLeft(1e3).scrollTop(1e3),{height:Math.ceil(d.data.outer.offset().top-d.data.inner.offset().top||0),width:Math.ceil(d.data.outer.offset().left-d.data.inner.offset().left||0)}}function _(e){var t=e.originalEvent;return!(t.axis&&t.axis===t.HORIZONTAL_AXIS||t.wheelDeltaX)}window.angular&&(a=window.angular).module("jQueryScrollbar",[]).provider("jQueryScrollbar",function(){var t=i;return{setOptions:function(e){a.extend(t,e)},$get:function(){return{options:a.copy(t)}}}}).directive("jqueryScrollbar",["jQueryScrollbar","$parse",function(n,s){return{restrict:"AC",link:function(e,t,i){var a=s(i.jqueryScrollbar)(e);t.scrollbar(a||n.options).on("$destroy",function(){t.scrollbar("destroy")})}}}])}),function(s,r,u){var f=s.requestAnimationFrame||s.webkitRequestAnimationFrame||s.mozRequestAnimationFrame||s.oRequestAnimationFrame||s.msRequestAnimationFrame||function(e){s.setTimeout(e,1e3/60)},m=function(){var a={},n=r.createElement("div").style,t=function(){for(var e=["t","webkitT","MozT","msT","OT"],t=0,i=e.length;t<i;t++)if(e[t]+"ransform"in n)return e[t].substr(0,e[t].length-1);return!1}();function e(e){return!1!==t&&(""===t?e:t+e.charAt(0).toUpperCase()+e.substr(1))}a.getTime=Date.now||function(){return(new Date).getTime()},a.extend=function(e,t){for(var i in t)e[i]=t[i]},a.addEvent=function(e,t,i,a){e.addEventListener(t,i,!!a)},a.removeEvent=function(e,t,i,a){e.removeEventListener(t,i,!!a)},a.prefixPointerEvent=function(e){return s.MSPointerEvent?"MSPointer"+e.charAt(7).toUpperCase()+e.substr(8):e},a.momentum=function(e,t,i,a,n,s){var r,o,l=e-t,c=u.abs(l)/i;return o=c/(s=void 0===s?6e-4:s),(r=e+c*c/(2*s)*(l<0?-1:1))<a?(r=n?a-n/2.5*(c/8):a,o=(l=u.abs(r-e))/c):0<r&&(r=n?n/2.5*(c/8):0,o=(l=u.abs(e)+r)/c),{destination:u.round(r),duration:o}};var i=e("transform");return a.extend(a,{hasTransform:!1!==i,hasPerspective:e("perspective")in n,hasTouch:"ontouchstart"in s,hasPointer:!(!s.PointerEvent&&!s.MSPointerEvent),hasTransition:e("transition")in n}),a.isBadAndroid=function(){var e=s.navigator.appVersion;if(!/Android/.test(e)||/Chrome\/\d/.test(e))return!1;var t=e.match(/Safari\/(\d+.\d)/);return!(t&&"object"==typeof t&&2<=t.length)||parseFloat(t[1])<535.19}(),a.extend(a.style={},{transform:i,transitionTimingFunction:e("transitionTimingFunction"),transitionDuration:e("transitionDuration"),transitionDelay:e("transitionDelay"),transformOrigin:e("transformOrigin")}),a.hasClass=function(e,t){return new RegExp("(^|\\s)"+t+"(\\s|$)").test(e.className)},a.addClass=function(e,t){if(!a.hasClass(e,t)){var i=e.className.split(" ");i.push(t),e.className=i.join(" ")}},a.removeClass=function(e,t){if(a.hasClass(e,t)){var i=new RegExp("(^|\\s)"+t+"(\\s|$)","g");e.className=e.className.replace(i," ")}},a.offset=function(e){for(var t=-e.offsetLeft,i=-e.offsetTop;e=e.offsetParent;)t-=e.offsetLeft,i-=e.offsetTop;return{left:t,top:i}},a.preventDefaultException=function(e,t){for(var i in t)if(t[i].test(e[i]))return!0;return!1},a.extend(a.eventType={},{touchstart:1,touchmove:1,touchend:1,mousedown:2,mousemove:2,mouseup:2,pointerdown:3,pointermove:3,pointerup:3,MSPointerDown:3,MSPointerMove:3,MSPointerUp:3}),a.extend(a.ease={},{quadratic:{style:"cubic-bezier(0.25, 0.46, 0.45, 0.94)",fn:function(e){return e*(2-e)}},circular:{style:"cubic-bezier(0.1, 0.57, 0.1, 1)",fn:function(e){return u.sqrt(1- --e*e)}},back:{style:"cubic-bezier(0.175, 0.885, 0.32, 1.275)",fn:function(e){return--e*e*(5*e+4)+1}},bounce:{style:"",fn:function(e){return(e/=1)<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}},elastic:{style:"",fn:function(e){return 0===e?0:1==e?1:.4*u.pow(2,-10*e)*u.sin((e-.055)*(2*u.PI)/.22)+1}}}),a.tap=function(e,t){var i=r.createEvent("Event");i.initEvent(t,!0,!0),i.pageX=e.pageX,i.pageY=e.pageY,e.target.dispatchEvent(i)},a.click=function(e){var t,i=e.target;/(SELECT|INPUT|TEXTAREA)/i.test(i.tagName)||((t=r.createEvent(s.MouseEvent?"MouseEvents":"Event")).initEvent("click",!0,!0),t.view=e.view||s,t.detail=1,t.screenX=i.screenX||0,t.screenY=i.screenY||0,t.clientX=i.clientX||0,t.clientY=i.clientY||0,t.ctrlKey=!!e.ctrlKey,t.altKey=!!e.altKey,t.shiftKey=!!e.shiftKey,t.metaKey=!!e.metaKey,t.button=0,t.relatedTarget=null,t._constructed=!0,i.dispatchEvent(t))},a}();function e(e,t){for(var i in this.wrapper="string"==typeof e?r.querySelector(e):e,this.scroller=this.wrapper.children[0],this.scrollerStyle=this.scroller.style,this.options={resizeScrollbars:!0,mouseWheelSpeed:20,snapThreshold:.334,disablePointer:!m.hasPointer,disableTouch:m.hasPointer||!m.hasTouch,disableMouse:m.hasPointer||m.hasTouch,startX:0,startY:0,scrollY:!0,directionLockThreshold:5,momentum:!0,bounce:!0,bounceTime:600,bounceEasing:"",preventDefault:!0,preventDefaultException:{tagName:/^(INPUT|TEXTAREA|BUTTON|SELECT|LABEL)$/},HWCompositing:!0,useTransition:!0,useTransform:!0,bindToWrapper:void 0===s.onmousedown},t)this.options[i]=t[i];this.translateZ=this.options.HWCompositing&&m.hasPerspective?" translateZ(0)":"",this.options.useTransition=m.hasTransition&&this.options.useTransition,this.options.useTransform=m.hasTransform&&this.options.useTransform,this.options.eventPassthrough=!0===this.options.eventPassthrough?"vertical":this.options.eventPassthrough,this.options.preventDefault=!this.options.eventPassthrough&&this.options.preventDefault,this.options.scrollY="vertical"!=this.options.eventPassthrough&&this.options.scrollY,this.options.scrollX="horizontal"!=this.options.eventPassthrough&&this.options.scrollX,this.options.freeScroll=this.options.freeScroll&&!this.options.eventPassthrough,this.options.directionLockThreshold=this.options.eventPassthrough?0:this.options.directionLockThreshold,this.options.bounceEasing="string"==typeof this.options.bounceEasing?m.ease[this.options.bounceEasing]||m.ease.circular:this.options.bounceEasing,this.options.resizePolling=void 0===this.options.resizePolling?60:this.options.resizePolling,!0===this.options.tap&&(this.options.tap="tap"),this.options.useTransition||this.options.useTransform||/relative|absolute/i.test(this.scrollerStyle.position)||(this.scrollerStyle.position="relative"),"scale"==this.options.shrinkScrollbars&&(this.options.useTransition=!1),this.options.invertWheelDirection=this.options.invertWheelDirection?-1:1,this.x=0,this.y=0,this.directionX=0,this.directionY=0,this._events={},this._init(),this.refresh(),this.scrollTo(this.options.startX,this.options.startY),this.enable()}function o(e,t,i){var a=r.createElement("div"),n=r.createElement("div");return!0===i&&(a.style.cssText="position:absolute;z-index:9999",n.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px"),n.className="iScrollIndicator","h"==e?(!0===i&&(a.style.cssText+=";height:7px;left:2px;right:2px;bottom:0",n.style.height="100%"),a.className="iScrollHorizontalScrollbar"):(!0===i&&(a.style.cssText+=";width:7px;bottom:2px;top:2px;right:1px",n.style.width="100%"),a.className="iScrollVerticalScrollbar"),a.style.cssText+=";overflow:hidden",t||(a.style.pointerEvents="none"),a.appendChild(n),a}function l(e,t){for(var i in this.wrapper="string"==typeof t.el?r.querySelector(t.el):t.el,this.wrapperStyle=this.wrapper.style,this.indicator=this.wrapper.children[0],this.indicatorStyle=this.indicator.style,this.scroller=e,this.options={listenX:!0,listenY:!0,interactive:!1,resize:!0,defaultScrollbars:!1,shrink:!1,fade:!1,speedRatioX:0,speedRatioY:0},t)this.options[i]=t[i];if(this.sizeRatioX=1,this.sizeRatioY=1,this.maxPosX=0,this.maxPosY=0,this.options.interactive&&(this.options.disableTouch||(m.addEvent(this.indicator,"touchstart",this),m.addEvent(s,"touchend",this)),this.options.disablePointer||(m.addEvent(this.indicator,m.prefixPointerEvent("pointerdown"),this),m.addEvent(s,m.prefixPointerEvent("pointerup"),this)),this.options.disableMouse||(m.addEvent(this.indicator,"mousedown",this),m.addEvent(s,"mouseup",this))),this.options.fade){this.wrapperStyle[m.style.transform]=this.scroller.translateZ;var a=m.style.transitionDuration;if(!a)return;this.wrapperStyle[a]=m.isBadAndroid?"0.0001ms":"0ms";var n=this;m.isBadAndroid&&f(function(){"0.0001ms"===n.wrapperStyle[a]&&(n.wrapperStyle[a]="0s")}),this.wrapperStyle.opacity="0"}}e.prototype={version:"5.2.0",_init:function(){this._initEvents(),(this.options.scrollbars||this.options.indicators)&&this._initIndicators(),this.options.mouseWheel&&this._initWheel(),this.options.snap&&this._initSnap(),this.options.keyBindings&&this._initKeys()},destroy:function(){this._initEvents(!0),clearTimeout(this.resizeTimeout),this.resizeTimeout=null,this._execEvent("destroy")},_transitionEnd:function(e){e.target==this.scroller&&this.isInTransition&&(this._transitionTime(),this.resetPosition(this.options.bounceTime)||(this.isInTransition=!1,this._execEvent("scrollEnd")))},_start:function(e){if(1!=m.eventType[e.type]&&0!==(e.which?e.button:e.button<2?0:4==e.button?1:2))return;if(this.enabled&&(!this.initiated||m.eventType[e.type]===this.initiated)){!this.options.preventDefault||m.isBadAndroid||m.preventDefaultException(e.target,this.options.preventDefaultException)||e.preventDefault();var t,i=e.touches?e.touches[0]:e;this.initiated=m.eventType[e.type],this.moved=!1,this.distX=0,this.distY=0,this.directionX=0,this.directionY=0,this.directionLocked=0,this.startTime=m.getTime(),this.options.useTransition&&this.isInTransition?(this._transitionTime(),this.isInTransition=!1,t=this.getComputedPosition(),this._translate(u.round(t.x),u.round(t.y)),this._execEvent("scrollEnd")):!this.options.useTransition&&this.isAnimating&&(this.isAnimating=!1,this._execEvent("scrollEnd")),this.startX=this.x,this.startY=this.y,this.absStartX=this.x,this.absStartY=this.y,this.pointX=i.pageX,this.pointY=i.pageY,this._execEvent("beforeScrollStart")}},_move:function(e){if(this.enabled&&m.eventType[e.type]===this.initiated){this.options.preventDefault&&e.preventDefault();var t,i,a,n,s=e.touches?e.touches[0]:e,r=s.pageX-this.pointX,o=s.pageY-this.pointY,l=m.getTime();if(this.pointX=s.pageX,this.pointY=s.pageY,this.distX+=r,this.distY+=o,a=u.abs(this.distX),n=u.abs(this.distY),!(300<l-this.endTime&&a<10&&n<10)){if(this.directionLocked||this.options.freeScroll||(a>n+this.options.directionLockThreshold?this.directionLocked="h":n>=a+this.options.directionLockThreshold?this.directionLocked="v":this.directionLocked="n"),"h"==this.directionLocked){if("vertical"==this.options.eventPassthrough)e.preventDefault();else if("horizontal"==this.options.eventPassthrough)return void(this.initiated=!1);o=0}else if("v"==this.directionLocked){if("horizontal"==this.options.eventPassthrough)e.preventDefault();else if("vertical"==this.options.eventPassthrough)return void(this.initiated=!1);r=0}r=this.hasHorizontalScroll?r:0,o=this.hasVerticalScroll?o:0,t=this.x+r,i=this.y+o,(0<t||t<this.maxScrollX)&&(t=this.options.bounce?this.x+r/3:0<t?0:this.maxScrollX),(0<i||i<this.maxScrollY)&&(i=this.options.bounce?this.y+o/3:0<i?0:this.maxScrollY),this.directionX=0<r?-1:r<0?1:0,this.directionY=0<o?-1:o<0?1:0,this.moved||this._execEvent("scrollStart"),this.moved=!0,this._translate(t,i),300<l-this.startTime&&(this.startTime=l,this.startX=this.x,this.startY=this.y)}}},_end:function(e){if(this.enabled&&m.eventType[e.type]===this.initiated){this.options.preventDefault&&!m.preventDefaultException(e.target,this.options.preventDefaultException)&&e.preventDefault();e.changedTouches&&e.changedTouches[0];var t,i,a=m.getTime()-this.startTime,n=u.round(this.x),s=u.round(this.y),r=u.abs(n-this.startX),o=u.abs(s-this.startY),l=0,c="";if(this.isInTransition=0,this.initiated=0,this.endTime=m.getTime(),!this.resetPosition(this.options.bounceTime)){if(this.scrollTo(n,s),!this.moved)return this.options.tap&&m.tap(e,this.options.tap),this.options.click&&m.click(e),void this._execEvent("scrollCancel");if(this._events.flick&&a<200&&r<100&&o<100)this._execEvent("flick");else{if(this.options.momentum&&a<300&&(t=this.hasHorizontalScroll?m.momentum(this.x,this.startX,a,this.maxScrollX,this.options.bounce?this.wrapperWidth:0,this.options.deceleration):{destination:n,duration:0},i=this.hasVerticalScroll?m.momentum(this.y,this.startY,a,this.maxScrollY,this.options.bounce?this.wrapperHeight:0,this.options.deceleration):{destination:s,duration:0},n=t.destination,s=i.destination,l=u.max(t.duration,i.duration),this.isInTransition=1),this.options.snap){var d=this._nearestSnap(n,s);this.currentPage=d,l=this.options.snapSpeed||u.max(u.max(u.min(u.abs(n-d.x),1e3),u.min(u.abs(s-d.y),1e3)),300),n=d.x,s=d.y,this.directionX=0,this.directionY=0,c=this.options.bounceEasing}if(n!=this.x||s!=this.y)return(0<n||n<this.maxScrollX||0<s||s<this.maxScrollY)&&(c=m.ease.quadratic),void this.scrollTo(n,s,l,c);this._execEvent("scrollEnd")}}}},_resize:function(){var e=this;clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout(function(){e.refresh()},this.options.resizePolling)},resetPosition:function(e){var t=this.x,i=this.y;return e=e||0,!this.hasHorizontalScroll||0<this.x?t=0:this.x<this.maxScrollX&&(t=this.maxScrollX),!this.hasVerticalScroll||0<this.y?i=0:this.y<this.maxScrollY&&(i=this.maxScrollY),(t!=this.x||i!=this.y)&&(this.scrollTo(t,i,e,this.options.bounceEasing),!0)},disable:function(){this.enabled=!1},enable:function(){this.enabled=!0},refresh:function(){this.wrapper.offsetHeight;this.wrapperWidth=this.wrapper.clientWidth,this.wrapperHeight=this.wrapper.clientHeight,this.scrollerWidth=this.scroller.offsetWidth,this.scrollerHeight=this.scroller.offsetHeight,this.maxScrollX=this.wrapperWidth-this.scrollerWidth,this.maxScrollY=this.wrapperHeight-this.scrollerHeight,this.hasHorizontalScroll=this.options.scrollX&&this.maxScrollX<0,this.hasVerticalScroll=this.options.scrollY&&this.maxScrollY<0,this.hasHorizontalScroll||(this.maxScrollX=0,this.scrollerWidth=this.wrapperWidth),this.hasVerticalScroll||(this.maxScrollY=0,this.scrollerHeight=this.wrapperHeight),this.endTime=0,this.directionX=0,this.directionY=0,this.wrapperOffset=m.offset(this.wrapper),this._execEvent("refresh"),this.resetPosition()},on:function(e,t){this._events[e]||(this._events[e]=[]),this._events[e].push(t)},off:function(e,t){if(this._events[e]){var i=this._events[e].indexOf(t);-1<i&&this._events[e].splice(i,1)}},_execEvent:function(e){if(this._events[e]){var t=0,i=this._events[e].length;if(i)for(;t<i;t++)this._events[e][t].apply(this,[].slice.call(arguments,1))}},scrollBy:function(e,t,i,a){e=this.x+e,t=this.y+t,i=i||0,this.scrollTo(e,t,i,a)},scrollTo:function(e,t,i,a){a=a||m.ease.circular,this.isInTransition=this.options.useTransition&&0<i;var n=this.options.useTransition&&a.style;!i||n?(n&&(this._transitionTimingFunction(a.style),this._transitionTime(i)),this._translate(e,t)):this._animate(e,t,i,a.fn)},scrollToElement:function(e,t,i,a,n){if(e=e.nodeType?e:this.scroller.querySelector(e)){var s=m.offset(e);s.left-=this.wrapperOffset.left,s.top-=this.wrapperOffset.top,!0===i&&(i=u.round(e.offsetWidth/2-this.wrapper.offsetWidth/2)),!0===a&&(a=u.round(e.offsetHeight/2-this.wrapper.offsetHeight/2)),s.left-=i||0,s.top-=a||0,s.left=0<s.left?0:s.left<this.maxScrollX?this.maxScrollX:s.left,s.top=0<s.top?0:s.top<this.maxScrollY?this.maxScrollY:s.top,t=null==t||"auto"===t?u.max(u.abs(this.x-s.left),u.abs(this.y-s.top)):t,this.scrollTo(s.left,s.top,t,n)}},_transitionTime:function(e){if(this.options.useTransition){e=e||0;var t=m.style.transitionDuration;if(t){if(this.scrollerStyle[t]=e+"ms",!e&&m.isBadAndroid){this.scrollerStyle[t]="0.0001ms";var i=this;f(function(){"0.0001ms"===i.scrollerStyle[t]&&(i.scrollerStyle[t]="0s")})}if(this.indicators)for(var a=this.indicators.length;a--;)this.indicators[a].transitionTime(e)}}},_transitionTimingFunction:function(e){if(this.scrollerStyle[m.style.transitionTimingFunction]=e,this.indicators)for(var t=this.indicators.length;t--;)this.indicators[t].transitionTimingFunction(e)},_translate:function(e,t){if(this.options.useTransform?this.scrollerStyle[m.style.transform]="translate("+e+"px,"+t+"px)"+this.translateZ:(e=u.round(e),t=u.round(t),this.scrollerStyle.left=e+"px",this.scrollerStyle.top=t+"px"),this.x=e,this.y=t,this.indicators)for(var i=this.indicators.length;i--;)this.indicators[i].updatePosition()},_initEvents:function(e){var t=e?m.removeEvent:m.addEvent,i=this.options.bindToWrapper?this.wrapper:s;t(s,"orientationchange",this),t(s,"resize",this),this.options.click&&t(this.wrapper,"click",this,!0),this.options.disableMouse||(t(this.wrapper,"mousedown",this),t(i,"mousemove",this),t(i,"mousecancel",this),t(i,"mouseup",this)),m.hasPointer&&!this.options.disablePointer&&(t(this.wrapper,m.prefixPointerEvent("pointerdown"),this),t(i,m.prefixPointerEvent("pointermove"),this),t(i,m.prefixPointerEvent("pointercancel"),this),t(i,m.prefixPointerEvent("pointerup"),this)),m.hasTouch&&!this.options.disableTouch&&(t(this.wrapper,"touchstart",this),t(i,"touchmove",this),t(i,"touchcancel",this),t(i,"touchend",this)),t(this.scroller,"transitionend",this),t(this.scroller,"webkitTransitionEnd",this),t(this.scroller,"oTransitionEnd",this),t(this.scroller,"MSTransitionEnd",this)},getComputedPosition:function(){var e,t,i=s.getComputedStyle(this.scroller,null);return t=this.options.useTransform?(e=+((i=i[m.style.transform].split(")")[0].split(", "))[12]||i[4]),+(i[13]||i[5])):(e=+i.left.replace(/[^-\d.]/g,""),+i.top.replace(/[^-\d.]/g,"")),{x:e,y:t}},_initIndicators:function(){var e,t=this.options.interactiveScrollbars,i="string"!=typeof this.options.scrollbars,a=[],n=this;this.indicators=[],this.options.scrollbars&&(this.options.scrollY&&(e={el:o("v",t,this.options.scrollbars),interactive:t,defaultScrollbars:!0,customStyle:i,resize:this.options.resizeScrollbars,shrink:this.options.shrinkScrollbars,fade:this.options.fadeScrollbars,listenX:!1},this.wrapper.appendChild(e.el),a.push(e)),this.options.scrollX&&(e={el:o("h",t,this.options.scrollbars),interactive:t,defaultScrollbars:!0,customStyle:i,resize:this.options.resizeScrollbars,shrink:this.options.shrinkScrollbars,fade:this.options.fadeScrollbars,listenY:!1},this.wrapper.appendChild(e.el),a.push(e))),this.options.indicators&&(a=a.concat(this.options.indicators));for(var s=a.length;s--;)this.indicators.push(new l(this,a[s]));function r(e){if(n.indicators)for(var t=n.indicators.length;t--;)e.call(n.indicators[t])}this.options.fadeScrollbars&&(this.on("scrollEnd",function(){r(function(){this.fade()})}),this.on("scrollCancel",function(){r(function(){this.fade()})}),this.on("scrollStart",function(){r(function(){this.fade(1)})}),this.on("beforeScrollStart",function(){r(function(){this.fade(1,!0)})})),this.on("refresh",function(){r(function(){this.refresh()})}),this.on("destroy",function(){r(function(){this.destroy()}),delete this.indicators})},_initWheel:function(){m.addEvent(this.wrapper,"wheel",this),m.addEvent(this.wrapper,"mousewheel",this),m.addEvent(this.wrapper,"DOMMouseScroll",this),this.on("destroy",function(){clearTimeout(this.wheelTimeout),this.wheelTimeout=null,m.removeEvent(this.wrapper,"wheel",this),m.removeEvent(this.wrapper,"mousewheel",this),m.removeEvent(this.wrapper,"DOMMouseScroll",this)})},_wheel:function(e){if(this.enabled){var t,i,a,n,s=this;if(void 0===this.wheelTimeout&&s._execEvent("scrollStart"),clearTimeout(this.wheelTimeout),this.wheelTimeout=setTimeout(function(){s.options.snap||s._execEvent("scrollEnd"),s.wheelTimeout=void 0},400),"deltaX"in e)i=1===e.deltaMode?(t=-e.deltaX*this.options.mouseWheelSpeed,-e.deltaY*this.options.mouseWheelSpeed):(t=-e.deltaX,-e.deltaY);else if("wheelDeltaX"in e)t=e.wheelDeltaX/120*this.options.mouseWheelSpeed,i=e.wheelDeltaY/120*this.options.mouseWheelSpeed;else if("wheelDelta"in e)t=i=e.wheelDelta/120*this.options.mouseWheelSpeed;else{if(!("detail"in e))return;t=i=-e.detail/3*this.options.mouseWheelSpeed}if(t*=this.options.invertWheelDirection,i*=this.options.invertWheelDirection,this.hasVerticalScroll||(t=i,i=0),this.options.snap)return a=this.currentPage.pageX,n=this.currentPage.pageY,0<t?a--:t<0&&a++,0<i?n--:i<0&&n++,void this.goToPage(a,n);a=this.x+u.round(this.hasHorizontalScroll?t:0),n=this.y+u.round(this.hasVerticalScroll?i:0),this.directionX=0<t?-1:t<0?1:0,this.directionY=0<i?-1:i<0?1:0,0<a?a=0:a<this.maxScrollX&&(a=this.maxScrollX),0<n?n=0:n<this.maxScrollY&&(n=this.maxScrollY),this.scrollTo(a,n,0)}},_initSnap:function(){this.currentPage={},"string"==typeof this.options.snap&&(this.options.snap=this.scroller.querySelectorAll(this.options.snap)),this.on("refresh",function(){var e,t,i,a,n,s,r=0,o=0,l=0,c=this.options.snapStepX||this.wrapperWidth,d=this.options.snapStepY||this.wrapperHeight;if(this.pages=[],this.wrapperWidth&&this.wrapperHeight&&this.scrollerWidth&&this.scrollerHeight){if(!0===this.options.snap)for(i=u.round(c/2),a=u.round(d/2);l>-this.scrollerWidth;){for(this.pages[r]=[],n=e=0;n>-this.scrollerHeight;)this.pages[r][e]={x:u.max(l,this.maxScrollX),y:u.max(n,this.maxScrollY),width:c,height:d,cx:l-i,cy:n-a},n-=d,e++;l-=c,r++}else for(e=(s=this.options.snap).length,t=-1;r<e;r++)(0===r||s[r].offsetLeft<=s[r-1].offsetLeft)&&(o=0,t++),this.pages[o]||(this.pages[o]=[]),l=u.max(-s[r].offsetLeft,this.maxScrollX),n=u.max(-s[r].offsetTop,this.maxScrollY),i=l-u.round(s[r].offsetWidth/2),a=n-u.round(s[r].offsetHeight/2),this.pages[o][t]={x:l,y:n,width:s[r].offsetWidth,height:s[r].offsetHeight,cx:i,cy:a},l>this.maxScrollX&&o++;this.goToPage(this.currentPage.pageX||0,this.currentPage.pageY||0,0),this.options.snapThreshold%1==0?(this.snapThresholdX=this.options.snapThreshold,this.snapThresholdY=this.options.snapThreshold):(this.snapThresholdX=u.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width*this.options.snapThreshold),this.snapThresholdY=u.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height*this.options.snapThreshold))}}),this.on("flick",function(){var e=this.options.snapSpeed||u.max(u.max(u.min(u.abs(this.x-this.startX),1e3),u.min(u.abs(this.y-this.startY),1e3)),300);this.goToPage(this.currentPage.pageX+this.directionX,this.currentPage.pageY+this.directionY,e)})},_nearestSnap:function(e,t){if(!this.pages.length)return{x:0,y:0,pageX:0,pageY:0};var i=0,a=this.pages.length,n=0;if(u.abs(e-this.absStartX)<this.snapThresholdX&&u.abs(t-this.absStartY)<this.snapThresholdY)return this.currentPage;for(0<e?e=0:e<this.maxScrollX&&(e=this.maxScrollX),0<t?t=0:t<this.maxScrollY&&(t=this.maxScrollY);i<a;i++)if(e>=this.pages[i][0].cx){e=this.pages[i][0].x;break}for(a=this.pages[i].length;n<a;n++)if(t>=this.pages[0][n].cy){t=this.pages[0][n].y;break}return i==this.currentPage.pageX&&((i+=this.directionX)<0?i=0:i>=this.pages.length&&(i=this.pages.length-1),e=this.pages[i][0].x),n==this.currentPage.pageY&&((n+=this.directionY)<0?n=0:n>=this.pages[0].length&&(n=this.pages[0].length-1),t=this.pages[0][n].y),{x:e,y:t,pageX:i,pageY:n}},goToPage:function(e,t,i,a){a=a||this.options.bounceEasing,e>=this.pages.length?e=this.pages.length-1:e<0&&(e=0),t>=this.pages[e].length?t=this.pages[e].length-1:t<0&&(t=0);var n=this.pages[e][t].x,s=this.pages[e][t].y;i=void 0===i?this.options.snapSpeed||u.max(u.max(u.min(u.abs(n-this.x),1e3),u.min(u.abs(s-this.y),1e3)),300):i,this.currentPage={x:n,y:s,pageX:e,pageY:t},this.scrollTo(n,s,i,a)},next:function(e,t){var i=this.currentPage.pageX,a=this.currentPage.pageY;++i>=this.pages.length&&this.hasVerticalScroll&&(i=0,a++),this.goToPage(i,a,e,t)},prev:function(e,t){var i=this.currentPage.pageX,a=this.currentPage.pageY;--i<0&&this.hasVerticalScroll&&(i=0,a--),this.goToPage(i,a,e,t)},_initKeys:function(e){var t,i={pageUp:33,pageDown:34,end:35,home:36,left:37,up:38,right:39,down:40};if("object"==typeof this.options.keyBindings)for(t in this.options.keyBindings)"string"==typeof this.options.keyBindings[t]&&(this.options.keyBindings[t]=this.options.keyBindings[t].toUpperCase().charCodeAt(0));else this.options.keyBindings={};for(t in i)this.options.keyBindings[t]=this.options.keyBindings[t]||i[t];m.addEvent(s,"keydown",this),this.on("destroy",function(){m.removeEvent(s,"keydown",this)})},_key:function(e){if(this.enabled){var t,i=this.options.snap,a=i?this.currentPage.pageX:this.x,n=i?this.currentPage.pageY:this.y,s=m.getTime(),r=this.keyTime||0;switch(this.options.useTransition&&this.isInTransition&&(t=this.getComputedPosition(),this._translate(u.round(t.x),u.round(t.y)),this.isInTransition=!1),this.keyAcceleration=s-r<200?u.min(this.keyAcceleration+.25,50):0,e.keyCode){case this.options.keyBindings.pageUp:this.hasHorizontalScroll&&!this.hasVerticalScroll?a+=i?1:this.wrapperWidth:n+=i?1:this.wrapperHeight;break;case this.options.keyBindings.pageDown:this.hasHorizontalScroll&&!this.hasVerticalScroll?a-=i?1:this.wrapperWidth:n-=i?1:this.wrapperHeight;break;case this.options.keyBindings.end:a=i?this.pages.length-1:this.maxScrollX,n=i?this.pages[0].length-1:this.maxScrollY;break;case this.options.keyBindings.home:n=a=0;break;case this.options.keyBindings.left:a+=i?-1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.up:n+=i?1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.right:a-=i?-1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.down:n-=i?1:5+this.keyAcceleration>>0;break;default:return}i?this.goToPage(a,n):(0<a?(a=0,this.keyAcceleration=0):a<this.maxScrollX&&(a=this.maxScrollX,this.keyAcceleration=0),0<n?(n=0,this.keyAcceleration=0):n<this.maxScrollY&&(n=this.maxScrollY,this.keyAcceleration=0),this.scrollTo(a,n,0),this.keyTime=s)}},_animate:function(s,r,o,l){var c=this,d=this.x,u=this.y,p=m.getTime(),h=p+o;this.isAnimating=!0,function e(){var t,i,a,n=m.getTime();if(h<=n)return c.isAnimating=!1,c._translate(s,r),void(c.resetPosition(c.options.bounceTime)||c._execEvent("scrollEnd"));a=l(n=(n-p)/o),t=(s-d)*a+d,i=(r-u)*a+u,c._translate(t,i),c.isAnimating&&f(e)}()},handleEvent:function(e){switch(e.type){case"touchstart":case"pointerdown":case"MSPointerDown":case"mousedown":this._start(e);break;case"touchmove":case"pointermove":case"MSPointerMove":case"mousemove":this._move(e);break;case"touchend":case"pointerup":case"MSPointerUp":case"mouseup":case"touchcancel":case"pointercancel":case"MSPointerCancel":case"mousecancel":this._end(e);break;case"orientationchange":case"resize":this._resize();break;case"transitionend":case"webkitTransitionEnd":case"oTransitionEnd":case"MSTransitionEnd":this._transitionEnd(e);break;case"wheel":case"DOMMouseScroll":case"mousewheel":this._wheel(e);break;case"keydown":this._key(e);break;case"click":this.enabled&&!e._constructed&&(e.preventDefault(),e.stopPropagation())}}},l.prototype={handleEvent:function(e){switch(e.type){case"touchstart":case"pointerdown":case"MSPointerDown":case"mousedown":this._start(e);break;case"touchmove":case"pointermove":case"MSPointerMove":case"mousemove":this._move(e);break;case"touchend":case"pointerup":case"MSPointerUp":case"mouseup":case"touchcancel":case"pointercancel":case"MSPointerCancel":case"mousecancel":this._end(e)}},destroy:function(){this.options.fadeScrollbars&&(clearTimeout(this.fadeTimeout),this.fadeTimeout=null),this.options.interactive&&(m.removeEvent(this.indicator,"touchstart",this),m.removeEvent(this.indicator,m.prefixPointerEvent("pointerdown"),this),m.removeEvent(this.indicator,"mousedown",this),m.removeEvent(s,"touchmove",this),m.removeEvent(s,m.prefixPointerEvent("pointermove"),this),m.removeEvent(s,"mousemove",this),m.removeEvent(s,"touchend",this),m.removeEvent(s,m.prefixPointerEvent("pointerup"),this),m.removeEvent(s,"mouseup",this)),this.options.defaultScrollbars&&this.wrapper.parentNode.removeChild(this.wrapper)},_start:function(e){var t=e.touches?e.touches[0]:e;e.preventDefault(),e.stopPropagation(),this.transitionTime(),this.initiated=!0,this.moved=!1,this.lastPointX=t.pageX,this.lastPointY=t.pageY,this.startTime=m.getTime(),this.options.disableTouch||m.addEvent(s,"touchmove",this),this.options.disablePointer||m.addEvent(s,m.prefixPointerEvent("pointermove"),this),this.options.disableMouse||m.addEvent(s,"mousemove",this),this.scroller._execEvent("beforeScrollStart")},_move:function(e){var t,i,a,n,s=e.touches?e.touches[0]:e;m.getTime();this.moved||this.scroller._execEvent("scrollStart"),this.moved=!0,t=s.pageX-this.lastPointX,this.lastPointX=s.pageX,i=s.pageY-this.lastPointY,this.lastPointY=s.pageY,a=this.x+t,n=this.y+i,this._pos(a,n),e.preventDefault(),e.stopPropagation()},_end:function(e){if(this.initiated){if(this.initiated=!1,e.preventDefault(),e.stopPropagation(),m.removeEvent(s,"touchmove",this),m.removeEvent(s,m.prefixPointerEvent("pointermove"),this),m.removeEvent(s,"mousemove",this),this.scroller.options.snap){var t=this.scroller._nearestSnap(this.scroller.x,this.scroller.y),i=this.options.snapSpeed||u.max(u.max(u.min(u.abs(this.scroller.x-t.x),1e3),u.min(u.abs(this.scroller.y-t.y),1e3)),300);this.scroller.x==t.x&&this.scroller.y==t.y||(this.scroller.directionX=0,this.scroller.directionY=0,this.scroller.currentPage=t,this.scroller.scrollTo(t.x,t.y,i,this.scroller.options.bounceEasing))}this.moved&&this.scroller._execEvent("scrollEnd")}},transitionTime:function(e){e=e||0;var t=m.style.transitionDuration;if(t&&(this.indicatorStyle[t]=e+"ms",!e&&m.isBadAndroid)){this.indicatorStyle[t]="0.0001ms";var i=this;f(function(){"0.0001ms"===i.indicatorStyle[t]&&(i.indicatorStyle[t]="0s")})}},transitionTimingFunction:function(e){this.indicatorStyle[m.style.transitionTimingFunction]=e},refresh:function(){this.transitionTime(),this.options.listenX&&!this.options.listenY?this.indicatorStyle.display=this.scroller.hasHorizontalScroll?"block":"none":this.options.listenY&&!this.options.listenX?this.indicatorStyle.display=this.scroller.hasVerticalScroll?"block":"none":this.indicatorStyle.display=this.scroller.hasHorizontalScroll||this.scroller.hasVerticalScroll?"block":"none",this.scroller.hasHorizontalScroll&&this.scroller.hasVerticalScroll?(m.addClass(this.wrapper,"iScrollBothScrollbars"),m.removeClass(this.wrapper,"iScrollLoneScrollbar"),this.options.defaultScrollbars&&this.options.customStyle&&(this.options.listenX?this.wrapper.style.right="8px":this.wrapper.style.bottom="8px")):(m.removeClass(this.wrapper,"iScrollBothScrollbars"),m.addClass(this.wrapper,"iScrollLoneScrollbar"),this.options.defaultScrollbars&&this.options.customStyle&&(this.options.listenX?this.wrapper.style.right="2px":this.wrapper.style.bottom="2px"));this.wrapper.offsetHeight;this.options.listenX&&(this.wrapperWidth=this.wrapper.clientWidth,this.options.resize?(this.indicatorWidth=u.max(u.round(this.wrapperWidth*this.wrapperWidth/(this.scroller.scrollerWidth||this.wrapperWidth||1)),8),this.indicatorStyle.width=this.indicatorWidth+"px"):this.indicatorWidth=this.indicator.clientWidth,this.maxPosX=this.wrapperWidth-this.indicatorWidth,"clip"==this.options.shrink?(this.minBoundaryX=8-this.indicatorWidth,this.maxBoundaryX=this.wrapperWidth-8):(this.minBoundaryX=0,this.maxBoundaryX=this.maxPosX),this.sizeRatioX=this.options.speedRatioX||this.scroller.maxScrollX&&this.maxPosX/this.scroller.maxScrollX),this.options.listenY&&(this.wrapperHeight=this.wrapper.clientHeight,this.options.resize?(this.indicatorHeight=u.max(u.round(this.wrapperHeight*this.wrapperHeight/(this.scroller.scrollerHeight||this.wrapperHeight||1)),8),this.indicatorStyle.height=this.indicatorHeight+"px"):this.indicatorHeight=this.indicator.clientHeight,this.maxPosY=this.wrapperHeight-this.indicatorHeight,"clip"==this.options.shrink?(this.minBoundaryY=8-this.indicatorHeight,this.maxBoundaryY=this.wrapperHeight-8):(this.minBoundaryY=0,this.maxBoundaryY=this.maxPosY),this.maxPosY=this.wrapperHeight-this.indicatorHeight,this.sizeRatioY=this.options.speedRatioY||this.scroller.maxScrollY&&this.maxPosY/this.scroller.maxScrollY),this.updatePosition()},updatePosition:function(){var e=this.options.listenX&&u.round(this.sizeRatioX*this.scroller.x)||0,t=this.options.listenY&&u.round(this.sizeRatioY*this.scroller.y)||0;this.options.ignoreBoundaries||(e<this.minBoundaryX?("scale"==this.options.shrink&&(this.width=u.max(this.indicatorWidth+e,8),this.indicatorStyle.width=this.width+"px"),e=this.minBoundaryX):e>this.maxBoundaryX?e="scale"==this.options.shrink?(this.width=u.max(this.indicatorWidth-(e-this.maxPosX),8),this.indicatorStyle.width=this.width+"px",this.maxPosX+this.indicatorWidth-this.width):this.maxBoundaryX:"scale"==this.options.shrink&&this.width!=this.indicatorWidth&&(this.width=this.indicatorWidth,this.indicatorStyle.width=this.width+"px"),t<this.minBoundaryY?("scale"==this.options.shrink&&(this.height=u.max(this.indicatorHeight+3*t,8),this.indicatorStyle.height=this.height+"px"),t=this.minBoundaryY):t>this.maxBoundaryY?t="scale"==this.options.shrink?(this.height=u.max(this.indicatorHeight-3*(t-this.maxPosY),8),this.indicatorStyle.height=this.height+"px",this.maxPosY+this.indicatorHeight-this.height):this.maxBoundaryY:"scale"==this.options.shrink&&this.height!=this.indicatorHeight&&(this.height=this.indicatorHeight,this.indicatorStyle.height=this.height+"px")),this.x=e,this.y=t,this.scroller.options.useTransform?this.indicatorStyle[m.style.transform]="translate("+e+"px,"+t+"px)"+this.scroller.translateZ:(this.indicatorStyle.left=e+"px",this.indicatorStyle.top=t+"px")},_pos:function(e,t){e<0?e=0:e>this.maxPosX&&(e=this.maxPosX),t<0?t=0:t>this.maxPosY&&(t=this.maxPosY),e=this.options.listenX?u.round(e/this.sizeRatioX):this.scroller.x,t=this.options.listenY?u.round(t/this.sizeRatioY):this.scroller.y,this.scroller.scrollTo(e,t)},fade:function(e,t){if(!t||this.visible){clearTimeout(this.fadeTimeout),this.fadeTimeout=null;var i=e?250:500,a=e?0:300;e=e?"1":"0",this.wrapperStyle[m.style.transitionDuration]=i+"ms",this.fadeTimeout=setTimeout(function(e){this.wrapperStyle.opacity=e,this.visible=+e}.bind(this,e),a)}}},e.utils=m,"undefined"!=typeof module&&module.exports?module.exports=e:"function"==typeof define&&define.amd?define(function(){return e}):s.IScroll=e}(window,document,Math),function(o,h){o.fp_scrolloverflow=function(){var i="fp-scrollable",s="."+i,c=".fp-section",a=c+".active",d=".fp-tableCell";function u(e){var t=fp_utils.closest(e,c);return null!=t?parseInt(getComputedStyle(t)["padding-bottom"])+parseInt(getComputedStyle(t)["padding-top"]):0}function n(){var l=this;function i(){var t;fp_utils.hasClass(h.body,"fp-responsive")?(t=l.options.scrollOverflowHandler,a(function(e){fp_utils.hasClass(fp_utils.closest(e,c),"fp-auto-height-responsive")&&t.remove(e)})):a(e)}function e(e){if(!fp_utils.hasClass(e,"fp-noscroll")){fp_utils.css(e,{overflow:"hidden"});var t,i=l.options.scrollOverflowHandler,a=i.wrapContent(),n=fp_utils.closest(e,c),s=i.scrollable(e),r=u(n);null!=s?t=i.scrollHeight(e):(t=e.scrollHeight-r,l.options.verticalCentered&&(t=p(d,e)[0].scrollHeight-r));var o=fp_utils.getWindowHeight()-r;o<t?null!=s?i.update(e,o):(l.options.verticalCentered?(fp_utils.wrapInner(p(d,e)[0],a.scroller),fp_utils.wrapInner(p(d,e)[0],a.scrollable)):(fp_utils.wrapInner(e,a.scroller),fp_utils.wrapInner(e,a.scrollable)),i.create(e,o,l.iscrollOptions)):i.remove(e),fp_utils.css(e,{overflow:""})}}function a(i){p(c).forEach(function(e){var t=p(".fp-slide",e);t.length?t.forEach(function(e){i(e)}):i(e)})}l.options=null,l.init=function(e,t){return l.options=e,l.iscrollOptions=t,"complete"===h.readyState&&(i(),fullpage_api.shared.afterRenderActions()),o.addEventListener("load",function(){i(),fullpage_api.shared.afterRenderActions()}),l},l.createScrollBarForAll=i}IScroll.prototype.wheelOn=function(){this.wrapper.addEventListener("wheel",this),this.wrapper.addEventListener("mousewheel",this),this.wrapper.addEventListener("DOMMouseScroll",this)},IScroll.prototype.wheelOff=function(){this.wrapper.removeEventListener("wheel",this),this.wrapper.removeEventListener("mousewheel",this),this.wrapper.removeEventListener("DOMMouseScroll",this)};var p=null,r={refreshId:null,iScrollInstances:[],iscrollOptions:{scrollbars:!0,mouseWheel:!0,hideScrollbars:!1,fadeScrollbars:!1,disableMouse:!0,interactiveScrollbars:!0},init:function(e){p=fp_utils.$;var t="ontouchstart"in o||0<navigator.msMaxTouchPoints||navigator.maxTouchPoints;return r.iscrollOptions.click=t,r.iscrollOptions=fp_utils.deepExtend(r.iscrollOptions,e.scrollOverflowOptions),(new n).init(e,r.iscrollOptions)},toggleWheel:function(i){p(s,p(a)[0]).forEach(function(e){var t=e.fp_iscrollInstance;null!=t&&(i?t.wheelOn():t.wheelOff())})},onLeave:function(){r.toggleWheel(!1)},beforeLeave:function(){r.onLeave()},afterLoad:function(){r.toggleWheel(!0)},create:function(i,a,n){p(s,i).forEach(function(e){fp_utils.css(e,{height:a+"px"});var t=e.fp_iscrollInstance;null!=t&&r.iScrollInstances.forEach(function(e){e.destroy()}),t=new IScroll(e,n),r.iScrollInstances.push(t),fp_utils.hasClass(fp_utils.closest(i,c),"active")||t.wheelOff(),e.fp_iscrollInstance=t})},isScrolled:function(e,t){var i=t.fp_iscrollInstance;return!i||("top"===e?0<=i.y&&!fp_utils.getScrollTop(t):"bottom"===e?0-i.y+fp_utils.getScrollTop(t)+1+t.offsetHeight>=t.scrollHeight:void 0)},scrollable:function(e){return p(".fp-slides",e).length?p(s,p(".fp-slide.active",e)[0])[0]:p(s,e)[0]},scrollHeight:function(e){return p(".fp-scroller",p(s,e)[0])[0].scrollHeight},remove:function(e){if(null!=e){var t=p(s,e)[0];if(null!=t){var i=t.fp_iscrollInstance;null!=i&&i.destroy(),t.fp_iscrollInstance=null,p(".fp-scroller",e)[0].outerHTML=p(".fp-scroller",e)[0].innerHTML,p(s,e)[0].outerHTML=p(s,e)[0].innerHTML}}},update:function(e,t){clearTimeout(r.refreshId),r.refreshId=setTimeout(function(){r.iScrollInstances.forEach(function(e){e.refresh(),fullpage_api.silentMoveTo(fp_utils.index(p(a)[0])+1)})},150),fp_utils.css(p(s,e)[0],{height:t+"px"}),fp_utils.css(p(s,e)[0].parentNode,{height:t+u(e)+"px"})},wrapContent:function(){var e=h.createElement("div");e.className=i;var t=h.createElement("div");return t.className="fp-scroller",{scrollable:e,scroller:t}}};return{iscrollHandler:r}}()}(window,document),$(document).ready(function(){$("body").on("click",".js-upload-file",UploadInvoice),$("body").on("dragover",".js-image-gl",FileDragHover),$("body").on("dragleave",".js-image-gl",FileDragHover1),$("body").on("drop",".js-image-gl",FileSelectHandler),$("body").on("change",".js-file-load",UploadScanSChange),$("body").on("change keyup input click",".js-image-gl .js-dell-image",DellImageBlock),NumberBlockFile()});var UploadInvoice=function(){var e=$(this).attr("type_block"),t=$(this).attr("type_load"),i=$(this).attr("id_object"),a=$("[name=myfile]").parents("form");a.attr("type_load",t),a.attr("type_block",e),a.attr("id_object",i),$("[name=myfile]").trigger("click")};function NumberBlockFile(){var i=1;$(".js-upload-file").each(function(e,t){$(this).attr("type_block",i),i++}),0==$(".form_up").length&&$("body").append('<form class="form_up"><input class="js-file-load" type="file" name="myfile"></form>')}var UploadScanSChange=function(){var e=$(this).parents("form").attr("type_load"),t=$(this).parents("form").attr("type_block"),i=$(this).parents("form").attr("id_object"),a=$('div[type_block="'+t+'"]').parents(".js-image-gl"),n=a.find(".li-image").length+1;if(file=this.files[0],file){var s="";0!=a.find(".list-image-icons").length&&(s='<span class="type-img"></span>'),a.find(".list-image").append('<div number_li="'+n+'" class="li-image"><span class="name-img"><a>'+this.files[0].name+"</a></span>"+s+'<span class="del-img js-dell-image"></span><span class="size-img">'+(this.files[0].size/1024/1024).toFixed(2)+' МБ</span><div class="progress-img"><div class="p-img" style="width: 0%;"></div></div></div>'),a.find(".list-image").show(),a.find(".js-upload-file").hide().addClass("eshe-load-file"),a.find("[number_li="+n+"] .p-img").show(),uploadS(file,e,i,n,t)}return!1};function DellImageBlock(){var e=$(this).parents(".li-image"),t=$(this).parents(".list-image");DellFile($(this).attr("id")),$(this).parents(".js-image-gl").find("input").val(DellValString("dell",",",$(this).parents(".js-image-gl").find("input").val(),$(this).attr("id"))),e.slideUp("slow",function(){$(this).remove(),0==t.find(".li-image").length&&(t.slideUp("slow"),t.parents(".js-image-gl").find(".js-upload-file").removeClass("eshe-load-file"));var i=1;t.find(".li-image").each(function(e,t){$(this).attr("number_li",i),i++})})}function uploadS(e,i,t,a,n){var s=$("div[type_block="+n+"]").parents(".js-image-gl"),r=new XMLHttpRequest;r.onload=r.onerror=function(){if(200==this.status){s.find(".js-upload-file").show(),s.find("[number_li="+a+"] .p-img").width(0).hide(),s.find("[number_li="+a+"]").addClass("yes-load"),alert_message("ok","Файл загружен");var e=JSON.parse(this.responseText);s.find("[number_li="+a+"] .del-img").attr("id",e.echo),0!=s.find("[number_li="+a+"] .type-img").length&&s.find("[number_li="+a+"] .type-img").empty().append(e.type),(e.type="jpg")||(e.type="jpeg")||(e.type="png"),13==i&&s.find("[number_li="+a+"] .name-img").append('<div class="upload-mask" style="background-image: url('+e.link+');"></div>').addClass("name_img-kkol"),s.find("[number_li="+a+"] .name-img a").attr("href",e.link),name_sql_image=e.echo;var t=s.find("input");""==t.val()?t.val(name_sql_image):t.val(t.val()+","+name_sql_image)}else s.find(".js-upload-file").show(),s.find("[number_li="+a+"] .p-img").width(0).hide(),s.find("[number_li="+a+"]").addClass("no-load"),alert_message("error","Файл не загружен. Неверный формат"),setTimeout(function(){s.find("[number_li="+a+"]").slideUp("slow",function(){var e=$(this).parents(".list-image");$(this).remove(),0==e.find(".li-image").length&&(e.slideUp("slow"),s.find(".js-upload-file").removeClass("eshe-load-file"))})},3e3)},r.upload.onprogress=function(e){var t=Math.round(100*e.loaded/e.total);s.find("[number_li="+a+"] .p-img").width(t)},r.open("POST","Ajax/file/upload.php",!0);var o=new FormData;o.append("thefile",e),o.append("type",i),o.append("object",t),r.send(o)}function DellFile(e){""!=e&&AjaxClient("file","dell","GET","id="+e,"AfterZero",0,0)}function AfterZero(e,t){}function DellValString(e,t,i,a){var n="";if("dell"==e)for(var s=i.split(t),r=0,o=0;o<s.length;o++)s[o]!=a&&""!=s[o]&&(n=0==r?s[o]:n+t+s[o],r++);else n=""!=jQuery.trim(i)?i+t+a:a;return n}function DellGroup(){var e=$(this).parents(".js-group");e.slideUp("slow",function(){e.remove()})}function AddGroup(){var e=$(this).parents(".js-group"),t="";e.is(".group-right")&&(t="group-right");var i=e.html();e.after('<div class="js-group '+t+' contact-group line-group">'+i+"</div>");var a=e.next();a.find(".active_in_2018").removeClass("active_in_2018"),a.find(".required_in_2018").removeClass("required_in_2018"),0==a.find(".js-dell-group").length&&a.find(".js-add-group").after('<div data-tooltip="Удалить" class="dell-group js-dell-group"><div></div></div>'),ToolTip(),a.find("input").val(""),a.find("textarea").val(""),a.find(".js-resize-block").each(function(e,t){2==$(this).find("textarea").length&&($(this).find("textarea").first().remove(),$(this).find("textarea").removeAttr("style"),$(this).find("textarea").autoResize({extraSpace:10}))}),a.find(".list_2018").removeClass("active_in_2018").removeClass("active1_in_2018"),a.find(".list_2018 input").val(""),a.find(".list_2018 .sel_active").removeClass("sel_active"),a.find(".slct").attr("data_src","").empty(),jQuery.scrollTo(a,1e3,{offset:-70}),Zindex(),SelectUpdate()}function SelectUpdate(){$(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli)}function cash_where_moo(){4==$(this).val()?$(".js-sh").show():$(".js-sh").hide()}function office_oo(){var e=$(".users_rule").attr("id_hax");$.cookie("cc_office"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("cc_office"+e,$(this).val(),"add"),autoReloadHak()}function close_cash_day(){$.arcticmodal({type:"ajax",url:"forms/form_close_cash_day.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function option_fix(){0==$(this).find("input").val()?($(this).find("input").val(1),$(this).find(".choice-radio i").addClass("active_task_cb"),$(".jj-fix").slideDown("slow")):($(this).find("input").val(0),$(this).find(".choice-radio i").removeClass("active_task_cb"),$(".jj-fix").slideUp("slow"))}function yes_cash_time(){$.arcticmodal({type:"ajax",url:"forms/form_yes_cash_time.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function number_animate(){$(".js-animate-number").each(function(){$(this).prop("Counter",parseFloat(ctrim($(this).attr("old_number"))).toFixed(2)).animate({Counter:$(this).text()},{duration:Number($(this).attr("data-duration")),easing:"easeOutExpo",step:function(e){$(this).text($.number(e.toFixed(2),2,"."," "))}})})}function city_oo(){var e=$(".users_rule").attr("id_hax");$.cookie("cc_town"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("cc_town"+e,$(this).val(),"add"),autoReloadHak()}function after_add_preorders(e,t){if("ok"==e.status){if(alert_message("ok","Обращение добавлено"),0<$(".js-global-preorders-link").length){if($(".js-global-preorders-link").prepend(e.temp),$('[id-max="IDMID"]').parents(".trips-b-comment").length&&1==e.photo){var i=1;$(".js-shots").each(function(e,t){$(this).attr("id-max")>i&&(i=$(this).attr("id-max"))}),i=parseInt(i)+1;var a=$('[id-max="IDMID"]').parents(".trips-b-comment"),n=$('[id-max="IDMID"]').parents(".trips-b-comment").html();n=n.replace(/IDMID/g,i),a.empty().append(n),$("[id-max="+i+"]").lightGallery({selector:".item_photo_yes",download:!1,thumbnail:!1,showThumbByDefault:!1})}$(".js-message-preorders-search").hide(),$(".preorders_block_global").first().addClass("new-say"),setTimeout(function(){$(".new-say").removeClass("new-say")},4e3)}ToolTip(),clearInterval(timerId),$.arcticmodal("close")}else $(".js-add-preorder-x").show(),$(".js-form-preorders .right_task_ccb").find(".b_loading_small").remove()}function StatusTripsCancel(){var e=$(this).parents(".trips_block_global").attr("id_trips");$.arcticmodal({type:"ajax",url:"forms/form_edit_cancel.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function cancel_dell_trips_x(){var i=0;$(".js-form-cancel-trips .gloab").each(function(e,t){""==$(this).val()||0==$(this).val()?($(this).parents(".input_2018").addClass("error_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),$(this).parents(".js-prs").addClass("error_textarea_2018"),i++):($(this).parents(".input_2018").removeClass("error_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"),$(this).parents(".js-prs").removeClass("error_textarea_2018"))}),0==i?($(".js-dell-cancel-trips-x").hide(),$(".js-dell-cancel-trips-x").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: auto; margin: 0 auto;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("tours","update_cancel","POST",0,"after_cancel_trips_x1",0,"vino_xd_preorders")):alert_message("error","Ошибка. Не все поля заполнены!")}function cancel_trips_x(){var i=0;$(".js-form-cancel-trips .gloab").each(function(e,t){""==$(this).val()||0==$(this).val()?($(this).parents(".input_2018").addClass("error_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),$(this).parents(".js-prs").addClass("error_textarea_2018"),i++):($(this).parents(".input_2018").removeClass("error_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"),$(this).parents(".js-prs").removeClass("error_textarea_2018"))}),0==i?($(".js-cancel-trips-x").hide(),$(".js-cancel-trips-x").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: auto; margin: 0 auto;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("tours","cancel","POST",0,"after_cancel_trips_x",0,"vino_xd_preorders")):alert_message("error","Ошибка. Не все поля заполнены!")}function edit_status_pre(){var i=0,e=parseInt($(".js-form-status-preorders .js-status-preorder-yes").val());$(".js-form-status-preorders .gloab").each(function(e,t){""==$(this).val()||0==$(this).val()?($(this).parents(".input_2018").addClass("error_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),$(this).parents(".js-prs").addClass("error_textarea_2018"),i++):($(this).parents(".input_2018").removeClass("error_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"),$(this).parents(".js-prs").removeClass("error_textarea_2018"))}),5==e&&$(".js-form-status-preorders .gloab2").each(function(e,t){""==$(this).val()||0==$(this).val()?($(this).parents(".input_2018").addClass("error_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),$(this).parents(".js-prs").addClass("error_textarea_2018"),i++):($(this).parents(".input_2018").removeClass("error_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"),$(this).parents(".js-prs").removeClass("error_textarea_2018"))}),6==e&&$(".js-form-status-preorders .gloab1").each(function(e,t){""==$(this).val()||0==$(this).val()?($(this).parents(".input_2018").addClass("error_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),$(this).parents(".js-prs").addClass("error_textarea_2018"),i++):($(this).parents(".input_2018").removeClass("error_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"),$(this).parents(".js-prs").removeClass("error_textarea_2018"))}),0==i?($(".js-add-status-preorder-x").hide(),$(".js-add-status-preorder-x").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: auto; margin: 0 auto;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("preorders","status_new","POST",0,"after_add_preorders_status_new",0,"vino_xd_preorders")):alert_message("error","Ошибка. Не все поля заполнены!")}function status_cash_check(){var e=$(this).find("i"),t=$(this).find("input").val(),i=$(this).parents(".buy_block_global").attr("id_buy");0!=t||e.is(".active_task_cb")?($(this).find("input").val(0),$(this).find("i").removeClass("active_task_cb"),AjaxClient("cash","check","GET","url="+window.location.href+"&id="+i+"&choice=0","AfterCheckCash",i,0,1)):($(this).find("input").val(1),$(this).find("i").addClass("active_task_cb"),AjaxClient("cash","check","GET","url="+window.location.href+"&id="+i+"&choice=1","AfterCheckCash",i,0,1))}function RoleCom(){var i="";if($(".js-checkbox-company").find("i").each(function(e,t){$(this).is(".active_task_cb")&&(i=""==i?$(this).next().val():i+","+$(this).next().val())}),""!=i){$(".js-group-cc").hide().before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>');var e=$(".js-panel-notif").attr("ipo");AjaxClient("users","role_company","GET","url="+window.location.href+"&id="+i+"&id_u="+e,"AfterRoleCom",i,0,1)}else $(".js-panel-cc").hide()}function RoleNotif(){var e=$(this).find("i");if(e.is(".active_task_cb")){$(".js-panel-notif").hide().before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>');var t=e.next().val(),i=$(".js-panel-notif").attr("ipo");AjaxClient("users","role_notif","GET","url="+window.location.href+"&id="+t+"&id_u="+i,"AfterRoleNotif",t,0,1)}else $(".js-panel-notif").hide()}function AfterRoleCom(e,t){$(".js-group-cc").prev().remove(),"ok"==e.status&&($(".js-group-cc").empty().append(e.echo),$(".js-group-cc").slideDown("slow"))}function AfterRoleNotif(e,t){$(".js-panel-notif").prev().remove(),"ok"==e.status&&($(".js-panel-notif").empty().append(e.echo),$(".js-panel-notif").slideDown("slow"))}function removeParam(e,t){var i=t.split("?"),a=i[0],n=[],s=-1!==t.indexOf("?")?i[1]:"";if(""!==s){for(var r=(n=s.split("&")).length-1;0<=r;--r)n[r].split("=")[0]===e&&n.splice(r,1);a=a+"?"+n.join("&")}return"?"==a.toString().slice(-1)&&(a=a.slice(0,-1)),a}function menubuttclick(){var e=$(this).find("a").attr("rel");if(1==e&&($(".trips_block_global .trips-b-number .choice-radio").find("i").addClass("active_task_cb"),basket_trips()),2==e&&($(".trips_block_global .trips-b-number .choice-radio").find("i").removeClass("active_task_cb"),basket_trips()),3==e||4==e||5==e){var a="",n=0;if($(".trips_block_global .trips-b-number .choice-radio").find(".active_task_cb").each(function(e,t){var i=$(this).parents(".trips_block_global").attr("id_trips");a=0==n?i:a+"."+i,n++}),""!=a)$(".menu_jjs .more_supply1").hide().before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("tours","status_more","GET","url="+window.location.href+"&id="+a+"&rel="+e,"AfterMoreStatus",a,0,1)}}function AfterMoreStatus(a,e){$(".menu_jjs .more_supply1").show(),$(".menu_jjs").find(".b_loading_small").remove();var n=parseInt(a.rel)-3;if("ok"==a.status){var t=e.split(".");$.each(t,function(e,t){var i=$(".trips_block_global[id_trips="+t+"]");i.find(".js-status-trips").removeClass("s_a_0 s_a_1 s_a_2"),i.find(".js-status-trips").addClass("s_a_"+n).empty().append(a.echo)}),$(".trips_block_global .trips-b-number .choice-radio").find("i").removeClass("active_task_cb"),basket_trips(),alert_message("ok","Статусы изменены")}}$(function(){$("body").on("change keyup input click",".js-add-group",AddGroup),$("body").on("change keyup input click",".js-dell-group",DellGroup)}),$(document).ready(function(){$("body").on("change keyup input click",".js-option-fix-com",option_fix),$("body").on("change keyup input click","#office_oo",office_oo),$("body").on("change keyup input click","#city_oo",city_oo),$("body").on("change keyup input click",".js-list-country-c",clinkS),$("body").on("change keyup input click",".js-more-cal-22",visibleCal),$("body").on("change keyup input click",".js-close-cash-day",close_cash_day),$("body").on("change keyup input click",".js-yes-cash-time",yes_cash_time),$("body").on("change keyup input click",".js-dell-promo",dell_promo),$("body").on("change keyup input click",".js-status-cash-more",status_cash_check),$("body").on("change keyup input click",".js-drop-aff",drop_aff),$("body").on("change keyup input click",".js-add-promocod",add_promocod),$("body").on("change keyup input click",".js-sogl-block",sogl_promocod),$(".js-form-add-tours").on("change keyup input click",".xexchange_rates",xexchange_rates1),$(".js-form-add-tours").on("change keyup input click",".xcost_to_1",xexchange_rates2),$(".js-form-add-tours").on("change","[name=id_exchange]",exchange_eico),$("body").on("change keyup input click",".js-test",test_a),$("body").on("change keyup input click",".js-edit-2020-user",no_rds_user),$("body").on("change",".js-status-preorder-yes",edit_status_2021),$("body").on("change keyup input click",".js-add-status-preorder-x",edit_status_pre),$("body").on("change keyup input click",".js-cancel-trips-x",cancel_trips_x),$("body").on("change keyup input click",".js-dell-cancel-trips-x",cancel_dell_trips_x),$("body").on("change keyup input click",".js-edit-org-2020",no_rds_org),$("body").on("change keyup input click",".js-add-search-preorders-kclient",add_preorders_plus),$("body").on("change keyup input click",".js-add-search-task-kclient",add_task_plus),$("body").on("change keyup input click",".js-task-preo",add_task_preo),$(".js-call-no-v").find(".drop").on("change keyup input click","li",list_number),$(".winner_2020").on("change keyup input click",".js-all-rating div",rating_list),$(".js-form-add-tours").on("change keyup input click",".js-xx_end_date",xx_end_date),$(".js-plus-filter").on("change keyup input click",".js-text-search-x",changesort_stock2),$(".js-plus-filter").on("change keyup input click",".js-text-search-xi",changesort_stock2i),$(".trips_block_global").on("change keyup input click",".js-exc-cost",exc_cost),$(".trips_block_global").on("change keyup input click",".js-chat-tours",chat_tours),$(".trips_block_global").on("change keyup input click",".js-form-cost",form_cost),$(".trips_block_global").on("change keyup input click",".js-issue-doc",form_doc),$(".trips_block_global").on("change keyup input click",".js-chat-tours-add",form_doc_chat),$(".trips_block_global").on("change keyup input click",".js-zame-tours",form_doc_rate),$("body").on("change keyup input click",".js-zame-preorders",form_doc_rate_pr),$("body").on("change keyup input click",".js-zame-contracts",form_doc_rate_pr11),$("body").on("change keyup input click",".js-status-preorders",update_status_preorder),$(".trips_block_global").on("change keyup input click",".js-ok-rate",ok_rate_form),$(".trips_block_global").on("change keyup input click",".js-ok-rate-doc",ok_rate_form_doc),$(".trips_block_global").on("change keyup input click",".js-ok-rate-chat",ok_rate_form_chat),$(".trips_block_global").on("change keyup input click",".js-ok-rate-chat-left",ok_rate_form_chat_left),$("body").on("change keyup input click",".js-ok-rate-chat-left-pr",ok_rate_form_chat_left_pr),$("body").on("change keyup input click",".js-ok-rate-chat-left-pr11",ok_rate_form_chat_left_pr11),$(".trips_block_global").on("change keyup input click",".js-rrate",js_rrate),$(".trips_block_global").on("change keyup input click",".js-add-comment-trips",{key:"008U"},add_comm_trips),$(".trips_block_global").on("change keyup input click",".js-exit-form-comm-trips",exit_comm_trips),$(".trips_block_global").on("change keyup input click",".js-add-comment-yes-trips",add_comment_yes_trips),$(".trips_block_global").on("change keyup input click",".js-com-trips-del",del_comm_trips),$("body").on("change keyup input click",".js-add-comment-preorders",{key:"008U"},add_comm_preorders),$("body").on("change keyup input click",".js-exit-form-comm-preorders",exit_comm_preorders),$("body").on("change keyup input click",".js-add-comment-yes-preorders",add_comment_yes_preorders),$("body").on("change keyup input click",".js-com-preorders-del",del_comm_preorders),$("body").on("change",".js-cash-where",cash_where_moo),$(".trips_block_global").on("change keyup input click",".js-srok-my",srok_my),$(".trips_block_global").on("change keyup input click",".js-all-price-trips",all_price_trips),$(".trips_block_global").on("change keyup input click",".js-menu-buybuy",js_menu_buybuy),$(".affiliates_block").on("change keyup input click",".js-buy-affiliates",js_buy_affilites),$(".trips_block_global").on("change keyup input click",".edit-trips-all1",edit_trips_all1),$(".trips_block_global").on("change keyup input click",".edit-trips-all2",edit_trips_all2),$(".trips_block_global").on("change keyup input click",".js-new-doc-trips",js_new_doc),$(".trips_block_global").on("change keyup input click",".js-buy-del",js_buy_del),$(".trips_block_global").on("change keyup input click",".js-buy-edit",js_buy_edit),$("body").on("click",".js-touroper-eye,.js-commi-eye",js_touroper_eye),$(".form_54_booking").on("change keyup input click","#name_b,#name_b1,#name_b1x,#password_b,#login_b,.radio_1,.js-checkbox-group",function(){$(".js-save-setting").show()}),$(".form_531_booking").on("change keyup input click","#name_b,#name_b1,#name_b1x,#password_b,#login_b,.radio_1,.js-checkbox-group",function(){$(".js-save-users").show()}),$(".form_532_booking").on("change keyup input click","#name_b,#name_b1,#name_b1x,#password_b,#login_b,.radio_1,.js-checkbox-group",function(){$(".js-add-users").show()}),$(".form_532_affiliates").on("change keyup input click","#name_b,#name_b1,#name_b1x,#sfera_b1,#telega_b1,#password_b,#login_b,.js-checkbox-group",function(){$(".js-add-affiliates").show()}),$("body").on("change keyup input click",".js-checkbox-group",CheckboxGroup),$(".menu-09").on("change keyup input click",".js-save-setting",save_setting),$(".menu-09").on("change keyup input click",".js-save-users",save_users_2020),$(".menu-09").on("change keyup input click",".js-add-users",add_users_2020),$(".menu-09").on("change keyup input click",".js-add-affiliates",add_affiliates_2020),$("body").on("change keyup input click",".js-users-block",UsersBlock),$("body").on("change keyup input click",".js-partner-block",PartnerBlock),$(".trips_block_global").on("change keyup input click",".js-status-trips",StatusTrips),$(".trips_block_global").on("change keyup input click",".js-update-cancel-trips",StatusTripsCancel),$(".trips_block_global").on("change keyup input click",".js-status-trips-more",st_div),$(".menu_jjs").on("change keyup input click",".menu_click",menuclick),$(".menu_jjs").on("change keyup input click",".js-menu-jjs-b",menubuttclick),$("body").on("change keyup input click",".js-checkbox-role",RoleNotif),$("body").on("change keyup input click",".js-checkbox-company",RoleCom),NumberBlockFile()});var menuclick=function(){var e=$(this).next(".menu_supply").find(".drops");e.is(".active_menu_s")?(e.removeClass("active_menu_s"),e.css("transform","scaleY(0)")):(e.addClass("active_menu_s"),e.css("transform","scaleY(1)"))};function st_div(){$(this).find("i").is(".active_task_cb")?$(this).find("i").removeClass("active_task_cb"):$(this).find("i").addClass("active_task_cb"),basket_trips()}function basket_trips(){var e=$(".trips_block_global .trips-b-number").find(".active_task_cb");0!=e.length?($(".menu_jjs").addClass("more-active-s"),$(".menu_jjs").find("i").empty().append(e.length)):($(".menu_jjs").removeClass("more-active-s"),$(".menu_jjs").find("i").empty())}function update_status_preorder(){var e=$(this).parents(".preorders_block_global").attr("id_pre");$(this).hide().before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 0px;left:0px;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("preorders","status","GET","url="+window.location.href+"&id="+e,"AfterStatusPreorders",e,0,1)}function StatusTrips(){var e=$(this).parents(".trips_block_global").attr("id_trips");$(this).hide().before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 0px;left:0px;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("tours","status","GET","url="+window.location.href+"&id="+e,"AfterStatusTrips",e,0,1)}function after_cancel_trips_x1(e,t){"ok"==e.status?(alert_message("ok","Аннуляция изменена"),UpdateTripsA(e.for_id,"buy",1),clearInterval(timerId),$.arcticmodal("close")):($(".js-form-cancel-trips").find(".js-dell-cancel-trips-x").show(),$(".js-form-cancel-trips").find(".b_loading_small").remove(),alert_message("error","Ошибка сохранения"))}function after_cancel_trips_x(e,t){"ok"==e.status?(alert_message("ok","Тур аннулирован"),UpdateTripsA(e.for_id,"buy",1),clearInterval(timerId),$.arcticmodal("close"),$(".trips_block_global[id_trips="+e.for_id+"]").addClass("cancel_trips")):($(".js-form-cancel-trips").find(".js-cancel-trips-x").show(),$(".js-form-cancel-trips").find(".b_loading_small").remove(),alert_message("error","Ошибка аннуляции"))}function after_add_preorders_status_new(e,t){var i=$(".preorders_block_global[id_pre="+e.next+"]").find(".trips-b-info");"ok"==e.status?(alert_message("ok","Статус изменен"),UpdatePreBiAdd(e.next),clearInterval(timerId),$.arcticmodal("close")):(i.find(".b_loading_small").remove(),i.find(".js-status-preorders").show(),alert_message("error","Ошибка! Попробуйте еще раз."))}function AfterStatusPreorders(e,t){var i=$(".preorders_block_global[id_pre="+t+"]").find(".trips-b-info");i.find(".js-status-preorders").show(),i.find(".b_loading_small").remove(),"ok"==e.status&&(0==e.next?(i.find(".js-status-preorders").removeClass("s_pr_1 s_pr_2 s_pr_3 s_pr_4"),i.find(".js-status-preorders").addClass("s_pr_"+e.status_admin).empty().append(e.echo),alert_message("ok","Статус изменен")):$.arcticmodal({type:"ajax",url:"forms/form_status_preorders.php?id="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}}))}function AfterStatusTrips(e,t){var i=$(".trips_block_global[id_trips="+t+"]");i.find(".js-status-trips").show(),i.find(".b_loading_small").remove(),"ok"==e.status&&(i.find(".js-status-trips").removeClass("s_a_0 s_a_1 s_a_2"),i.find(".js-status-trips").addClass("s_a_"+e.status_admin).empty().append(e.echo),alert_message("ok","Статус изменен"))}function PartnerBlock(){var e=$(this).attr("id-bdata");$(this).hide().before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("affiliates","ban","GET","url="+window.location.href+"&id="+e,"AfterPartnerBlock",e,0,1)}function UsersBlock(){var e=$(this).attr("id-bdata");$(this).hide().before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("users","ban","GET","url="+window.location.href+"&id="+e,"AfterUsersBlock",e,0,1)}function AfterPartnerBlock(e,t){var i=$(".js-partner-block[id-bdata="+t+"]");i.parents(".users_block_2020").find(".b_loading_small").remove(),i.show(),"ok"==e.status?0!=i.parents(".users_block_2020").length?"1"==e.party?(i.parents(".users_block_2020").removeClass("red-party"),i.removeClass("block-party"),alert_message("ok","Доступ открыт")):(i.parents(".users_block_2020").addClass("red-party"),i.addClass("block-party"),alert_message("ok","Партнер заблокирован")):autoReloadHak():alert_message("error","Ошибка!")}function AfterUsersBlock(e,t){var i=$(".js-users-block[id-bdata="+t+"]");i.parents(".users_block_2020").find(".b_loading_small").remove(),i.show(),"ok"==e.status?0!=i.parents(".users_block_2020").length?"1"==e.party?(i.parents(".users_block_2020").removeClass("red-party"),i.removeClass("block-party"),alert_message("ok","Доступ открыт")):(i.parents(".users_block_2020").addClass("red-party"),i.addClass("block-party"),alert_message("ok","Участник заблокирован")):autoReloadHak():alert_message("error","Ошибка!")}function add_affiliates_2020(){$(this).find("span").hide(),$(this).find("span").before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>');var e=0;$("#name_b,#name_b1,#login_b,#password_b").removeClass("error_formi"),$("#name_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#name_b1").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#login_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#password_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),""==$("#name_b").val()&&(alert_message("error","Заполните ФИО"),e++),""==$("#name_b1x").val()&&(alert_message("error","Заполните краткое имя"),e++),""==$("#name_b1").val()&&(alert_message("error","Телефон для связи не заполнен"),e++),""==$("#login_b").val()&&(alert_message("error","Логин сотрудника не заполнен"),e++),""==$("#password_b").val()&&(alert_message("error","Пароль для сотрудника не заполнен"),e++),$(".js-company-xx i").is(".active_task_cb")||(alert_message("error","Заполните Организацию для  сотрудника"),e++),0!=e?($(this).find("span").show(),$(this).find(".b_loading_small").remove()):$("#lalala_add_form").submit()}function add_users_2020(){$(this).find("span").hide(),$(this).find("span").before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>');var e=0;$("#name_b,#name_b1,#login_b,#password_b").removeClass("error_formi"),$("#name_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#name_b1").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#login_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#password_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),""==$("#name_b").val()&&(alert_message("error","Заполните ФИО"),e++),""==$("#name_b1x").val()&&(alert_message("error","Заполните краткое имя"),e++),""==$("#name_b1").val()&&(alert_message("error","Телефон для связи не заполнен"),e++),""==$("#login_b").val()&&(alert_message("error","Логин сотрудника не заполнен"),e++),""==$("#password_b").val()&&(alert_message("error","Пароль для сотрудника не заполнен"),e++),$(".js-role-x i").is(".active_task_cb")||(alert_message("error","Заполните должность сотрудника"),e++),$(".js-company-xx i").is(".active_task_cb")||(alert_message("error","Заполните Организацию для  сотрудника"),e++),0!=e?($(this).find("span").show(),$(this).find(".b_loading_small").remove()):$("#lalala_add_form").submit()}function save_users_2020(){$(this).find("span").hide(),$(this).find("span").before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>');var e=0;$("#name_b,#name_b1,#login_b,#password_b").removeClass("error_formi"),$("#name_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#name_b1").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#login_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#password_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),""==$("#name_b").val()&&(alert_message("error","Заполните ФИО"),e++),""==$("#name_b1x").val()&&(alert_message("error","Заполните краткое имя"),e++),""==$("#name_b1").val()&&(alert_message("error","Телефон для связи не заполнен"),e++),""==$("#login_b").val()&&(alert_message("error","Логин сотрудника не заполнен"),e++),$(".js-role-x i").is(".active_task_cb")||(alert_message("error","Заполните должность сотрудника"),e++),0!=e?($(this).find("span").show(),$(this).find(".b_loading_small").remove()):$("#lalala_add_form").submit()}function save_setting(){$(this).find("span").hide(),$(this).find("span").before('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>');var e=0;$("#name_b,#name_b1,#login_b,#password_b").removeClass("error_formi"),$("#name_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#name_b1").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#login_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),$("#password_b").parents(".ok-input-title-2019").removeClass("error_formi_2019"),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),$("#name_b").parents(".ok-input-title-2019").addClass("error_formi_2019"),e++),""==$("#name_b1").val()&&($("#name_b1").addClass("error_formi"),$("#name_b1").parents(".ok-input-title-2019").addClass("error_formi_2019"),e++),""==$("#name_b1x").val()&&($("#name_b1x").addClass("error_formi"),$("#name_b1x").parents(".ok-input-title-2019").addClass("error_formi_2019"),e++),""==$("#login_b").val()&&($("#login_b").addClass("error_formi"),$("#login_b").parents(".ok-input-title-2019").addClass("error_formi_2019"),e++),0!=e?alert_message("error","Не все поля заполнены"):$("#lalala_add_form").submit()}function CheckboxGroup(){var e=$(this).find("input").first().val(),t=$(this).parents(".js-group-c"),i=0;$(this).find("i").is(".active_task_cb")?($(this).find("i").removeClass("active_task_cb"),$(this).find("input").last().val(0),i=1):($(this).find("i").addClass("active_task_cb"),$(this).find("input").last().val(1));var a="";if(t.find(".js-checkbox-group").each(function(e,t){$(this).find("i").is(".active_task_cb")&&(a=""==a?$(this).find("input").first().val():a+","+$(this).find("input").first().val())}),t.is(".js-tolko-one")&&(t.find("i").removeClass("active_task_cb"),t.find(".js-checkbox-group").each(function(e,t){$(this).find("input").last().val(0)}),0==i&&($(this).find("i").addClass("active_task_cb"),$(this).find("input").last().val(1))),t.is(".js-one-all-select")){var n=t.find(".js-checkbox-group").first();if(""==a)return void n.trigger("click");if($(this).find("i").is(".active_task_cb")&&0==e&&""!=a&&"0"!=a&&(a=n.find("a").attr("rel"),t.find("i").removeClass("active_task_cb"),t.find(".js-checkbox-group").each(function(e,t){$(this).find("input").last().val(0)}),n.find("i").addClass("active_task_cb"),n.find("input").last().val(1)),0!=e){var s=t.find(".js-checkbox-group").length,r=t.find(".active_task_cb").length;parseInt(r+1)==s&&(t.find("i").removeClass("active_task_cb"),t.find(".js-checkbox-group").each(function(e,t){$(this).find("input").last().val(0)}),n.find("i").addClass("active_task_cb"),n.find("input").last().val(1))}if(""!=a&&"0"!=a&&n.find("i").is(".active_task_cb"))return void n.trigger("click")}}function rating_list(){var e=$(this).attr("id_r"),t=$(this).parents(".winner_2020");t.find(".js-rating").slideUp("slow"),t.find(".js-rating[idrr="+e+"]").slideDown("slow")}function sroki_yes(){var e=$(".js-form-srok-trips").find("[name=id]").val(),t=$(".js-form-srok-trips").find("[name=my]").val();if(0==t){var i=$(".trips_block_global[id_trips="+e+"]").find(".trips-b-user .gr-50").attr("proccs");$(".js-form-srok-trips .sroki-tabl").each(function(e,t){parseFloat($(this).find(".js-proc-form-x").val())<=parseFloat(i)?$(this).addClass("yes-buy-y"):$(this).removeClass("yes-buy-y")})}if(1==t){i=$(".trips_block_global[id_trips="+e+"]").find(".trips-b-operator .gr-50").attr("proccs");$(".js-form-srok-trips .sroki-tabl").each(function(e,t){parseFloat($(this).find(".js-proc-form-x").val())<=parseFloat(i)?$(this).addClass("yes-buy-y"):$(this).removeClass("yes-buy-y")})}}function all_price_trips(){var e=$(this).parents(".trips_block_global").attr("id_trips");$.arcticmodal({type:"ajax",url:"forms/form_edit_price.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function plane_edit(){$.arcticmodal({type:"ajax",url:"forms/form_edit_plane.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function srok_my(){var e=$(this).parents(".trips_block_global").attr("id_trips"),t=$(this).attr("my");$.arcticmodal({type:"ajax",url:"forms/form_edit_srok.php?id="+e+"&my="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function clinkS(){var e=$(this).attr("link");jQuery.scrollTo("#"+e+"-bb",1e3,{offset:-80})}function AfterZero(e,t){}function del_comm_preorders(e){var t=$(this).parents(".comm-preorders-block").attr("rel_notibss"),i="url="+window.location.href+"&id="+$(this).parents(".preorders_block_global").attr("id_pre")+"&sel="+t;$(".comm-preorders-block[rel_notibss="+t+"]").slideUp("slow"),AjaxClient("preorders","dell_comm","GET",i,"AfterZero",t,0,1),alert_message("ok","Комментарий к обращению удален")}function dell_promo(e){var t=$(this).parents(".promo-block").attr("promo"),i="url="+window.location.href+"&sel="+t;$(".promo-block[promo="+t+"]").slideUp("slow"),AjaxClient("affiliates","dell_promo","GET",i,"AfterDellPromo",t,0,1)}function del_comm_trips(e){var t=$(this).parents(".comm-trips-block").attr("rel_notibss"),i="url="+window.location.href+"&id="+$(this).parents(".trips_block_global").attr("id_trips")+"&sel="+t;$(".comm-trips-block[rel_notibss="+t+"]").slideUp("slow"),AjaxClient("tours","dell_comm","GET",i,"AfterZero",t,0,1),alert_message("ok","Комментарий к туру удален")}function test_a(){alert("!"),AjaxClient("test","test","GET","url="+window.location.href+"&id=34&text="+ec("привет"),"AfterTest",3,0,1)}function add_comment_yes_preorders(e){var t=0,i=$(this).parents(".js-ssay");if(i.find(".div_textarea_say").removeClass("error_textarea_2018"),""==i.find(".js-comment-add-preorders-v").val()&&(i.find(".div_textarea_say").addClass("error_textarea_2018"),t=1),0==t){var a=$(this).parents(".preorders_block_global").attr("id_pre"),n="url="+window.location.href+"&id="+a+"&text="+ec(i.find(".js-comment-add-preorders-v").val());i.find(".js-add-comment-yes-preorders").hide(),i.find(".js-exit-form-comm-preorders").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: auto;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("preorders","add_comment","GET",n,"AfterAddCommentPreorders",a,0,1)}else{var s=$(".js-add-say").text();$(".js-add-say").empty().append("Ошибка заполнения!"),$(".js-add-say").addClass("new-say1"),setTimeout(function(){$(".js-add-say").removeClass("new-say1"),$(".js-add-say").empty().append(s)},4e3)}}function add_comment_yes_trips(e){var t=0,i=$(this).parents(".js-ssay");if(i.find(".div_textarea_say").removeClass("error_textarea_2018"),""==i.find(".js-comment-add-trips-v").val()&&(i.find(".div_textarea_say").addClass("error_textarea_2018"),t=1),0==t){var a=$(this).parents(".trips_block_global").attr("id_trips"),n="url="+window.location.href+"&id="+a+"&text="+ec(i.find(".js-comment-add-trips-v").val());i.find(".js-add-comment-yes-trips").hide(),i.find(".js-exit-form-comm-trips").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: auto;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("tours","add_comment","GET",n,"AfterAddCommentTrips",a,0,1)}else{var s=$(".js-add-say").text();$(".js-add-say").empty().append("Ошибка заполнения!"),$(".js-add-say").addClass("new-say1"),setTimeout(function(){$(".js-add-say").removeClass("new-say1"),$(".js-add-say").empty().append(s)},4e3)}}function AfterDellPromo(e,t){"ok"==e.status?alert_message("ok","Промокод Удален"):(alert_message("error","Ошибка"),$(".promo-block[promo="+t+"]").slideDown("slow"))}function AfterAddCommentPreorders(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){var i=$(".preorders_block_global[id_pre="+t+"]").find(".js-ssay");i.find(".js-add-comment-yes-preorders").show(),i.find(".js-exit-form-comm-preorders").show(),i.find(".b_loading_small").remove(),i.slideUp("slow"),i.prev().slideDown("slow"),i.find(".js-comment-add-preorders-v").val(""),i.after(e.echo),setTimeout(function(){i.parents(".px_bg_trips").find(".new-say-com-t ").removeClass("new-say-com-t ")},4e3),ToolTip(),i.find(".js-message-com-t").slideUp("slow"),alert_message("ok","Комментарий к обращению добавлен")}}function AfterAddCommentTrips(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){var i=$(".trips_block_global[id_trips="+t+"]").find(".js-ssay");i.find(".js-add-comment-yes-trips").show(),i.find(".js-exit-form-comm-trips").show(),i.find(".b_loading_small").remove(),i.slideUp("slow"),i.prev().slideDown("slow"),i.find(".js-comment-add-trips-v").val(""),i.after(e.echo),setTimeout(function(){i.parents(".px_bg_trips").find(".new-say-com-t ").removeClass("new-say-com-t ")},4e3),ToolTip(),i.find(".js-message-com-t").slideUp("slow"),alert_message("ok","Комментарий к туру добавлен")}}function exit_comm_preorders(e){$(this).parents(".js-ssay").slideUp("slow"),$(this).parents(".js-ssay").prev().slideDown("slow")}function exit_comm_trips(e){$(this).parents(".js-ssay").slideUp("slow"),$(this).parents(".js-ssay").prev().slideDown("slow")}function add_comm_preorders(e){$(this).slideUp("slow"),$(this).next().slideDown("slow")}function add_comm_trips(e){$(this).slideUp("slow"),$(this).next().slideDown("slow")}function js_buy_edit(){var e=$(this).parents(".trips_block_global").attr("id_trips"),t=$(this).parents(".buy_block_global").attr("id_buy");$.arcticmodal({type:"ajax",url:"forms/form_edit_buy.php?id="+e+"&id_buy="+t,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_buy_transfer_pre(){var e=$(this).parents(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_transfer_buy_pre.php?id_buy="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_buy_edit_pre(){var e=$(this).parents(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_edit_buy_pre.php?id_buy="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_buy_edit_fin(){var e=$(this).parents(".buy_block_global").attr("id_buy");$.arcticmodal({type:"ajax",url:"forms/form_edit_buy_fin.php?id_buy="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_buy_del_pre(){var e=$(this).parents(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_dell_buy_pre.php?id_buy="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_buy_del_fin(){var e=$(this).parents(".buy_block_global").attr("id_buy");$.arcticmodal({type:"ajax",url:"forms/form_dell_buy_fin.php?id_buy="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_buy_del_cash(){var e=$(this).parents(".buy_block_global").attr("id_buy");$.arcticmodal({type:"ajax",url:"forms/form_dell_buy_cash.php?id_buy="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_buy_del(){var e=$(this).parents(".trips_block_global").attr("id_trips"),t=$(this).parents(".buy_block_global").attr("id_buy");$.arcticmodal({type:"ajax",url:"forms/form_dell_buy.php?id="+e+"&id_buy="+t,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_new_doc(){var e=$(this).parents(".trips_block_global").attr("id_trips");$(this).hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("tours","new_doc","GET","url="+window.location.href+"&id="+e,"Afterjs_new_doc",e,0,1)}function changesort_stock2i(){""!=$(this).val()?$(this).next().show():$(this).next().hide();var e=$("#name_stock_search_tours").val(),t=$("#name_stock_search_toursi").val();""!=e||""!=t?($(".js--sort").addClass("greei_input"),$(".js--sort").find("input").prop("readonly",!0)):($(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"))}function changesort_stock2(){""!=$(this).val()?$(this).next().show():$(this).next().hide();var e=$("#name_stock_search_tours").val(),t=$("#name_stock_search_toursi").val();""!=e||""!=t?($(".js--sort").addClass("greei_input"),$(".js--sort").find("input").prop("readonly",!0)):($(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"))}function js_add_cash_form(){var e=$(this).closest(".box-modal");e.find(".js-add-cash-form").removeClass("select-cash-form"),$(this).addClass("select-cash-form");var t=$(this).attr("foo").split(".");0!=t[2]?e.find(".js-sh").show():e.find(".js-sh").hide(),e.find(".js-ot .js-visible-mt-x a[rel="+t[0]+"]").parents("li").trigger("click"),e.find(".js-ky .js-visible-mt-x a[rel="+t[1]+"]").parents("li").trigger("click")}function js_add_cash(){var e="";if($(this).is("[temp]"))e="?id="+$(this).attr("temp");$.arcticmodal({type:"ajax",url:"forms/form_add_cash.php"+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function js_add_finance(){$.arcticmodal({type:"ajax",url:"forms/form_add_buy_fin.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function edit_trips_all1(){var e=$(this).parents(".trips_block_global").attr("id_trips");$.arcticmodal({type:"ajax",url:"forms/form_cancel_trips.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function edit_trips_all2(){var e=$(this).parents(".trips_block_global").attr("id_trips");$.arcticmodal({type:"ajax",url:"forms/form_cancel_no_trips.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function js_buy_affilites(){var e=$(this).parents(".affiliates_block").attr("op_rel");$.arcticmodal({type:"ajax",url:"forms/form_add_buy_affiliates.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function js_menu_buybuy(){var e=$(this).parents(".trips_block_global").attr("id_trips");$.arcticmodal({type:"ajax",url:"forms/form_add_buy.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function js_rrate(){$(this).parents(".js-trips-comm").find(".form-rate-ok").addClass("show-form-rate")}function ok_rate_form_doc(e){var t=$(this).parents(".form-rate-ok").find("[name=doc_date]").val();"00.00.0000"!=t&&""!=jQuery.trim(t)?($(this).parents(".issue-block").find(".js-issue-doc").removeClass("red-jj"),$(this).parents(".issue-block").find(".js-issue-doc").addClass("green-jj"),$(this).parents(".issue-block").find(".js-issue-doc").empty().append("выдан "+t)):($(this).parents(".issue-block").find(".js-issue-doc").addClass("red-jj"),$(this).parents(".issue-block").find(".js-issue-doc").removeClass("green-jj"),$(this).parents(".issue-block").find(".js-issue-doc").empty().append("не выдан")),$(this).parents(".form-rate-ok").removeClass("show-form-rate"),e.stopPropagation();var i=$(this).parents(".trips_block_global").attr("id_trips");AjaxClient("tours","issue_doc","GET","url="+window.location.href+"&id="+i+"&date="+t,"After_ok_rate_form_doc",i,0,1)}function ok_rate_form_chat_left_pr11(e){var t=$(this).parents(".form-rate-ok1").find("[name=chat_text]").val();$(this).parents(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents(".preorders_block_global").find(".js-zame-preorders").hide();var i=$(this).parents(".doc_block_contracts").attr("id_pre");$(this).parents(".form-rate-ok1").find(".js-prs").removeClass("error_textarea_2018"),create_post_form("url="+window.location.href+"&id="+i+"&rate="+t,"form_body_action"),AjaxClient("contracts","add_rate","POST",0,"After_ok_rate_form_chat_left_pr11",i,"form_body_action",1),$("#form_body_action").remove(),e.stopPropagation()}function visibleCal(){$("#date_table").show(),$(".bookingBox_range").css({display:"block"})}function ok_rate_form_chat_left_pr(e){var t=$(this).parents(".form-rate-ok1").find("[name=chat_text]").val();if(""!=jQuery.trim(t)){$(this).parents(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents(".preorders_block_global").find(".js-zame-preorders").hide();var i=$(this).parents(".preorders_block_global").attr("id_pre");$(this).parents(".form-rate-ok1").find(".js-prs").removeClass("error_textarea_2018"),create_post_form("url="+window.location.href+"&id="+i+"&rate="+t,"form_body_action"),AjaxClient("preorders","add_rate","POST",0,"After_ok_rate_form_chat_left_pr",i,"form_body_action",1),$("#form_body_action").remove(),e.stopPropagation()}else $(this).parents(".form-rate-ok1").find(".js-prs").addClass("error_textarea_2018"),alert_message("error","Заполните заметку по обращению"),e.stopPropagation()}function ok_rate_form_chat_left(e){var t=$(this).parents(".form-rate-ok1").find("[name=chat_text]").val();if(""!=jQuery.trim(t)){$(this).parents(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents(".trips_block_global").find(".js-zame-tours").hide();var i=$(this).parents(".trips_block_global").attr("id_trips");$(this).parents(".form-rate-ok1").find(".js-prs").removeClass("error_textarea_2018"),create_post_form("url="+window.location.href+"&id="+i+"&rate="+t,"form_body_action"),AjaxClient("tours","add_rate","POST",0,"After_ok_rate_form_chat_left",i,"form_body_action",1),$("#form_body_action").remove(),e.stopPropagation()}else $(this).parents(".form-rate-ok1").find(".js-prs").addClass("error_textarea_2018"),alert_message("error","Заполните заметку по туру"),e.stopPropagation()}function ok_rate_form_chat(e){var t=$(this).parents(".form-rate-ok").find("[name=chat_text]").val();if(""!=jQuery.trim(t)){$(this).parents(".form-rate-ok").removeClass("show-form-rate"),$(this).parents(".trips_block_global").find(".js-chat-tours-add").hide();var i=$(this).parents(".trips_block_global").attr("id_trips");$(this).parents(".form-rate-ok").find(".js-prs").removeClass("error_textarea_2018"),create_post_form("url="+window.location.href+"&id="+i+"&.chat="+t,"form_body_action"),AjaxClient("tours","add_chat","POST",0,"After_ok_rate_form_chat",i,"form_body_action",1),$("#form_body_action").remove(),e.stopPropagation()}else $(this).parents(".form-rate-ok").find(".js-prs").addClass("error_textarea_2018"),alert_message("error","Заполните впечатление по туру"),e.stopPropagation()}function ok_rate_form(e){var t=$(this).parents(".form-rate-ok").find("[name=exchange_rates]").val();if(0!=t&&""!=t){$(this).parents(".form-rate-ok").find(".input_2018").removeClass("error_2018"),$(this).parents(".js-form-cost").attr("rate",t);$(this).parents(".js-trips-comm").find(".eye-wall-trips").addClass("eye-my"),$(this).parents(".js-trips-comm").find(".calculate-balance").removeClass("eye-my");var i=$(this).parents(".js-trips-comm"),a=$(this).parents(".form-rate-ok").attr("balance"),n=parseFloat(t);i.find(".cacl-rrate").empty().append($.number(n.toFixed(2),2,"."," ")).show();var s=parseFloat(ctrim(a))*parseFloat(ctrim(t));s=$.number(s.toFixed(2),2,"."," ");i.find(".js-all-cost").addClass("hide-cost"),i.find(".js-all-cost.rate_yyy").empty().append(s),i.find(".js-all-cost.rate_yyy").removeClass("hide-cost"),i.find(".cost_all_trips").addClass("hide-cost"),i.find(".cost_all_trips .rate_yyy").parents(".cost_all_trips").removeClass("hide-cost"),$(this).parents(".form-rate-ok").removeClass("show-form-rate"),e.stopPropagation()}else $(this).parents(".form-rate-ok").find(".input_2018").addClass("error_2018")}function form_doc(){if(!$(this).parents(".issue-block").find(".form-rate-ok").is(".show-form-rate")){var e=$(this).parents(".issue-block").attr("doc");""==e&&0==e||$(this).parents(".issue-block").find(".form-rate-ok .js-docc").val(e),0!=$(this).parents(".issue-block").find(".form-rate-ok").length&&($(".form-rate-ok").removeClass("show-form-rate"),$(this).parents(".issue-block").find(".form-rate-ok").addClass("show-form-rate")),input_2018()}}function form_doc_rate_pr11(){$(this).parents(".trips-b-number").find(".form-rate-ok1").is(".show-form-rate1")||(0!=$(this).parents(".trips-b-number").find(".form-rate-ok1").length&&($(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents(".trips-b-number").find(".form-rate-ok1").addClass("show-form-rate1")),input_2018())}function form_doc_rate_pr(){$(this).parents(".trips-b-number").find(".form-rate-ok1").is(".show-form-rate1")||(0!=$(this).parents(".trips-b-number").find(".form-rate-ok1").length&&($(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents(".trips-b-number").find(".form-rate-ok1").addClass("show-form-rate1")),input_2018())}function form_doc_rate(){$(this).parents(".trips-b-number").find(".form-rate-ok1").is(".show-form-rate1")||(0!=$(this).parents(".trips-b-number").find(".form-rate-ok1").length&&($(".form-rate-ok1").removeClass("show-form-rate1"),$(this).parents(".trips-b-number").find(".form-rate-ok1").addClass("show-form-rate1")),input_2018())}function form_doc_chat(){$(this).parents(".trips-b-number").find(".form-rate-ok").is(".show-form-rate")||(0!=$(this).parents(".trips-b-number").find(".form-rate-ok").length&&($(".form-rate-ok").removeClass("show-form-rate"),$(this).parents(".trips-b-number").find(".form-rate-ok").addClass("show-form-rate")),input_2018())}function create_post_form(e,t){var i=e.split("&"),n=document.createElement("form");n.setAttribute("action","/"),n.setAttribute("method","POST"),n.setAttribute("id",t),n.setAttribute("class","none"),$.each(i,function(e,t){var i,a=t.split("=");"."==a[0][0]?((i=document.createElement("textarea")).setAttribute("name",a[0].slice(1)),i.value=a[1],n.appendChild(i)):((i=document.createElement("input")).setAttribute("type","text"),i.setAttribute("name",a[0]),i.setAttribute("value",a[1]),n.appendChild(i))}),$("body").append(n)}function no_rds_user(){$(".js-tabs_0").hide(),$(".jipp_fll").slideDown("slow"),$(".jipp_fll_start").slideUp("slow"),ToolTip(),$(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli),$("#typesay").unbind("change",changesay),$("#typesay").bind("change",changesay),input_2018(),$(".date_picker_x").inputmask("datetime",{mask:"1.2.y",placeholder:"dd.mm.yyyy",separator:".",alias:"dd.mm.yyyy"})}function no_rds_org(){$(".js-tabs_0").hide(),$(".jipp_fll").slideDown("slow"),$(".jipp_fll_start").slideUp("slow"),ToolTip(),$(".reda_org_comment").autoResize({extraSpace:10}).trigger("keyup"),$(".js-padej_woo_end").autoResize({extraSpace:10}).trigger("keyup"),$(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli),$("#typesay").unbind("change",changesay),$("#typesay").bind("change",changesay),input_2018(),$(".date_picker_x").inputmask("datetime",{mask:"1.2.y",placeholder:"dd.mm.yyyy",separator:".",alias:"dd.mm.yyyy"})}function form_cost(){if(!$(this).find(".form-rate-ok").is(".show-form-rate")){var e=$(this).find(".eye-my").attr("code"),t=$(this).parents(".js-trips-comm");if(!$(this).find(".eye-my").is(".calculate-balance"))return $(this).find(".eye-wall-trips").addClass("eye-my"),$(this).find("[code="+e+"]").removeClass("eye-my"),t.find(".js-all-cost").addClass("hide-cost"),t.find(".js-all-cost.rate_"+e).removeClass("hide-cost"),t.find(".cost_all_trips").addClass("hide-cost"),t.find(".cost_all_trips .rate_"+e).parents(".cost_all_trips").removeClass("hide-cost"),!1;var i=$(this).attr("rate");""==i&&0==i?0!=$(this).find(".form-rate-ok").length&&($(".form-rate-ok").removeClass("show-form-rate"),$(this).find(".form-rate-ok").addClass("show-form-rate")):(t.find(".js-all-cost").addClass("hide-cost"),t.find(".js-all-cost.rate_"+e).removeClass("hide-cost"),t.find(".cost_all_trips").addClass("hide-cost"),t.find(".cost_all_trips .rate_"+e).parents(".cost_all_trips").removeClass("hide-cost"),$(this).find(".eye-wall-trips").addClass("eye-my"),$(this).find("[code="+e+"]").removeClass("eye-my"))}}function chat_tours(){var e=$(this).parents(".trips_block_global").find(".chat-tours");e.is(":visible")?e.hide("slow"):(e.show("slow"),jQuery.scrollTo(e,1e3,{offset:-120}))}function exc_cost(){var e=$(this).find(".eye-my").attr("code");$(this).find(".eye-wall-trips").addClass("eye-my"),$(this).find("[code="+e+"]").removeClass("eye-my");var t=$(this).parents(".js-trips-comm");t.find(".js-all-cost").addClass("hide-cost"),t.find(".js-all-cost.rate_"+e).removeClass("hide-cost"),t.find(".cost_all_trips").addClass("hide-cost"),t.find(".cost_all_trips").find(".rate_"+e).parents(".cost_all_trips").removeClass("hide-cost")}function AddFormPlane(){var i=0;$(".js-finance-operation .gloab").each(function(e,t){""==$(this).val()?($(this).parents(".input_2018").find(".error-message").empty().append("поле не заполнено"),$(this).parents(".input_2018").addClass("required_in_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),i++):($(this).parents(".input_2018").removeClass("required_in_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"))}),0==i?($(".js-finance-operation  .js-add-plane-form").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(".js-finance-operation .message-form").hide(),AjaxClient("finance","plane_users","POST",0,"AfterAddFormPlane",0,"js-form-plane-new",1)):0!=i&&(jQuery.scrollTo(".required_in_2018:first",1e3,{offset:-70}),alert_message("error","Не все поля заполнены"))}function AddFormTender(){var i=0,e=0;$(".js-form-tender-new .gloab").each(function(e,t){""==$(this).val()?($(this).parents(".input_2018").find(".error-message").empty().append("поле не заполнено"),$(this).parents(".input_2018").addClass("required_in_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),i++):($(this).parents(".input_2018").removeClass("required_in_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"))}),0==i&&(""==$(".tot_buy_id").val()?(e++,alert_message("error","Выберите покупателя тура"),jQuery.scrollTo(".js-buy-turs-client",1e3,{offset:-120})):""==$(".tot_fly_id").val()&&(e++,alert_message("error","Выберите туристов"),jQuery.scrollTo(".js-fly-turs-client",1e3,{offset:-120}))),1==$("#kakay_com").val()&&$(".js-form-tender-new .gloab_fix").each(function(e,t){""==$(this).val()?($(this).parents(".input_2018").find(".error-message").empty().append("поле не заполнено"),$(this).parents(".input_2018").addClass("required_in_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),i++):($(this).parents(".input_2018").removeClass("required_in_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"))});var t=$(".js-to_2_x").val();""!=t&&0!=t&&$(".js-form-tender-new .gloab_aaa").each(function(e,t){""==$(this).val()?($(this).parents(".input_2018").find(".error-message").empty().append("поле не заполнено"),$(this).parents(".input_2018").addClass("required_in_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),i++):($(this).parents(".input_2018").removeClass("required_in_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"))}),0==i&&0==e?($(".js-form-tender-new  .js-add-tender-form").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(".js-form-tender-new .message-form").hide(),AjaxClient("tours","add","POST",0,"AfterAddFormTender",0,"js-form-tender-new",1)):0!=i&&(jQuery.scrollTo(".required_in_2018:first",1e3,{offset:-70}),alert_message("error","Не все поля заполнены"))}function EditFormTender(){var i=0,e=0;$(".js-form-tender-edit .gloab").each(function(e,t){""==$(this).val()?($(this).parents(".input_2018").find(".error-message").empty().append("поле не заполнено"),$(this).parents(".input_2018").addClass("required_in_2018"),$(this).parents(".list_2018").addClass("required_in_2018"),i++):($(this).parents(".input_2018").removeClass("required_in_2018"),$(this).parents(".list_2018").removeClass("required_in_2018"))}),0==i&&(""==$(".tot_buy_id").val()?(e++,alert_message("error","Выберите покупателя тура"),jQuery.scrollTo(".js-buy-turs-client",1e3,{offset:-120})):""==$(".tot_fly_id").val()&&(e++,alert_message("error","Выберите туристов"),jQuery.scrollTo(".js-fly-turs-client",1e3,{offset:-120}))),0==i&&0==e?($(".js-form-tender-edit  .js-edit-tender-form").hide().after('<div class="b_loading_small" style="position:relative; width: 40px;padding-top: 7px;top: auto;right: auto;left: calc(50% - 20px);"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(".js-form-tender-edit .message-form").hide(),AjaxClient("tours","edit","POST",0,"AfterEditFormTender",0,"js-form-tender-edit",1)):0!=i&&(jQuery.scrollTo(".required_in_2018:first",1e3,{offset:-70}),alert_message("error","Не все поля заполнены"))}function After_ok_rate_form_chat_left_pr11(e,t){"ok"==e.status?(0==parseInt(e.flag)?alert_message("ok","Заметка по договору добавлена"):alert_message("ok","Заметка по договору удалена"),$(".doc_block_contracts[id_pre="+t+"]").after(e.echo),$(".new-say").prev(".doc_block_contracts").remove(),setTimeout(function(){$(".new-say ").removeClass("new-say")},4e3)):($(".doc_block_contracts[id_pre="+t+"]").find(".js-zame-contracts").show(),alert_message("error","Ошибка добавления"))}function After_ok_rate_form_chat_left_pr(e,t){"ok"==e.status?(alert_message("ok","Заметка по туру добавлена"),UpdatePreBiAdd(t)):($(".preorders_block_global[id_pre="+t+"]").find(".js-zame-preorders").show(),alert_message("error","Ошибка добавления"))}function After_ok_rate_form_chat_left(e,t){"ok"==e.status?(alert_message("ok","Заметка по туру добавлена"),UpdateTripsA(t,"buy",1)):($(".trips_block_global[id_trips="+t+"]").find(".js-zame-tours").show(),alert_message("error","Ошибка добавления"))}function After_ok_rate_form_chat(e,t){"ok"==e.status?(alert_message("ok","Впечатление по туру добавлено"),UpdateTripsA(t,"buy",1)):($(".trips_block_global[id_trips="+t+"]").find(".js-chat-tours-add").show(),alert_message("error","Ошибка добавления"))}function After_ok_rate_form_doc(e,t){if("ok"!=e.status){var i=$(".trips_block_global[id_trips="+t+"]").find(".issue-block").attr("doc"),a=$(".trips_block_global[id_trips="+t+"]").find(".issue-block .js-issue-doc");""!=i?(a.empty().append("выдан "+i),a.removeClass("red-jj"),a.addClass("green-jj")):(a.empty().append("не выдан"),a.addClass("red-jj"),a.removeClass("green-jj"))}else $(".trips_block_global[id_trips="+t+"]").find(".issue-block").attr("doc",e.download)}function AfterUpdateTripsA(e,t){"ok"==e.status&&($(".trips_block_global[id_trips="+t+"]").find(".js-update-block-trips").empty().append(e.query),$(".trips_block_global[id_trips="+t+"]").find(".js-tabs-menu").empty().append(e.echo),1==e.upload_mm&&$(".trips_block_global[id_trips="+t+"]").find(".px_bg_trips").empty().append(e.echo_more),$(".trips_block_global[id_trips="+t+"]").find(".circlestat").circliful(),$(".date_picker_xe").inputmask("datetime",{mask:"1.2.y",placeholder:"dd.mm.yyyy",separator:".",alias:"dd.mm.yyyy"}))}function Afterjs_new_doc(i,e){if("ok"==i.status){$(".trips_block_global[id_trips="+e+"]").find(".px_bg_trips").prepend(i.download);var a=$(".trips_block_global[id_trips="+e+"] .vers-doc-color").length,n=a;$(".trips_block_global[id_trips="+e+"] .vers-doc-color").empty().removeClass("green-trips red-trips"),setTimeout(function(){$(".new-say-doc ").removeClass("new-say-doc")},4e3),$(".trips_block_global[id_trips="+e+"] .vers-doc-color").each(function(e,t){$(this).append("(Версия №"+n+")"),n==a?$(this).addClass("green-trips"):$(this).addClass("red-trips"),n--}),$(".trips_block_global[id_trips="+e+"]").find(".px_bg_trips .b_loading_small").remove(),$(".trips_block_global[id_trips="+e+"]").find(".js-new-doc-trips").show()}else $(".trips_block_global[id_trips="+e+"]").find(".px_bg_trips .b_loading_small").remove(),$(".trips_block_global[id_trips="+e+"]").find(".js-new-doc-trips").show(),$.each(i.error,function(e,t){numbers=$.inArray(t,["no_all_password_buy","no_all_password_fly","no_phone_tell_buy","no_all_password_x","no_all_info_org","no_all_info_rf_org","number_contract_busy"]),-1!=numbers?alert_message("error","number_contract_busy"==t?"Номер договора занят. Следующий свободный - "+i.number:"некорректно заполнено - "+["Паспортные данные покупателя","Паспортные данные туристов","Телефон, адрес покупателя","паспорт РФ покупателя","данные по организации","паспортные данные руководителя",""][numbers]):alert_message("error","Ошибка!")})}function AfterAddFormPlane(i,e){"ok"==i.status?(alert_message("ok","Планы менеджеров сохранены"),$(".js-form-plane-new .js-add-plane-form").show(),$(".js-form-plane-new .b_loading_small").remove()):($(".js-form-plane-new .js-add-plane-form").show(),$(".js-form-plane-new .b_loading_small").remove(),$.each(i.error,function(e,t){numbers=$.inArray(t,["number_contract","id_operator","id_exchange","date_sele_doc","buy_id","count_clients","id_country","date_start","date_end","count_day","hotel","flight_there_route","flight_there_class","flight_there_number","flight_back_route","flight_back_class","flight_back_number","transfer_route","transfer_type","cost_client","no_all_password_buy","no_all_password_fly","no_phone_tell_buy","no_all_password_x","no_all_info_org","no_all_info_rf_org","number_contract_busy","exchange_rates","number_contract_format","no_new_klient_promo","no_promo","promo_out"]),-1!=numbers?"number_contract_busy"==t?(alert_message("error","Номер договора занят. Следующий свободный - "+i.number),jQuery.scrollTo("[name=number_contract]",1e3,{offset:-180}),$("[name=number_contract]").parents(".input_2018").find(".error-message").empty().append("поле не заполнено"),$("[name=number_contract]").parents(".input_2018").addClass("required_in_2018"),$("[name=number_contract]").parents(".list_2018").addClass("required_in_2018")):alert_message("error","некорректно заполнено - "+["Номер договора","Туроператор","Валюта","Дата договора","Покупатель тура","Кол-во человек","Страна","Дата начала тура","Дата окончания тура","Кол-во дней","Отель","Маршрут туда","Класс туда","Номер рейса туда","Маршрут обратно","Класс обратно","Номер рейса обратно","Маршрут трансфера","Тип трансфера","Стоимость тура","Паспортные данные покупателя","Паспортные данные туристов","Телефон, адрес покупателя","паспорт РФ покупателя","данные по организации","паспортные данные руководителя","","Курс валюты (ТО)","Номер договора","Покупатель тура не новый клиент, промокод нельзя применить","Покупатель с пометкой партнер, промокод нельзя применить","указан недействительный промокод"][numbers]):alert_message("error","Ошибка!")}))}function AfterAddFormTender(i,e){"ok"==i.status?(alert_message("ok","Новый тур добавлен"),$("#js-form-edit-edit-a").attr("action","tours/.id-"+i.for_id),setTimeout(function(){$("#js-form-edit-edit-a").submit()},1e3)):($(".js-form-tender-new .js-add-tender-form").show(),$(".js-form-tender-new .b_loading_small").remove(),$.each(i.error,function(e,t){numbers=$.inArray(t,["number_contract","id_operator","id_exchange","date_sele_doc","buy_id","count_clients","id_country","date_start","date_end","count_day","hotel","flight_there_route","flight_there_class","flight_there_number","flight_back_route","flight_back_class","flight_back_number","transfer_route","transfer_type","cost_client","no_all_password_buy","no_all_password_fly","no_phone_tell_buy","no_all_password_x","no_all_info_org","no_all_info_rf_org","number_contract_busy","exchange_rates","number_contract_format","no_new_klient_promo","no_promo","promo_out"]),-1!=numbers?"number_contract_busy"==t?(alert_message("error","Номер договора занят. Следующий свободный - "+i.number),jQuery.scrollTo("[name=number_contract]",1e3,{offset:-180}),$("[name=number_contract]").parents(".input_2018").find(".error-message").empty().append("поле не заполнено"),$("[name=number_contract]").parents(".input_2018").addClass("required_in_2018"),$("[name=number_contract]").parents(".list_2018").addClass("required_in_2018")):alert_message("error","некорректно заполнено - "+["Номер договора","Туроператор","Валюта","Дата договора","Покупатель тура","Кол-во человек","Страна","Дата начала тура","Дата окончания тура","Кол-во дней","Отель","Маршрут туда","Класс туда","Номер рейса туда","Маршрут обратно","Класс обратно","Номер рейса обратно","Маршрут трансфера","Тип трансфера","Стоимость тура","Паспортные данные покупателя","Паспортные данные туристов","Телефон, адрес покупателя","паспорт РФ покупателя","данные по организации","паспортные данные руководителя","","Курс валюты (ТО)","Номер договора","Покупатель тура не новый клиент, промокод нельзя применить","Покупатель с пометкой партнер, промокод нельзя применить","указан недействительный промокод"][numbers]):alert_message("error","Ошибка!")}))}function AfterEditFormTender(a,e){"ok"==a.status?(alert_message("ok","Данные по туру сохранены"),$(".js-form-tender-edit .js-edit-tender-form").show(),$(".js-form-tender-edit .b_loading_small").remove(),setTimeout(function(){$("#js-form-edit-edit").submit()},1e3)):($(".js-form-tender-edit .js-edit-tender-form").show(),$(".js-form-tender-edit .b_loading_small").remove(),$.each(a.error,function(e,t){var i=["number_contract","id_operator","id_exchange","date_sele_doc","buy_id","count_clients","id_country","date_start","date_end","count_day","hotel","flight_there_route","flight_there_class","flight_there_number","flight_back_route","flight_back_class","flight_back_number","transfer_route","transfer_type","cost_client","no_all_password_buy","no_all_password_fly","no_phone_tell_buy","no_all_password_x","no_all_info_org","no_all_info_rf_org","number_contract_busy"];numbers=$.inArray(t,i),-1!=numbers?"number_contract_busy"==t?(alert_message("error","Номер договора занят. Следующий свободный - "+a.number),jQuery.scrollTo("[name=number_contract]",1e3,{offset:-180}),$("[name=number_contract]").parents(".input_2018").find(".error-message").empty().append("поле не заполнено"),$("[name=number_contract]").parents(".input_2018").addClass("required_in_2018"),$("[name=number_contract]").parents(".list_2018").addClass("required_in_2018"),i++):alert_message("error","некорректно заполнено - "+["Номер договора","Туроператор","Валюта","Дата договора","Покупатель тура","Кол-во человек","Страна","Дата начала тура","Дата окончания тура","Кол-во дней","Отель","Маршрут туда","Класс туда","Номер рейса туда","Маршрут обратно","Класс обратно","Номер рейса обратно","Маршрут трансфера","Тип трансфера","Стоимость тура","Паспортные данные покупателя","Паспортные данные туристов","Телефон, адрес покупателя","паспорт РФ покупателя","данные по организации","паспортные данные руководителя",""][numbers]):alert_message("error","Ошибка!")}))}function open_task(){var e=$(this).parents(".task_clock_selection").attr("id_task");$.arcticmodal({type:"ajax",url:"forms/form_doc_task.php?id="+e+"&tabs=0",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function nall_buy_tips(e){if(e=e||0,1==$(".komy_trips").val()){if(1==$(".js_trips_payment_method").attr("nall")){$(".js-visible-mt").find("[nall=1]").parents("li").addClass("hide-mt");var t=$(".js-visible-mt").find("[nall=0]").attr("rel");0==e&&($(".js_trips_payment_method").val(t),$(".js-visible-mt").find("[nall=0]").trigger("click"))}}else $(".js-visible-mt").find("li").removeClass("hide-mt")}function KeyUpS(){var t=$(this),i=$(this).attr("sopen");t.parents(".input_2018").find(".js-hidden-search").val(0),1<=jQuery.trim(t.val().length)?$(".fox_dell1").show():$(".fox_dell1").hide(),delays(function(){if(jQuery.trim(t.val().length)>=search_min2){var e="url="+window.location.href+"&search="+encodeURIComponent(t.val());AjaxClient("tours",i,"GET",e,"AfterSearchTuroper",i,0)}},search_deley2)}function open_task_new(){var e=$(this).attr("id_task");$.arcticmodal({type:"ajax",url:"forms/form_doc_task.php?id="+e+"&tabs=0",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function hide_finance_pass(){$(".js-vid-oper").slideUp("slow"),$(".js-form-pay-finance-edit .password_turs").slideUp("slow")}function edit_status_2021(){var e=parseInt($(this).val());5==e&&($(".js-status-doc-5").slideDown("slow"),$(".js-status-doc-6").slideUp("slow")),6==e&&($(".js-status-doc-6").slideDown("slow"),$(".js-status-doc-5").slideUp("slow")),5!=e&&6!=e&&($(".js-status-doc-6").slideUp("slow"),$(".js-status-doc-5").slideUp("slow"))}function exchange_eico(){var e=$(this).val();"₽"==$(".val_rate").find("[rel="+e+"]").attr("char")?($(".rates_visible").slideUp("slow"),$(".xexchange_rates").val("").trigger("click")):($(".rates_visible").slideDown("slow"),$(".xexchange_rates").trigger("click"))}function xx_end_date(){var i=0,a=new Array;$(".xcost_to_1").each(function(e,t){0!=$(this).val()&&""!=$(this).val()&&(i++,a[e]=$(this).val())}),(a[0]!=a[1]||2!=i)&&2==i?$(".js-date_polnay").slideDown("slow"):$(".js-date_polnay").slideUp("slow"),0!=$(".js-to_2_x").val()&&""!=$(".js-to_2_x").val()?$(".js-ava-vivi").slideDown("slow"):$(".js-ava-vivi").slideUp("slow")}function xexchange_rates2(){var e=$(".xexchange_rates").val(),t=$(this).parents(".jj-l").find(".oper_name");if(""!=e&&0!=e&&""!=$(this).val()&&0!=$(this).val()){var i=$(".val_rate").find("[rel="+$("#exchange_rates").val()+"]").attr("char"),a=parseFloat(ctrim($(this).val()))/parseFloat(e);t.empty().append(i+" "+$.number(a.toFixed(2),2,"."," "))}else{var n=t.attr("joi");t.empty().append(n)}}function xexchange_rates1(){if(""!=$(this).val()){var n=$(this).val(),s=$(".val_rate").find("[rel="+$("#exchange_rates").val()+"]").attr("char");$(".jj-l").each(function(e,t){if(""!=$(this).find(".gloab").val()&&0!=$(this).find(".gloab").val()){var i=parseFloat(ctrim($(this).find(".gloab").val()))/parseFloat(n);$(this).find(".oper_name").empty().append(s+" "+$.number(i.toFixed(2),2,"."," "))}else{var a=$(this).find(".oper_name").attr("joi");$(this).find(".oper_name").empty().append(a)}})}else $(".jj-l").each(function(e,t){var i=$(this).find(".oper_name").attr("joi");$(this).find(".oper_name").empty().append(i)})}function YesBut(e,t){var i=$(e),a=i.html();i.empty().append(t),i.addClass("new-say-yes"),setTimeout(function(){i.removeClass("new-say-yes"),i.empty().append(a)},4e3)}function ErrorBut(e,t){var i=$(e),a=i.html();i.empty().append(t),i.addClass("new-say1"),setTimeout(function(){i.removeClass("new-say1"),i.empty().append(a)},4e3)}function validDate(e){var t=e.split("."),i=new Date(t[2]+"/"+t[1]+"/"+t[0]);return t[2]==i.getFullYear()&&t[1]==i.getMonth()+1&&t[0]==i.getDate()}function date_nait(){var e=$(".js-date-nait2").val(),t=$(".js-date-nait1").val();if(validDate(t)&&validDate(e)){var i=t.split("."),a=new Date(i[2]+"/"+i[1]+"/"+i[0]),n=e.split("."),s=new Date(n[2]+"/"+n[1]+"/"+n[0]),r=Math.ceil(Math.abs(s.getTime()-a.getTime())/864e5);$.isNumeric(r)&&0<=r&&($(".js-date-nait-itog").val(r),input_2018())}}function UpdateTripsA(e,t,i){null==i&&(i=0);var a=$(".trips_block_global[id_trips="+e+"]").find(".js-tabs-menu .active").attr("id");AjaxClient("tours","update_trips","GET","url="+window.location.href+"&id="+e+"&menu_id="+a+"&op="+t+"&mm="+i,"AfterUpdateTripsA",e,0,1)}function UpdateTaskBi(e){AjaxClient("task","task_update","GET","url="+window.location.href+"&id="+e,"AfterUpdateTaskBi",e,0,1)}function UpdateTaskBiAdd(e){AjaxClient("task","task_update","GET","url="+window.location.href+"&id="+e,"AfterUpdateTaskBiAdd",e,0,1)}function UpdatePreBiAdd(e){var t=$(".preorders_block_global[id_pre="+e+"]").find(".js-tabs-menu .active").attr("id");AjaxClient("preorders","preorders_update","GET","url="+window.location.href+"&id="+e+"&menu_id="+t,"AfterUpdatePreBiAdd",e,0,1)}function count_task(){$(".hidden-count-task"),$(".search-count-task").empty().append($(".hidden-count-task").text())}function open_task1(){var e=$(this).parents(".task_block_global").attr("id_task");$.arcticmodal({type:"ajax",url:"forms/form_doc_task.php?id="+e+"&tabs=0",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function animation_teps(){$(".teps").each(function(e,t){$(this).animate({width:$(this).attr("rel_w")+"%"},2e3,function(){})})}function animation_graf(){$(".line-fin").each(function(e,t){$(this).animate({width:$(this).attr("rel_w")+"%"},2e3,function(){})})}function filter_active_a_t(e){var t=$(".content").attr("iu");e.preventDefault();var i=$(this).parents(".fi-at").attr("id");$.cookie("su_7ftu"+t,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7ftu"+t,i,"add"),location.href=$(this).attr("href")}function sbros_search(e){e.preventDefault(),$(".js-click-history-m").trigger("click"),$(".dell_stock_search_preorders").trigger("click"),location.href=$(this).attr("href")}function filter_active_pr(e){var t=$(".content").attr("iu");e.preventDefault();var i=$(this).parents(".fi-at-pr").attr("id");$.cookie("su_7fpr"+t,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7fpr"+t,i,"add"),location.href=$(this).attr("href")}function list_number(){2==$(this).find("a").attr("rel")&&($("#date_table").show(),$(".bookingBox_range").css({display:"block"}))}function filter_active_a(e){var t=$(".content").attr("iu");e.preventDefault();var i=$(this).parents(".fi-a").attr("id");$.cookie("su_7fta"+t,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7fta"+t,i,"add"),location.href=$(this).attr("href")}function filter_active(){var e=$(this).find(".choice-radio i"),t=$(".content").attr("iu");e.is(".active_task_cb")||($(".js-h1-filter").find(".choice-radio i").removeClass("active_task_cb"),e.addClass("active_task_cb"),$.cookie("su_7ta"+t,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7ta"+t,$(this).find(".choice-radio input").val(),"add"),2==$(this).find(".choice-radio input").val()?($(".filter-wois").addClass("active-filter-s"),$(".js-plus-filter").removeClass("active-filter-s"),$(".js-plus-filter").addClass("no-active")):($(".filter-wois").removeClass("active-filter-s"),$(".js-plus-filter").addClass("active-filter-s"),$(".js-plus-filter").removeClass("no-active"),$(".js-reload-top").addClass("active-r")))}function filter_active_preorders(){var e=$(this).find(".choice-radio i"),t=$(".content").attr("iu");e.is(".active_task_cb")||($(".js-h1-filter-preorders").find(".choice-radio i").removeClass("active_task_cb"),e.addClass("active_task_cb"),$.cookie("su_7pr"+t,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7pr"+t,$(this).find(".choice-radio input").val(),"add"),2==$(this).find(".choice-radio input").val()?($(".filter-wois").addClass("active-filter-s"),$(".js-plus-filter").removeClass("active-filter-s"),$(".js-plus-filter").addClass("no-active")):($(".filter-wois").removeClass("active-filter-s"),$(".js-plus-filter").addClass("active-filter-s"),$(".js-plus-filter").removeClass("no-active"),$(".js-reload-top").addClass("active-r")))}function filter_active_turs(){var e=$(this).find(".choice-radio i"),t=$(".content").attr("iu");e.is(".active_task_cb")||($(".js-h1-filter-turs").find(".choice-radio i").removeClass("active_task_cb"),e.addClass("active_task_cb"),$.cookie("su_7tu"+t,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7tu"+t,$(this).find(".choice-radio input").val(),"add"),2==$(this).find(".choice-radio input").val()?($(".filter-wois").addClass("active-filter-s"),$(".js-plus-filter").removeClass("active-filter-s"),$(".js-plus-filter").addClass("no-active")):($(".filter-wois").removeClass("active-filter-s"),$(".js-plus-filter").addClass("active-filter-s"),$(".js-plus-filter").removeClass("no-active"),$(".js-reload-top").addClass("active-r")))}function js_search_global_page(e){e.preventDefault(),$.arcticmodal({type:"ajax",url:"forms/form_choice_client.php?tabs=1&tabss=all&several=0&posta=choice_user_task1&new=0",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function choice_user_task1_uma(e,t){clearInterval(timerId),$.arcticmodal("close"),2==e?$.arcticmodal({type:"ajax",url:"forms/form_doc_org.php?id="+t+"&tabs=0",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}}):$.arcticmodal({type:"ajax",url:"forms/form_doc_user.php?id="+t+"&tabs=0",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function js_choice_keyup(){var i=$(".js-choice-keyup");delays(function(){if(2<=jQuery.trim(i.val().length)||0==jQuery.trim(i.val().length)){var e=$(".js-tabs-menu-choiche").find(".active").attr("id");null==e&&(e=4);var t="url="+window.location.href+"&all="+$(".js-eshe-client-x").attr("all")+"&tk="+$(".js-s_form_xx").attr("mor")+"&id="+$(".js-s_form_xx").attr("for")+"&search="+encodeURIComponent(i.val())+"&tabs="+e;$(".js-icon-load").hide().after('<div class="b_loading_small" style="margin-right:-20px; position:relative; top: 0px; right: 0px; padding-top:0px;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("clients","search_client_tours","GET",t,"AfterSearchClientT",1,0)}},800)}function update_edit_input_eico(){var e=$(this).parents(".select").find("a.slct").text();$(this).parents(".js-edit-input-list").find(".edit-pole-eico input").val(e)}function edit_eico_list(){$(this).parents(".js-edit-input-list").removeClass("no-active-edit-20");var e=$(this).parents(".js-edit-input-list").find(".edit-pole-eico input").val();$(this).parents(".js-edit-input-list").find(".edit-pole-eico input").val("").focus().val(e)}function choice_task_you(){var e=$(this).find("i"),t=$(this).find("input").val();if(0<$(this).parents(".task_clock_selection").length)var i=$(this).parents(".task_clock_selection").attr("id_task");else i=$(this).parents(".task_block_global").attr("id_task");e.is(":visible")&&(0!=t||e.is(".active_task_cb")?($(this).find("input").val(0),$(this).find(".choice-radio i").removeClass("active_task_cb"),AjaxClient("task","task_my_task","GET","url="+window.location.href+"&id="+i+"&choice=0","AfterMyTask",i,0),$(this).find(".choice-head").empty().append("Забрать задачу на себя")):($(this).find("input").val(1),$(this).find(".choice-radio i").addClass("active_task_cb"),$(this).find(".choice-head").empty().append("Вы взялись за выполнение"),AjaxClient("task","task_my_task","GET","url="+window.location.href+"&id="+i+"&choice=1","AfterMyTask",i,0)))}function choice_buy_you(){var e=$(this).find("i"),t=$(this).find("input").val(),i=$(this).parents(".buy_block_global").attr("id_buy");e.is(":visible")&&(0!=t||e.is(".active_task_cb")?($(this).find("input").val(0),$(this).find(".choice-radio i").removeClass("active_task_cb"),AjaxClient("finance","constant","GET","url="+window.location.href+"&id="+i+"&choice=0","AfterConstBuy",i,0,1)):($(this).find("input").val(1),$(this).find(".choice-radio i").addClass("active_task_cb"),AjaxClient("finance","constant","GET","url="+window.location.href+"&id="+i+"&choice=1","AfterConstBuy",i,0,1)))}function choice_user_task_uma(e,t){$(".js-id-client-task").val(t),$(".js-client-type-task").val(e),$(".js-sv-user-task span").empty().append($(".nname_choice[id_ch="+t+"]").find(".tit").text()),$(".js-sv-user-task").show(),$(".arcticmodal-close",$(".js-s_form_xx").closest(".box-modal")).click()}function choice_after_end_uma(e,t){clearInterval(timerId),$.arcticmodal("close"),$(".js-buy-turs-client").parents(".buy_turs").hide(),$(".js-buy-turs-client").parents(".buy_turs").before('<div class="b_loading_small" style="position:relative;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("tours","card_client","GET","url="+window.location.href+"&type=1&tabs="+e+"&id_tabs="+t+"&tk="+$(".h111").attr("mor")+"&id="+$(".h111").attr("for"),"AfterCardClient",1,0)}function choice_after_end_fly_uma(e,t){clearInterval(timerId),$.arcticmodal("close"),$(".js-fly-turs-client").parents(".buy_turs").hide(),$(".js-fly-turs-client").parents(".buy_turs").before('<div class="b_loading_small" style="position:relative;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("tours","card_client","GET","url="+window.location.href+"&type=2&tabs="+e+"&id_tabs="+t+"&tk="+$(".h111").attr("mor")+"&id="+$(".h111").attr("for"),"AfterCardClient",2,0)}$("#no_rd").on("click",function(){clearInterval(timerId),$.arcticmodal("close")}),window.search_min2=0,window.search_deley2=700;var eshe_say_client=function(){var e=$(this).attr("pg"),t=$(this).attr("start"),i=$(this).attr("all");$(".js-eshe-client-x").empty().append('<div class="b_loading_small" style="position:relative; top: -5px;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>');var a=$(".js-tabs-menu-choiche").find(".active").attr("id");null==a&&(a=4),AjaxClient("clients","tabs_client_eshe","GET","url="+window.location.href+"&pg="+e+"&start="+t+"&all="+i+"&tk="+$(".js-s_form_xx").attr("mor")+"&id="+$(".js-s_form_xx").attr("for")+"&query="+ec($(".js-choice-keyup").val())+"&tabs="+a,"AfterClientEshe",1,0)};function choice_client_end(){var e=$(this).attr("id_rel"),t=$(this).attr("tabs");if(0==e){var i=$(".js-choice-yyy").find("i").text();$(".js-choice-yyy").find("i").empty().append("Ошибка!"),$(".js-choice-yyy").addClass("new-znay1"),setTimeout(function(){$(".js-choice-yyy").removeClass("new-znay1"),$(".js-choice-yyy").find("i").empty().append(i)},4e3)}else{var a=$("[name=posta]").val();$.globalEval(a+"_uma("+t+",'"+e+"')")}}function rrube_choice(){var e=$(this).parents(".nname_choice").attr("id_ch");$(this).parents(".nname_choice").remove(),$(".list_client_choice[rel_notib="+e+"]").removeClass("yesss-ch");for(var t="",i=e,a=$(".js-choice-yyy").attr("id_rel").split(","),n=0,s=0;s<a.length;s++)a[s]!=i&&(t=0==n?a[s]:t+","+a[s],n++);""==t?($(".js-choice-yyy").removeClass("yes_choice_client"),$(".js-choice-yyy").attr("id_rel",0)):$(".js-choice-yyy").attr("id_rel",t)}function click_client_choice(){var e=$("[name=several_choice]").val();if($(this).is(".yesss-ch"))if(0==e)$(this).removeClass("yesss-ch"),$(".js-choice-yyy").removeClass("yes_choice_client"),$(".js-choice-yyy").attr("id_rel",0),$(".list_choice_yes").empty();else{$(this).removeClass("yesss-ch");for(var t="",i=$(this).attr("rel_notib"),a=$(".js-choice-yyy").attr("id_rel").split(","),n=0,s=0;s<a.length;s++)a[s]!=i?(t=0==n?a[s]:t+","+a[s],n++):$(".list_choice_yes").find("[id_ch="+i+"]").remove();""==t?($(".js-choice-yyy").removeClass("yes_choice_client"),$(".js-choice-yyy").attr("id_rel",0)):$(".js-choice-yyy").attr("id_rel",t)}else if(0==e){$(".yesss-ch").removeClass("yesss-ch");var r=$(this).attr("rel_notib"),o=$(".js-tabs-menu-choiche").find(".active").attr("id");$(this).addClass("yesss-ch"),$(".js-choice-yyy").addClass("yes_choice_client"),$(".js-choice-yyy").attr("id_rel",r),$(".js-choice-yyy").attr("tabs",o),$(".list_choice_yes").empty().append('<div class="nname_choice" id_ch="'+r+'"><span class="tit">'+$(this).find(".h_cb span").text()+'</span><span class="rrube_choice"></span></div>')}else{r=$(this).attr("rel_notib"),o=$(".js-tabs-menu-choiche").find(".active").attr("id");$(this).addClass("yesss-ch"),$(".js-choice-yyy").removeClass("yes_choice_client").addClass("yes_choice_client"),$(".js-choice-yyy").attr("tabs",o);var l=$(".js-choice-yyy").attr("id_rel");0==l?($(".js-choice-yyy").attr("id_rel",r),$(".list_choice_yes").empty().append('<div class="nname_choice" id_ch="'+r+'"><span class="tit">'+$(this).find(".h_cb span").text()+'</span><span class="rrube_choice"></span></div>')):($(".js-choice-yyy").attr("id_rel",l+","+r),$(".list_choice_yes").append('<div class="nname_choice" id_ch="'+r+'"><span class="tit">'+$(this).find(".h_cb span").text()+'</span><span class="rrube_choice"></span></div>'))}}function js_buy_turs_client(){$.arcticmodal({type:"ajax",url:"forms/form_choice_client.php?tabs=1&several=0&posta=choice_after_end",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function js_fly_turs_client(){$.arcticmodal({type:"ajax",url:"forms/form_choice_client.php?tabs=4&tabss=0&several=1&posta=choice_after_end_fly",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function open_search(){var e=$(this).parents(".input-search-list").find("i");e.is(".open-search-active")?(e.removeClass("open-search-active"),$(this).parents(".input-search-list").find(".js-drop-search").css("transform","scaleY(0)")):(e.addClass("open-search-active"),$(this).parents(".input-search-list").find(".js-drop-search").css("transform","scaleY(1)")),$(".slct").each(function(e,t){$(this).removeClass("active"),$(this).next().css("transform","scaleY(0)")}),elemss=$(this).parents(".input-search-list").attr("list_number"),$(".drop-search").each(function(e,t){$(this).parents(".input_2018").attr("list_number")!=elemss&&($(this).parents(".input-search-list").find("i").removeClass("open-search-active"),$(this).parents(".input-search-list").find(".js-drop-search").css("transform","scaleY(0)"))})}function drop_search(){var e=$(this).find("a").text(),t=$(this).find("a").attr("rel"),i=$(this).parents(".input_2018");i.find(".click-search-name").empty().append(e).slideDown("slow"),i.find(".js-hidden-search").val(t),i.find(".js-keyup-search").val(e),i.removeClass("required_in_2018"),$(this).parents(".input-search-list").find("i").removeClass("open-search-active"),input_2018()}function UpdateNumberTuris(){var i=1;$(".active-turist-turs").each(function(e,t){$(this).find(".span-44").empty().append(i),i++})}function loli_butt(){var e=$(this).parents(".loli_turs").find("input");if(0==e.val()){e.val(1),$(this).find(".choice-radio i").addClass("active_task_cb"),$(this).addClass("active_pass");var t=$(this).parents(".info-client-ruler").attr("id_rules");$(".tot_fly_id").val(AddDellList($(".tot_fly_id").val(),t,"dell")),0!=(i=parseFloat($(".tot_fly_count").val()))&&$(".tot_fly_count").val(i-1),$(".info-client-ruler[id_rules="+t+"]").removeClass("active-turist-turs"),UpdateNumberTuris()}else{e.val(0),$(this).find(".choice-radio i").removeClass("active_task_cb"),$(this).removeClass("active_pass");t=$(this).parents(".info-client-ruler").attr("id_rules");if(0!=AddDellList($(".tot_fly_id").val(),t,"add")){$(".tot_fly_id").val(AddDellList($(".tot_fly_id").val(),t,"add"));var i=parseFloat($(".tot_fly_count").val());$(".tot_fly_count").val(i+1),$(".info-client-ruler[id_rules="+t+"]").addClass("active-turist-turs"),UpdateNumberTuris()}}}function password_butt(){var e=$(this).parents(".password_turs").find("input");e.val()!=$(this).attr("id")&&(e.val($(this).attr("id")),$(this).parents(".password_turs").find(".choice-radio i").removeClass("active_task_cb"),$(this).parents(".password_turs").find(".input-choice-click-pass").removeClass("active_pass"),$(this).find(".choice-radio i").addClass("active_task_cb"),$(this).addClass("active_pass"))}function UpdateGlobal(e,t){AjaxClient("clients","update_user_global","GET","url="+window.location.href+"&tk="+$(".h111").attr("mor")+"&id="+e+"&arr="+t,"AfterUpdateUser",e,0,1)}function UpdateFinance(e){AjaxClient("finance","update","GET","url="+window.location.href+"&arr="+e,"AfterUpdateFinance",e,0,1)}function UpdateCash(){AjaxClient("cash","update","GET","url="+window.location.href,"AfterUpdateCash","",0,1)}function UpdateGlobalO(e,t){AjaxClient("clients","update_org_global","GET","url="+window.location.href+"&tk="+$(".h111").attr("mor")+"&id="+e+"&arr="+t,"AfterUpdateOrg",e,0,1)}var RussianNameProcessor={sexM:"m",sexF:"f",gcaseIm:"nominative",gcaseNom:"nominative",gcaseRod:"genitive",gcaseGen:"genitive",gcaseDat:"dative",gcaseVin:"accusative",gcaseAcc:"accusative",gcaseTvor:"instrumentative",gcaseIns:"instrumentative",gcasePred:"prepositional",gcasePos:"prepositional",rules:{lastName:{exceptions:["\tдюма,тома,дега,люка,ферма,гамарра,петипа,шандра . . . . .","\tгусь,ремень,камень,онук,богода,нечипас,долгопалец,маненок,рева,кива . . . . .","\tвий,сой,цой,хой -я -ю -я -ем -е"],suffixes:["f\tб,в,г,д,ж,з,й,к,л,м,н,п,р,с,т,ф,х,ц,ч,ш,щ,ъ,ь . . . . .","f\tска,цка  -ой -ой -ую -ой -ой","f\tая       --ой --ой --ую --ой --ой","\tская     --ой --ой --ую --ой --ой","f\tна       -ой -ой -у -ой -ой","\tиной -я -ю -я -ем -е","\tуй   -я -ю -я -ем -е","\tца   -ы -е -у -ей -е","\tрих  а у а ом е","\tия                      . . . . .","\tиа,аа,оа,уа,ыа,еа,юа,эа . . . . .","\tих,ых                   . . . . .","\tо,е,э,и,ы,у,ю           . . . . .","\tова,ева            -ой -ой -у -ой -ой","\tга,ка,ха,ча,ща,жа  -и -е -у -ой -е","\tца  -и -е -у -ей -е","\tа   -ы -е -у -ой -е","\tь   -я -ю -я -ем -е","\tия  -и -и -ю -ей -и","\tя   -и -е -ю -ей -е","\tей  -я -ю -я -ем -е","\tян,ан,йн   а у а ом е","\tынец,обец  --ца --цу --ца --цем --це","\tонец,овец  --ца --цу --ца --цом --це","\tц,ч,ш,щ   а у а ем е","\tай  -я -ю -я -ем -е","\tгой,кой  -го -му -го --им -м","\tой  -го -му -го --ым -м","\tах,ив   а у а ом е","\tший,щий,жий,ний  --его --ему --его -м --ем","\tкий,ый   --ого --ому --ого -м --ом","\tий       -я -ю -я -ем -и","\tок  --ка --ку --ка --ком --ке","\tец  --ца --цу --ца --цом --це","\tв,н   а у а ым е","\tб,г,д,ж,з,к,л,м,п,р,с,т,ф,х   а у а ом е"]},firstName:{exceptions:["\tлев    --ьва --ьву --ьва --ьвом --ьве","\tпавел  --ла  --лу  --ла  --лом  --ле","m\tшота   . . . . .","f\tрашель,нинель,николь,габриэль,даниэль   . . . . ."],suffixes:["\tе,ё,и,о,у,ы,э,ю   . . . . .","f\tб,в,г,д,ж,з,й,к,л,м,н,п,р,с,т,ф,х,ц,ч,ш,щ,ъ   . . . . .","f\tь   -и -и . ю -и","m\tь   -я -ю -я -ем -е","\tга,ка,ха,ча,ща,жа  -и -е -у -ой -е","\tа   -ы -е -у -ой -е","\tия  -и -и -ю -ей -и","\tя   -и -е -ю -ей -е","\tей  -я -ю -я -ем -е","\tий  -я -ю -я -ем -и","\tй   -я -ю -я -ем -е","\tб,в,г,д,ж,з,к,л,м,н,п,р,с,т,ф,х,ц,ч\t а у а ом е"]},middleName:{suffixes:["\tич   а  у  а  ем  е","\tна  -ы -е -у -ой -е"]}},initialized:!1,init:function(){this.initialized||(this.prepareRules(),this.initialized=!0)},prepareRules:function(){for(var e in this.rules)for(var t in this.rules[e])for(var i=0,a=this.rules[e][t].length;i<a;i++)this.rules[e][t][i]=this.rule(this.rules[e][t][i])},rule:function(e){var t=e.match(/^\s*([fm]?)\s*(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s*$/);return!!t&&{sex:t[1],test:t[2].split(","),mods:[t[3],t[4],t[5],t[6],t[7]]}},word:function(e,t,i,a){if(a==this.gcaseNom)return e;if(e.match(/[-]/)){for(var n=e.split("-"),s=0,r=n.length;s<r;s++)n[s]=this.word(n[s],t,i,a);return n.join("-")}if(e.match(/^[А-ЯЁ]\.?$/i))return e;this.init();var o,l=this.rules[i];if(l.exceptions&&(o=this.pick(e,t,a,l.exceptions,!0)))return o;return(o=this.pick(e,t,a,l.suffixes,!1))||e},pick:function(e,t,i,a,n){wordLower=e.toLowerCase();for(var s=0,r=a.length;s<r;s++)if(this.ruleMatch(wordLower,t,a[s],n))return this.applyMod(e,i,a[s]);return!1},ruleMatch:function(e,t,i,a){if(i.sex==this.sexM&&t==this.sexF)return!1;if(i.sex==this.sexF&&t!=this.sexF)return!1;for(var n=0,s=i.test.length;n<s;n++){if((a?e:e.substr(Math.max(e.length-i.test[n].length,0)))==i.test[n])return!0}return!1},applyMod:function(e,t,i){switch(t){case this.gcaseNom:var a=".";break;case this.gcaseGen:a=i.mods[0];break;case this.gcaseDat:a=i.mods[1];break;case this.gcaseAcc:a=i.mods[2];break;case this.gcaseIns:a=i.mods[3];break;case this.gcasePos:a=i.mods[4];break;default:throw"Unknown grammatic case: "+t}for(var n=0,s=a.length;n<s;n++){var r=a.substr(n,1);switch(r){case".":break;case"-":e=e.substr(0,e.length-1);break;default:e+=r}}return e}},RussianName=function(e,t,i,a){if(void 0===t){var n=e.match(/^\s*(\S+)(\s+(\S+)(\s+(\S+))?)?\s*$/);if(!n)throw"Cannot parse supplied name";n[5]&&n[3].match(/(ич|на)$/)&&!n[5].match(/(ич|на)$/)?(e=n[5],t=n[1],i=n[3],this.fullNameSurnameLast=!0):(e=n[1],t=n[3],i=n[5])}this.ln=e,this.fn=t||"",this.mn=i||"",this.sex=a||this.getSex()};function ec(e){return encodeURIComponent(e)}function padej_woo(){var e=$(".woo1").val(),t=$(".woo2").val();if(""==e)e="________";else{var i=new RussianName(e);e=i.fullName(i.gcaseRod)}if(""==t)t="________";else{var a=new RussianName(t);t=a.fullName(a.gcaseRod)}$(".js-padej_woo_end").empty().append(t+" "+e+", действующего на основании Свидетельства о государственной регистрации"),$(".js-padej_woo_end").val(t+" "+e+", действующего на основании Свидетельства о государственной регистрации"),$(".js-padej_woo_end").trigger("keyup")}function TextToLat(e){for(var t={ru_str:" АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯIабвгдеёжзийклмнопрстуфхцчшщъыьэюяi",en_str:[" ","A","B","V","G","D","E","E","ZH","Z","I","I","K","L","M","N","O","P","R","S","T","U","F","KH","TS","CH","SH","SHCH","IE","Y","","E","IU","IA","I","A","B","V","G","D","E","E","ZH","Z","I","I","K","L","M","N","O","P","R","S","T","U","F","KH","TS","CH","SH","SHCH","IE","Y","","E","IU","IA","I"],ru2en:{}},i=0,a=t.ru_str.length;i<a;i++)t.ru2en[t.ru_str.charAt(i)]=t.en_str[i];var n=e.match(/\S+\s\S+\s/i),s=e.split("");null!=n&&(s=String(n).split(""));i=0;for(var r=s.length;i<r;i++)s[i]=t.ru2en[s[i]];return s.join("")}function toTranslit(e){return e.replace(/([а-яё])|([\s_-])|([^a-z\d])/gi,function(e,t,i,a,n){if(i||a)return i?" ":"";var s=t.charCodeAt(0);return["yo","a","b","v","g","d","e","zh","z","i","y","k","l","m","n","o","p","r","s","t","u","f","h","c","ch","sh","shch","","y","","e","yu","ya"][1025==s||1105==s?0:1071<s?s-1071:s-1039]})}function close_close_window(){clearInterval(timerId),$.arcticmodal("close")}function ctrim(e){return e=e.replace(/\s/g,"")}function string_res1(){var e=$(this).attr("id");$(".fox_search_result1").hide(),$("[name=id_search_client1]").val(e).trigger("click"),$(".end_search1").find(".end_one1").empty().append($(this).find(".name_search_x").html()),$(".end_search1").find(".end_two1").empty().append($(this).find(".phone_search_x").html()),$(".end_search1").show()}function ToolTip(){$("[data-tooltip]").mousemove(function(e){$("div").is("#tooltip")||$("body").append('<div id="tooltip"></div>'),$data_tooltip=$(this).attr("data-tooltip"),$("#tooltip").text($data_tooltip);$(this).offset();e.pageX>=$(window).width()/2?$("#tooltip").css({top:e.pageY+5,left:e.pageX-$("#tooltip").outerWidth()-5}):$("#tooltip").css({top:e.pageY+5,left:e.pageX+5}),setTimeout(function(){$("#tooltip").fadeIn(500)},400)}).mouseout(function(){$("#tooltip").remove()})}RussianName.prototype={sexM:RussianNameProcessor.sexM,sexF:RussianNameProcessor.sexF,gcaseIm:RussianNameProcessor.gcaseIm,gcaseNom:RussianNameProcessor.gcaseNom,gcaseRod:RussianNameProcessor.gcaseRod,gcaseGen:RussianNameProcessor.gcaseGen,gcaseDat:RussianNameProcessor.gcaseDat,gcaseVin:RussianNameProcessor.gcaseVin,gcaseAcc:RussianNameProcessor.gcaseAcc,gcaseTvor:RussianNameProcessor.gcaseTvor,gcaseIns:RussianNameProcessor.gcaseIns,gcasePred:RussianNameProcessor.gcasePred,gcasePos:RussianNameProcessor.gcasePos,fullNameSurnameLast:!1,ln:"",fn:"",mn:"",sex:"",getSex:function(){if(2<this.mn.length)switch(this.mn.substr(this.mn.length-2)){case"ич":return this.sexM;case"на":return this.sexF}return""},fullName:function(e){return((this.fullNameSurnameLast?"":this.lastName(e)+" ")+this.firstName(e)+" "+this.middleName(e)+(this.fullNameSurnameLast?" "+this.lastName(e):"")).replace(/^ +| +$/g,"")},lastName:function(e){return RussianNameProcessor.word(this.ln,this.sex,"lastName",e)},firstName:function(e){return RussianNameProcessor.word(this.fn,this.sex,"firstName",e)},middleName:function(e){return RussianNameProcessor.word(this.mn,this.sex,"middleName",e)}},$(document).ready(function(){animation_teps(),animation_graf(),$("body").on("click",".burger_ok",SliceMM),$(".menu_x").clone().appendTo(".mobile-nav span"),$("body").on("click",".js-client",doc_user),$("body").on("click",".js-org",doc_org),$("body").on("click",".js-client-dop",doc_user1),$("body").on("click",".js-org-dop",doc_org1),$("body").on("keyup",".js-keyup-search",KeyUpS),$("body").on("change keyup input click",".js-h1-filter",filter_active),$("body").on("change keyup input click",".fi-a a",filter_active_a),$("body").on("change keyup input click",".js-h1-filter-turs",filter_active_turs),$("body").on("change keyup input click",".fi-at a",filter_active_a_t),$("body").on("change keyup input click",".fi-at-pr a",filter_active_pr),$("body").on("change keyup input click",".click-history-pre",sbros_search),$("body").on("change keyup input click",".js-h1-filter-preorders",filter_active_preorders),$(".index_booking").on("change keyup input click",".save_users",save_users),$(".index_booking").on("change keyup input click",".save_reports",save_reports),$(".index_booking").on("change keyup input click",".save_booking",save_booking),$(".index_booking").on("change keyup input click",".yess_booking",yess_booking),$(".js-form-add-tours").on("change keyup input click",".js-buy-turs-client",js_buy_turs_client),$(".js-form-add-tours").on("change keyup input click",".js-fly-turs-client",js_fly_turs_client),$(".dell_stock_search").bind("change keyup input click",changesort_stock2__),$(".dell_stock_searcho").bind("change keyup input click",changesort_stock2__o),$(".dell_stock_search_tours").bind("change keyup input click",changesort_stock2_tours),$(".dell_stock_search_toursi").bind("change keyup input click",changesort_stock2_toursi),$(".dell_stock_search_preorders").bind("change keyup input click",changesort_stock2_preorders),$(".menu_x").on("change keyup input click",".js-preorders-add0",preorders_adds),$(".menu-09").on("change keyup input click",".js-add_new_preorders",preorders_adds),$(".mobile-bottom-z").on("change keyup input click",".js-add_new_preorders",preorders_adds),$(".menu_x").on("change keyup input click",".js-task-add0",task_adds),$(".menu_x").on("change keyup input click",".js-clients-add0",clients_adds),$(".menu-09").on("change keyup input click",".js-add_new_client",clients_adds),$(".menu-09").on("change keyup input click",".js-add_new_task",task_adds),$(".js-mobile-bottom-z").on("change keyup input click",".js-add_new_client",clients_adds),$(".mobile-bottom-z").on("change keyup input click",".js-add_new_client",clients_adds),$(".mobile-bottom-z").on("change keyup input click",".js-add_new_task",task_adds),$(".form_1_booking").on("change","[name=client_new1_search]",radio_client_svv),$(".form_2_booking").on("change","[name=client_new1_search]",radio_client_svv),$(".index_booking").on("change keyup input click",".win_pribl",win_pribl),$(".index_booking").on("change keyup input click",".noo_booking",noo_booking),$(".index_booking").on("change keyup input click",".think_booking",think_booking),$(".index_booking").on("change keyup input click",".call_booking",call_booking),$(".index_booking").on("change keyup input click",".dis_bron",dis_bron),$(".clients_block").on("change keyup input click",".open_operator",copyy_clients),$(".booking_sourse").on("change keyup input click",".mi_m",fly_edit),$(".booking_sourse").on("change keyup input click",".js--edit--ccomment",add_edit_comment),$(".clients_block").on("change keyup input click",".clients_fly_date",fly_edit1),$(".clients_block").on("change keyup input click",".add_cff",add_edit_comment1),$(".booking_sourse").on("change keyup input click",".mi_history",fly_history),$(".trips_block_global").on("change keyup input click",".mi_history_trips",fly_history_trips),$(".trips_block_global").on("change keyup input click",".mi_m",fly_edit_trips),$(".operator_block").on("change keyup input click",".open_operator",copyy),$(".answer_block").on("change keyup input click",".open_operator,.h57",copyy1),$(".operator_block").on("change keyup input click",".del_operator_",dell_operator),$(".users_block").on("change keyup input click",".del_users_",dell_users),$(".reports_block").on("change keyup input click",".del_reports_",dell_reports),$(".form_1_booking").on("change keyup input click",".wallet_checkbox,#name_b,#radio_bk,#phone_b,#name_client_b,#date_hidden_table_gr2,[name=client_new1_search],[name=id_search_client1]",next_step_booking),$(".form_20_booking").on("change keyup input click","#name_b,#phone_b,#day_b",next_step_clients),$(".form_5_booking").on("change keyup input click",".wallet_checkbox,.radio_checkbox,#name_b,#name_b1,#password_b,#login_b",next_step_users),$(".form_30_booking").on("change keyup input click","#name_b,#phone_b",next_step_reports),$(".form_3_booking").on("change keyup input click","#name_b",next_step_operator),$(".form_2_booking").on("change keyup input click",".span-44",bron_offers_select),$(".form_2_booking").on("change keyup input click",".click_history_avans",click_history_avans),$(".form_4_booking").on("change keyup input click",".add_sourse_reports",add_answer),$(".sourse_b").on("change keyup input click",".del_booking_sourse",dell_offers),$(".form_4_booking").on("change keyup input click",".del_answer_",dell_answer),$(".form_4_booking").on("change keyup input click",".edit_answer_",edit_answer),$(".form_4_booking").on("change keyup input click",".save_anna",save_anna),$(".sourse_b").on("change keyup input click",".add_sourse_booking",add_offers),$(".phone_us1").mask("+7 (000) 000-00-00"),$(".form_2_booking").on("change keyup input click",".count_mask",validate11),$(".form_2_booking").on("change keyup input click",".wallet_checkbox,#name_b,#phone_b,#name_client_b,.form_offers_,#otziv_area_adaxx,.fox_dell1,#radio_bk66",function(){$(".button_yes_no").hide(),$(".save_booking").show()}),$(".form_4_booking").on("change keyup input click","#name_b,#phone_b,.form_offers_,#otziv_area_adaxx",function(){$(".button_yes_no").hide(),$(".save_reports").show()}),$(".form_4_booking").on("change keyup input click",".ann_b",function(){$(this).parents(".answer_block").find(".save_anna").show()}),setTimeout(function(){$(".save_anna").hide()},500),$(".money_mask").inputmask("numeric",{radixPoint:".",groupSeparator:" ",digits:2,autoGroup:!0,prefix:"",rightAlign:!1,oncleared:function(){self.Value("")}}),$(".date_time_picker").inputmask("datetime",{mask:"1.2.y h:s",placeholder:"dd.mm.yyyy hh:mm",separator:".",alias:"dd.mm.yyyy"})});var changesort_stock2_preorders=function(){var e=$(".content").attr("iu");$(this).prev().val(""),$.cookie("su_7pp"+e,null,{path:"/",domain:window.is_session,secure:!1}),$(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"),$(this).hide()},changesort_stock2_tours=function(){var e=$(".content").attr("iu");$(".js-text-search-x").val(""),$(this).hide(),$.cookie("su_7cu"+e,null,{path:"/",domain:window.is_session,secure:!1});var t=$("#name_stock_search_tours").val(),i=$("#name_stock_search_toursi").val();""==t&&""==i&&($(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"))},changesort_stock2_toursi=function(){var e=$(".content").attr("iu");$(".js-text-search-xi").val(""),$.cookie("su_7xcu"+e,null,{path:"/",domain:window.is_session,secure:!1}),$(this).hide();var t=$("#name_stock_search_tours").val(),i=$("#name_stock_search_toursi").val();""==t&&""==i&&($(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"))},changesort_stock2__=function(){var e=$(".content").attr("iu");$(this).prev().val(""),$.cookie("su_7c"+e,null,{path:"/",domain:window.is_session,secure:!1}),$(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"),$(this).hide()},changesort_stock2__o=function(){var e=$(".content").attr("iu");$(this).prev().val(""),$.cookie("su_7co"+e,null,{path:"/",domain:window.is_session,secure:!1}),$(".js--sort").removeClass("greei_input"),$(".js--sort").find("input").removeAttr("readonly"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"),$(this).hide()};function NumToIndexPadej(e){5<=e||0==e?ind=2:ind=1<e%10?1:0;return ind}function PadejNumber(e,t){return t.split(",")[NumToIndexPadej(e)]}function InputFocusNew1(){$(this).val(),$(this).parents(".ok-input-title-2019").find("label");var e=$(this).parents(".ok-input-title-2019");e.is(".active_in_2019")||e.addClass("active_in_2019"),e.is(".active1_in_2019")||e.addClass("active1_in_2019"),0!=e.find(".cal_2019").length&&$(".date___2019").show()}function InputBlurNew1(){var e=$(this).val(),t=($(this).parents(".ok-input-title-2019").find("label"),$(this).parents(".ok-input-title-2019"));t.removeClass("active1_in_2019"),""==e?t.removeClass("active_in_2019"):t.removeClass("error_formi_2019")}function input_2019(){$(".input_new_2019").each(function(e,t){""!=$.trim($(this).val())&&$(this).parents(".ok-input-title-2019").addClass("active_in_2019")})}function input_2018(){$(".input_new_2018").each(function(e,t){""!=$.trim($(this).val())&&$(this).parents(".input_2018").addClass("active_in_2018")})}function copyy(){var e=$(this).parents(".operator_block");e.is(".active_operator_x")?e.removeClass("active_operator_x"):e.addClass("active_operator_x")}function copyy_clients(){var e=$(this).parents(".clients_block");e.is(".active_operator_x")?e.removeClass("active_operator_x"):e.addClass("active_operator_x")}function copyy1(){var e=$(this).parents(".answer_block");e.is(".active_operator_x")?e.removeClass("active_operator_x"):e.addClass("active_operator_x")}function click_history_avans(){var e=$(this).attr("op_uo");$.arcticmodal({type:"ajax",url:"forms/form_history_prepaid.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function radio_client_svv(){0==$(this).val()?$(".two_client_box_add").slideUp("slow",function(){$(".one_client_box_add").slideDown()}):$(".one_client_box_add").slideUp("slow",function(){$(".two_client_box_add").slideDown()})}function fly_edit1(){var e=$(this).attr("id_fly");$.arcticmodal({type:"ajax",url:"forms/form_fly_edit1.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function fly_history(){var e=$(this).parents(".booking_sourse").attr("id_offers");$.arcticmodal({type:"ajax",url:"forms/form_fly_history.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function fly_history_trips(){var e=$(this).parents(".trips_block_global").attr("id_trips");$.arcticmodal({type:"ajax",url:"forms/form_fly_history_trips.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function add_edit_comment(){var e=$(this).parents(".booking_sourse").attr("id_offers");$.arcticmodal({type:"ajax",url:"forms/form_add_edit_comment.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function add_edit_comment1(){var e=$(this).parents(".clients_comment").attr("id_offers");$.arcticmodal({type:"ajax",url:"forms/form_add_edit_comment.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function fly_edit(){var e=$(this).parents(".booking_sourse").attr("id_offers");$.arcticmodal({type:"ajax",url:"forms/form_fly_edit.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function fly_edit_trips(){var e=$(this).parents(".trips_block_global").attr("id_trips");$.arcticmodal({type:"ajax",url:"forms/form_fly_edit_trips.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function win_pribl(){var e=$(this).attr("for");$.arcticmodal({type:"ajax",url:"forms/form_history_payment.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function yess_booking(){var e=$(this).parents(".button_yes_no").attr("for");AjaxClient("booking","bron_booking","GET","url="+window.location.href+"&id="+e,"Afterbron_booking",e,0)}function save_booking(){var e=0;$(".sourse_error,.sourse_error1,#name_b,#phone_b,#otziv_area_adaxx,#name_client_b,#date_hidden_table_gr2").removeClass("error_formi"),$(".new_search_add_book").removeClass("error_2019_in"),""==$("#sourse_b").val()&&($(".sourse_error").addClass("error_formi"),e++),""==$("#radio_bk").val()&&($(".sourse_error1").addClass("error_formi"),e++),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),e++),0==$("[name=client_new1_search]").val()?""==$("#name_client_b").val()&&($("#name_client_b").addClass("error_formi"),e++):"0"!=$("[name=id_search_client1]").val()&&""!=$("[name=id_search_client1]").val()||($(".new_search_add_book").addClass("error_2019_in"),e++),""==$("#date_hidden_table_gr2").val()&&($("#date_hidden_table_gr1").addClass("error_formi"),e++),0!=e?($(".error_text_add").empty().append("Не все поля заполнены для сохранения").show(),setTimeout(function(){$(".error_text_add").hide()},7e3)):$("#lalala_add_form").submit()}function save_reports(){var e=0;$("#name_b,#phone_b").removeClass("error_formi"),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),e++),""==$("#phone_b").val()&&($("#phone_b").addClass("error_formi"),e++),0!=e?($(".error_text_add").empty().append("Не все поля заполнены для сохранения").show(),setTimeout(function(){$(".error_text_add").hide()},7e3)):$("#lalala_add_form").submit()}function save_users(){var e=0;$(".sourse_error,.sourse_error1,#name_b,#name_b1,#login_b,#password_b").removeClass("error_formi"),""==$("#sourse_b").val()&&($(".sourse_error").addClass("error_formi"),e++),""==$("#radio_bk").val()&&($(".sourse_error1").addClass("error_formi"),e++),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),e++),""==$("#name_b1").val()&&($("#name_b1").addClass("error_formi"),e++),""==$("#login_b").val()&&($("#login_b").addClass("error_formi"),e++),0!=e?($(".error_text_add").empty().append("Не все поля заполнены для сохранения").show(),setTimeout(function(){$(".error_text_add").hide()},7e3)):$("#lalala_add_form").submit()}function next_step_reports(){var e=0;$("#name_b,#phone_b").removeClass("error_formi"),""==$("#name_b").val()&&e++,""==$("#phone_b").val()&&e++;var t=$(".send_form_reports");0!=e?t.removeClass("greeen"):(t=$(".send_form_reports")).is(".greeen")||t.addClass("greeen")}function next_step_users(){var e=0;$(".sourse_error,.sourse_error1,#name_b,#name_b1,#login_b,#password_b").removeClass("error_formi"),""==$("#sourse_b").val()&&e++,""==$("#radio_bk").val()&&e++,""==$("#name_b").val()&&e++,""==$("#name_b1").val()&&e++,""==$("#login_b").val()&&e++,""==$("#password_b").val()&&e++;var t=$(".send_form_users");0!=e?t.removeClass("greeen"):(t=$(".send_form_users")).is(".greeen")||t.addClass("greeen")}function next_step_operator(){var e=0;$("#name_b").removeClass("error_formi"),""==$("#name_b").val()&&e++;var t=$(".add_invoice_booking");0!=e?t.removeClass("greeen"):(t=$(".add_invoice_booking")).is(".greeen")||t.addClass("greeen")}function next_step_booking(){var e=0;$(".sourse_error,.sourse_error1,#name_b,#otziv_area_adaxx,#phone_b,#name_client_b,#date_hidden_table_gr2").removeClass("error_formi"),$(".new_search_add_book").removeClass("error_2019_in"),""==$("#sourse_b").val()&&e++,0!=$("#radio_bk").length&&""==$("#radio_bk").val()&&e++,""==$("#name_b").val()&&e++,0==$("[name=client_new1_search]").val()?""==$("#name_client_b").val()&&e++:0==$("[name=id_search_client1]").val()&&e++,""==$("#date_hidden_table_gr2").val()&&e++;var t=$(".add_invoice_booking");0!=e?t.removeClass("greeen"):(t=$(".add_invoice_booking")).is(".greeen")||t.addClass("greeen")}function next_step_clients(){var e=0;$("#name_b,#phone_b,#day_b").removeClass("error_formi"),$(".new_search_add_book").removeClass("error_2019_in"),""==$("#name_b").val()&&e++,""==$("#day_b").val()&&e++,""==$("#phone_b").val()&&e++;var t=$(".add_invoice_booking");0!=e?t.removeClass("greeen"):(t=$(".add_invoice_booking")).is(".greeen")||t.addClass("greeen")}window.search_min=1,window.search_deley=800,window.search_class=".loll_soply",window.SliceMM=function(){var e=$(".burger_ok"),t=$(".mobile-nav");e.is(".active")?(e.removeClass("active"),t.removeClass("act"),$("body").removeClass("menu-open")):(e.addClass("active"),t.addClass("act"),$("body").addClass("menu-open"))};var delay1=function(){var i=0;return function(e,t){clearTimeout(i),i=setTimeout(e,t)}}(),delays=function(){var i=0;return function(e,t){clearTimeout(i),i=setTimeout(e,t)}}(),validate11=function(){$(this).val($(this).val().replace(/[^\d.]*/g,"").replace(/([.])[.]+/g,"$1").replace(/^[^\d]*(\d+([.]\d{0,5})?).*$/g,"$1"))},validate12=function(){$(this).val($(this).val().replace(/[^\d]*/g,"").replace(/([])[]+/g,"$1").replace(/^[^\d]*(\d+([]\d{0,5})?).*$/g,"$1"))};function animation_teps_supply(){$(".teps_supply").each(function(e,t){$(this).animate({width:$(this).attr("rel_w")+"%"},2e3,function(){})})}function think_booking(){var e=$(this).parents(".button_yes_no").attr("for");AjaxClient("booking","think_booking","GET","url="+window.location.href+"&id="+e,"After_think_booking",e,0)}function dis_bron(){var e=$(this).attr("dis");$.arcticmodal({type:"ajax",url:"forms/form_disable_booking.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function call_booking(){var e=$(this).parents(".button_yes_no").attr("for");$.arcticmodal({type:"ajax",url:"forms/form_call_booking.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function noo_booking(){var e=$(this).parents(".button_yes_no").attr("for");$.arcticmodal({type:"ajax",url:"forms/form_no_booking.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function add_task_preo(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close"));var e=$(this).parents(".preorders_block_global").attr("id_pre");$.arcticmodal({type:"ajax",url:"forms/form_add_task.php?id="+e+"&pre=1",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function add_preorders_plus(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close"));var e=$(this).parents(".name_docu").attr("is_sha");setTimeout(function(){$.arcticmodal({type:"ajax",url:"forms/form_add_preorders.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})},500)}function sogl_promocod(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close"));var e=$(this).attr("id-bdata");$.arcticmodal({type:"ajax",url:"forms/form_sogl_promocod.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function add_promocod(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close")),$.arcticmodal({type:"ajax",url:"forms/form_add_promocod.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function drop_aff(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close")),$.arcticmodal({type:"ajax",url:"forms/form_drop_money.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function add_task_plus(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close"));var e=$(this).parents(".name_docu").attr("is_sha");$.arcticmodal({type:"ajax",url:"forms/form_add_task.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function AutoResizeTF(){$(".box-modal .js-autoResize-form").each(function(e,t){$(this).autoResize({extraSpace:10})})}function preorders_adds(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close")),$.arcticmodal({type:"ajax",url:"forms/form_add_preorders.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function task_adds(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close")),$.arcticmodal({type:"ajax",url:"forms/form_add_task.php",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function clients_adds(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close"));var e="?tabs="+$(this).attr("tabs_g");0<$(".box-modal [name=posta]").length&&(e=e+"&posta="+$(".box-modal [name=posta]").val()),$.arcticmodal({type:"ajax",url:"forms/form_add_user.php"+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function doc_org(){var e=$(this).attr("iod");$.arcticmodal({type:"ajax",url:"forms/form_doc_org.php?id="+e+"&tabs=0",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function doc_org1(){var e=$(this).attr("iod"),t=$(this).attr("tabs");$.arcticmodal({type:"ajax",url:"forms/form_doc_org.php?id="+e+"&tabs="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function doc_user(){"undefined"!=typeof timerId&&(clearInterval(timerId),$.arcticmodal("close"));var e=$(this).attr("iod");$.arcticmodal({type:"ajax",url:"forms/form_doc_user.php?id="+e+"&tabs=0",beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada"),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}})}function doc_user1(){var e=$(this).attr("iod"),t=$(this).attr("tabs");$.arcticmodal({type:"ajax",url:"forms/form_doc_user.php?id="+e+"&tabs="+t,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function add_answer(){var e=$(this).attr("for");$.arcticmodal({type:"ajax",url:"forms/form_add_answer.php?id="+e,beforeOpen:function(e,t){$(".loader_ada_forms").show(),$(".loader_ada1_forms").addClass("select_ada")},afterOpen:function(e,t){$(".loader_ada_forms").hide(),$(".loader_ada1_forms").removeClass("select_ada")},afterClose:function(e,t){clearInterval(timerId)}})}function add_offers(){var e=$(".add_sourse_booking").attr("for");AjaxClient("booking","add_offers","GET","url="+window.location.href+"&id="+e,"AfterAdd_offers",e,0),$(".button_yes_no").hide(),$(".save_booking").show()}function AfterSearchClient1(e,t){if($(".b_loading_small").remove(),$(".fox_dell1").show(),"ok"==e.status){if("block"!=$(".fox_search_result1").css("display")){$(".fox_search_result1").show();var i=!1;$(document).bind("click.myEvent",function(e){i||0!=$(e.target).closest(".fox_search_result1").length||($(".fox_search_result1").hide(),$(document).unbind("click.myEvent")),i=!1})}$(".fox_search_result1").empty().append(e.query),$(".fox_search_result1").show()}else $(".fox_search_result1").hide()}function AfterTruePhoneP(e,t){var i;"ok"==e.status?"1"==e.echo?(alert_message("ok","Отлично, мы уже знакомы"),(i=$(".box-modal:last")).find(".choice-head-preorder").remove(),$(".js-open-phone").before('<div class="choice-head choice-head-preorder">Связь<em class="hide-mobile"> с клиентом</em><span class="sv-user-taskx js-sv-user-task" style="display: inline;"><i>→</i><span>'+e.name+"</span></span></div>"),$(".js-id-client-task").val(e.id),$(".js-client-type-task").val(e.type),$(".js-client-new").val(0)):(alert_message("ok","Новый клиент, а имя знаете?"),$(".js-client-new").val(1),(i=$(".box-modal:last")).find(".choice-head-preorder").remove(),i.find(".js-new-client-ii").slideDown("slow")):(alert_message("error","Ошибка. Попробуйте еще раз."),$(".js-id-client-task").val(""),$(".js-client-type-task").val(""),$(".js-client-new").val(1),(i=$(".box-modal:last")).find(".choice-head-preorder").remove(),i.find(".js-new-client-ii").slideUp("slow"))}function AfterTruePhone(e,t){"ok"==e.status&&"1"==e.echo&&(!$(".js-true-phone").is("[old_value]")||$(".js-true-phone").val()!=$(".js-true-phone").attr("old_value"))?($(".js-open-phone").show(),$(".js-true-phone").parents(".input_2018").addClass("error_2018"),$(".js-true-search-phone").val(1)):($(".js-open-phone").hide(),$(".js-true-phone").parents(".input_2018").removeClass("error_2018"),$(".js-true-search-phone").val(0))}function AfterSearchTuroper(e,t){var i=$(".js-keyup-search[sopen="+t+"]");"ok"==e.status?(i.parents(".input_2018").find(".js-drop-search").empty().append(e.query),i.parents(".input_2018").find(".js-drop-search").css("transform","scaleY(1)"),i.parents(".input-search-list").find("i").addClass("open-search-active")):i.parents(".input_2018").find(".js-drop-search").css("transform","scaleY(0)")}function Afterbron_booking(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status)if(1==e.count)$.arcticmodal({type:"ajax",url:"forms/form_bron_booking_end.php?id="+t,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){$(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli),ToolTip()},afterClose:function(e,t){clearInterval(timerId)}});else{var i=$("[id_offers]").length;$.arcticmodal({type:"ajax",url:"forms/form_bron_booking.php?id="+t+"&number="+(i-1),afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}}function After_think_booking(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&autoReloadHak()}function AfterAdd_answer(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){var i=$("[op_rel]").length;$(".count_offers_ajax").empty().append(i-1);var a=PadejNumber(i-1,"вопрос к отчету,вопроса к отчету,вопросов к отчету");$(".padej_offers").empty().append(a),$(".add_sourse_reports").before(e.echo)}}function AfterAdd_offers(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){var i=$("#count_sourse").val(),a=parseInt(i)+1,n=$("[id_offers]").length;$(".count_offers_ajax").empty().append(n-1);var s=PadejNumber(n-1,"предложение,предложения,предложений");$(".padej_offers").empty().append(s),$("#count_sourse").val(a),$("#count_sourse1").val(i);var r=$(".replace_mm").html();r=(r=(r=r.replace(/IDMIDD/g,a)).replace(/SIDMIDS/g,i)).replace(/IDMID/g,e.id),$(".replace_mm").before(r),$(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli),$(".money_mask").inputmask("remove"),$(".money_mask").inputmask("numeric",{radixPoint:".",groupSeparator:" ",digits:2,autoGroup:!0,prefix:"",rightAlign:!1,oncleared:function(){self.Value("")}}),$(".date_time_picker").inputmask("remove"),$(".date_time_picker").inputmask("datetime",{mask:"1.2.y h:s",placeholder:"dd.mm.yyyy hh:mm",separator:".",alias:"dd.mm.yyyy"})}}function bron_offers_select(){var e=$(this).parents(".booking_sourse").attr("number_sourse"),t=$(this).parents(".booking_sourse").attr("id_offers");$.arcticmodal({type:"ajax",url:"forms/form_select_offers.php?id="+t+"&number="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function js_dell_form_no(e){var t=$(".form"+e.data.key);clearInterval(timerId),$.arcticmodal("close"),AjaxClient("task","dell_task","GET","url="+window.location.href+"&tk="+t.find(".h111").attr("mor")+"&id="+t.find(".h111").attr("for"),"AfterDellTask",t.find(".h111").attr("for")+","+e.data.key,0)}function exit_form_active(e){$(".arcticmodal-close",".form"+e.data.key).click()}function dell_reports(){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_dell_reports.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function dell_users(){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_dell_users.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function dell_operator(){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_dell_operator.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function edit_answer(){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_edit_answer.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function dell_answer(){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_dell_answer.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function dell_offers(){var e=$(this).attr("id_rel"),t=$(this).parents(".booking_sourse").attr("number_sourse");$.arcticmodal({type:"ajax",url:"forms/form_dell_offers.php?id="+e+"&number="+t,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}function save_anna(){var e=$(this).parents(".answer_block").attr("op_rel"),t=$(this).parents(".answer_block").find("#otziv_area_adaxx_"+e).val();$(this).hide(),AjaxClient("reports","save_answer","GET","url="+window.location.href+"&id="+e+"&text="+encodeURIComponent(t),"AfterSaveAnswer",e,0)}function InputFocusNewTours(){var e=$(this).parents(".choice-client-2019");e.is(".active_tours_focus")||e.addClass("active_tours_focus")}function InputBlurNewTours(){$(this).parents(".choice-client-2019").removeClass("active_tours_focus")}function InputFocusNew(){$(this).val(),$(this).prev("label");var e=$(this).parents(".input_2018");e.is(".active_in_2018")||e.addClass("active_in_2018"),e.is(".active1_in_2018")||e.addClass("active1_in_2018"),0!=e.find(".cal_2018").length&&$(".date___2019").show()}function KeyUpInput(){$(this).is(".gloab")&&(""!=$(this).val()&&0!=$(this).val()&&$(this).parents(".input_2018").removeClass("required_in_2018"),$(this).parents(".input_2018").removeClass("error_2018"))}function InputBlurNew(){var e=$(this).val(),t=($(this).prev("label"),$(this).parents(".input_2018"));t.removeClass("active1_in_2018"),""==e&&(t.removeClass("active_in_2018"),$(this).is(".gloab")?t.addClass("required_in_2018"):t.removeClass("required_in_2018"))}function js_eshe_ring(){var e=$(this);e.is(".active-ring")?(e.removeClass("active-ring"),e.parents(".ring_block").find(".max-day-ring").slideUp("slow")):(e.addClass("active-ring"),e.parents(".ring_block").find(".max-day-ring").slideDown("slow"))}function js_dell_buy_tours(){var e=$(this).attr("id_rel"),t=$(this).parents(".info-client-ruler");if($(".tot_buy_id").val(""),$(".tot_buy_type").val(""),t.is(".active-turist-turs")){$(".tot_fly_id").val(AddDellList($(".tot_fly_id").val(),e,"dell"));var i=parseFloat($(".tot_fly_count").val());0!=i&&$(".tot_fly_count").val(i-1),t.remove(),UpdateNumberTuris()}else t.remove();$(".js-buy-my-tours").find(".buy_turs").show()}function js_dell_fly_tours(){var e=$(this).attr("id_rel"),t=$(this).parents(".info-client-ruler");$(".tot_fly_id").val(AddDellList($(".tot_fly_id").val(),e,"dell"));var i=parseFloat($(".tot_fly_count").val());0!=i&&$(".tot_fly_count").val(i-1),t.remove(),UpdateNumberTuris()}function DellImageInvoice(){var e=$(this).attr("for");AjaxClient("booking","del_img","GET","url="+window.location.href+"&id="+e,"AfterDellImageInvoice",e,0)}function DellImageReports(){var e=$(this).attr("for");AjaxClient("reports","del_img","GET","url="+window.location.href+"&id="+e,"AfterDellImageReports",e,0)}function UpdateImageInvoice(e){AjaxClient("booking","update_img","GET","url="+window.location.href+"&id="+e,"AfterUpdateImageInvoice",e,0)}function UpdateImageReports(e){AjaxClient("reports","update_img","GET","url="+window.location.href+"&id="+e,"AfterUpdateImageReports",e,0)}function message_load(){if($(".history_message").is(":visible")){$(".history_message").hide();var e=$(".content_block").attr("id_content");AjaxClient("message","load_message","GET","url="+window.location.href+"&id="+e+"&n_st="+$(".content_block").attr("n")+"&s="+$(".history_message").attr("s_m"),"AfterMESS",e,0)}}function scroll_to_bottom(e){var t=$("body").height();$("html,body").animate({scrollTop:t},e)}function inWindow(e){var i=$(window).scrollTop(),a=$(window).height(),t=$(e),n=[];return t.each(function(){var e=$(this),t=e.offset();i<=t.top&&e.height()+t.top<i+a&&n.push(this)}),$(n)}function windowSize(){}function trim_number(e){return e=e.replace(/\s+/g,"")}function Dialog(e){if(0==$(e.target).closest(".del_dialog").length){var t=$(this).attr("rel_diagol");$(this).attr("href","/message/dialog/"+t+"/"),$(this).trigger("Click")}}function animation_teps(){$(".teps").each(function(e,t){$(this).animate({width:$(this).attr("rel_w")+"%"},2e3,function(){})})}function maskk(e){e.val(e.val().replace(/[^\d.]*/g,"").replace(/([.])[.]+/g,"$1").replace(/^[^\d]*(\d+([.]\d{0,5})?).*$/g,"$1")),(0<$("[name=save_zayy]").length?savedefault_zay:savedefault)(e)}function maskk1(e){e.val(e.val().replace(/[^\d]*/g,"").replace(/([])[]+/g,"$1").replace(/^[^\d]*(\d+([]\d{0,5})?).*$/g,"$1")),(0<$("[name=save_zayy]").length?savedefault_zay:savedefault)(e)}var label_show_load=function(){$(".label_s").each(function(e,t){$(this).prev("label").length&&(""==$(this).val()?$(this).prev("label").hide():$(this).prev("label").show())})},label_show=function(){$(this).prev("label").length&&(""==$(this).val()?$(this).prev("label").hide():$(this).prev("label").show())};function del_dialog(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_dell_dialog.php?id="+$(this).attr("for"),afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}}),!1}function initializeTimer(){var e=(1e3*(new Date/1e3+1800)-new Date)/1e3;if(0<e){var t=e/60,i=t/60;t=60*(i-Math.floor(i)),i=Math.floor(i),e=Math.floor(60*(t-Math.floor(t))),t=Math.floor(t),setTimePage(i,t,e),timerId=setInterval(function(){0==e?0==t?0==i?showMessage(timerId):(i--,e=t=59):(t--,e=59):e--,setTimePage(i,t,e)},1e3)}}function setTimePage(e,t,i){t<10&&(t="0"+t),i<10&&(i="0"+i),$(".clock_table").empty().append(t+":"+i),t<5&&$(".clock_table").show()}function showMessage(e){clearInterval(e),$.arcticmodal("close")}function WindowLogin(){$(document).unbind("mousemove.time keydown.time scroll.time"),$.arcticmodal({type:"ajax",url:"forms/login.php?url="+window.location.href,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){}}),idleState=!0}function autoReloadHak(){var e=self.location;location.href=e}function TimeHak(){var e=$.cookie("tsl");null!=e&&1==e&&autoReloadHak()}function TimeSystem(){isNaN(localStorage.getItem("tss"))||idTimeStampe!=localStorage.getItem("tss")&&(idTimeStampe=localStorage.getItem("tss"),clearTimeout(idleTimer),idleState=!1,idleTimer=setTimeout(timesss,idleWait))}function js_touroper_eye(){var e=$(".content").attr("iu"),t=$(this).attr("spp");$(this).is(".tours-eas-open")?($(this).removeClass("tours-eas-open"),$.cookie("eye_t_"+e+"_"+t,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("eye_t_"+e+"_"+t,"1","add"),1==t?$(".trips-b-operator").hide():$(".trips-b-comission").hide()):($(this).addClass("tours-eas-open"),$.cookie("eye_t_"+e+"_"+t,null,{path:"/",domain:window.is_session,secure:!1}),1==t?$(".trips-b-operator").show():$(".trips-b-comission").show()),classblockTrips()}function classblockTrips(){var e=1,t=1;$(".trips_block_global:first .trips-b-operator").is(":visible")||(e=0),$(".trips_block_global:first .trips-b-comission").is(":visible")||(t=0),$(".trips_block_global").removeClass("block_t00"),$(".trips_block_global").removeClass("block_t10"),$(".trips_block_global").removeClass("block_t01"),0==e&&0==t&&$(".trips_block_global").addClass("block_t00"),1==e&&0==t&&$(".trips_block_global").addClass("block_t10"),0==e&&1==t&&$(".trips_block_global").addClass("block_t01")}function NotificationSystem(){if($(".users_rule").is("[not]")){var e=0;0<$(".js-task-cloud").length&&(e=1),AjaxClient("notification","even","GET","tk="+$(".users_rule").attr("not")+"&tk1="+$(".users_rule").attr("tas")+"&tcloud="+e,"AfterNofi",nprogress=1,0,1)}}function NotifSystem(){"undefined"==typeof NotifVar&&($(document).bind("mousemove.notif keydown.notif scroll.notif",function(){clearTimeout(idleTimerx),1==idleStatex&&(idleWait_yes=idleWait_start,clearInterval(timerSx),timerSx=setInterval(NotificationSystem,idleWait_yes),NotificationSystem()),idleStatex=!1,idleWait_yes=idleWait_start,idleTimerx=setTimeout(timesssx,idleWait_stop)}),timerSx=setInterval(NotificationSystem,idleWait_yes),$("body").trigger("mousemove"))}function timesssx(){idleWait_yes=idleWait_end,idleStatex=!0,clearInterval(timerSx),timerSx=setInterval(NotificationSystem,idleWait_yes)}function updateloginhak(){timerH=setInterval(TimeHak,15e3)}function ExitSystem(){"undefined"==typeof LoginVar&&(timerS=setInterval(TimeSystem,1e3),$(document).bind("mousemove.time keydown.time scroll.time",function(){clearTimeout(idleTimer),localStorage.setItem("tss",$.now()),idleState,idleState=!1,idleTimer=setTimeout(timesss,idleWait)}),$("body").trigger("mousemove"))}function timesss(){clearInterval(timerS),setTimeout(function(){autoReload()},6e4),$(document).unbind("mousemove.time keydown.time scroll.time"),$.cookie("tsl",null,{path:"/",domain:window.is_session,secure:!1}),$.arcticmodal({type:"ajax",url:"forms/login.php?url="+window.location.href,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){}}),idleState=!0}function compareNumbers(e,t){return e-t}function CookieList(e,t,i,a){var n=$.cookie(e);if(null==n)$.cookie(e,t,{expires:60,path:"/",domain:window.is_session,secure:!1,samesite:"lax"});else if("del"==i){for(var s=n.split("."),r="",o=0,l=0;l<s.length;l++)s[l]!=t&&""!=s[l]&&(r=0==o?s[l]:r+"."+s[l],o++);""==r?$.cookie(e,null,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"}):$.cookie(e,r,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"})}else if(void 0===a)$.cookie(e,n+"."+t,{path:"/",domain:window.is_session,secure:!1,samesite:"lax"});else if("sort"==a){var c=(n+"."+t).split(".");c=c.sort(compareNumbers),$.cookie(e,c.join("."),{path:"/",domain:window.is_session,secure:!1,samesite:"lax"})}}function AddDellList(e,t,i){if(""==e&&"add"==i)return t;if("dell"==i){for(var a=e.split(","),n="",s=0,r=0;r<a.length;r++)a[r]!=t&&""!=a[r]&&(n=0==s?a[r]:n+","+a[r],s++);return""==n?"":n}for(a=e.split(","),n="",s=0,r=0;r<a.length;r++)a[r]==t&&s++;return 0!=s?0:e+","+t}var send_meee=function(){$("#otziv_area").val();if($(".otziv_mess").removeClass("error_formi"),""==$("#otziv_area").val())$(".otziv_mess").addClass("error_formi");else{var e=$(".content_block").attr("id_content");AjaxClient("message","send_message_global","GET","url="+window.location.href+"&id="+e+"&text="+$("#otziv_area").val(),"AfterSendMM",e,0),$("#otziv_area").val("")}},SendMessage=function(){var e=$(this).attr("sm");$("[iu]").attr("iu")!=e&&$.arcticmodal({type:"ajax",url:"forms/form_message.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){}})},UploadScan=function(){var e=$(this).attr("id_upload");$("[name=myfile"+e+"]").trigger("click")};function log(e){$("#log").empty().append(e)}function upload(e,i){var t=new XMLHttpRequest;t.onload=t.onerror=function(){200==this.status?($("[id_upload="+i+"]").remove(),$(".scap_load_"+i).remove(),updatecash(i)):($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide())},t.upload.onprogress=function(e){$("[id_upload="+i+"]").hide(),$(".scap_load_"+i).show();var t=Math.round(100*e.loaded/e.total);$(".scap_load_"+i).find(".scap_load__").width(t)},t.open("POST","implementer/upload.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",i),t.send(a)}var UploadScanChange=function(){var e=$(this).parents("form").attr("id_sc");return file=this.files[0],file&&upload(file,e),!1},view_notification=function(){if($(".noti_block").is(":visible"))$(".noti_block").remove(),$(".view__not").hide(),$(".not_li").find("i").hide();else{$(".view__not").append('<div class="noti_block"><div class="title_noti"><ul class="t_ul"><li>Уведомления</li><li><i class="noti_co" style="display:none;"><span class="noti_coc"></span></i></li></ul></div><div class="scro"></div></div>'),$(".noti_block").find(".scro").empty().append('<div class="loader_inter"><div></div><div></div><div></div><div></div></div>');AjaxClient("notification","view_notification","GET","","AfterVVN",1,0)}},YesTask1=function(){if($(this).is("[rel_taskk]")&&$.isNumeric($(this).attr("rel_taskk"))){var e=$(this).attr("rel_taskk");$.arcticmodal({type:"ajax",url:"forms/form_yes_task.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}return!1},YesTask=function(){if($(this).is("[rel_taskk]")&&$.isNumeric($(this).attr("rel_taskk"))){var e=$(this).attr("rel_taskk");$.arcticmodal({type:"ajax",url:"forms/form_yes_task.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}return!1},DellOrg=function(){if($(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_dell_org.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}return!1},DellTask=function(){if($(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_dell_task.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}return!1},DellClients=function(){if($(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_dell_clients.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}return!1},DellBooking=function(){if($(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))){var e=$(this).attr("id_rel");$.arcticmodal({type:"ajax",url:"forms/form_dell_booking.php?id="+e,afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}})}return!1},DellNotif=function(){$(this).is("[id_rel]")&&$.isNumeric($(this).attr("id_rel"))&&(AjaxClient("notification","del_notif","GET","url="+window.location.href+"&id="+$(this).attr("id_rel"),"AfterDellNot",$(this).attr("id_rel"),0),$("[rel_noti="+$(this).is("[id_rel]")+"]").hide());return!1},tabs_client_add=function(){var e=$(this).attr("id");$(this).is(".active")||($(".client_window .px_bg").empty().append('<div class="b_loading_small" style="position:relative;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(".js-tabs-menu").find(".tabsss1").removeClass("active"),$(".js-tabs-menu").find(".tabsss1[id="+e+"]").addClass("active"),AjaxClient("clients","tabs_organ","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&tk="+$(".h111").attr("mor")+"&id="+$(".h111").attr("for"),"AfterTabsInfoAdd",$(this).attr("id"),0))},tabs_org=function(){var e=$(this).attr("id");$(this).is(".active")||($(".client_window .px_bg").empty().append('<div class="b_loading_small" style="position:relative;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(".js-tabs-menu_org").find(".tabsss_org").removeClass("active"),$(".js-tabs-menu_org").find(".tabsss_org[id="+e+"]").addClass("active"),AjaxClient("clients","tabs_info_org","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&tk="+$(".h111").attr("mor")+"&id="+$(".h111").attr("for"),"AfterTabsInfoOrg",$(this).attr("id"),0))},tabs_client_choice=function(){var e=$(this).attr("id");if(!$(this).is(".active")){$(".js-tabs-menu-choiche").find(".tabsss_choice").removeClass("active"),$(".js-tabs-menu-choiche").find(".tabsss_choice[id="+e+"]").addClass("active"),$(".js-choice-keyup").val(""),$(".js-choice-yyy").attr("id_rel",0),$(".js-choice-yyy").attr("tabs",e),$(".js-choice-yyy").removeClass("yes_choice_client"),$(".list_choice_yes").empty(),2==e&&($(".js-new_open_client").find("i").empty().append("новая организация"),$(".js-new_open_client").attr("tabs_g",1),$(".js-choice-keyup").attr("placeholder","Название организации, ИНН"),$(".js-choice-cch").find(".js-help-search-2021").hide()),1==e&&($(".js-new_open_client").find("i").empty().append("новый клиент"),$(".js-new_open_client").attr("tabs_g",0),$(".js-choice-keyup").attr("placeholder","Фамилия, телефон или код клиента"),$(".js-choice-cch").find(".js-help-search-2021").show()),3==e&&($(".js-new_open_client").find("i").empty().append("новый клиент"),$(".js-new_open_client").attr("tabs_g",2),$(".js-choice-keyup").attr("placeholder","Фамилия, телефон или код клиента"),$(".js-choice-cch").find(".js-help-search-2021").show());var t="url="+window.location.href+"&all="+$(".js-eshe-client-x").attr("all")+"&tk="+$(".js-s_form_xx").attr("mor")+"&id="+$(".js-s_form_xx").attr("for")+"&search="+encodeURIComponent($(".js-choice-keyup").val())+"&tabs="+e;$(".js-icon-load").hide().after('<div class="b_loading_small" style="margin-right:-20px; position:relative; top: 0px; right: 0px; padding-top:0px;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("clients","search_client_tours","GET",t,"AfterSearchClientT",1,0)}},tabs_client=function(){var e=$(this).attr("id");$(this).is(".active")||($(".client_window .px_bg").empty().append('<div class="b_loading_small" style="position:relative;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(".js-tabs-menu").find(".tabsss").removeClass("active"),$(".js-tabs-menu").find(".tabsss[id="+e+"]").addClass("active"),AjaxClient("clients","tabs_info","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&tk="+$(".h111").attr("mor")+"&id="+$(".h111").attr("for"),"AfterTabsInfo",$(this).attr("id"),0))},tabs_preorders=function(e){var t=$(this).attr("id");(0!=t?$(this).parents(".mm_w-preorders").addClass("active-trips-menu"):($(this).parents(".mm_w-preorders").removeClass("active-trips-menu"),$(this).parents(".mm_w-preorders").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")),$(this).is(".active"))?($(this).parents(".mm_w-preorders").removeClass("active-trips-menu"),$(this).parents(".mm_w-preorders").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")):0!=t&&($(this).parents(".mm_w-preorders").next().empty().append('<div class="b_loading_small" style="position:relative; left: calc(50% - 30px); "><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(this).parents(".mm_w-preorders").next().slideDown("slow"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key+"[id="+t+"]").addClass("active"),AjaxClient("preorders","tabs_info","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&id="+$(this).parents(".preorders_block_global").attr("id_pre"),"AfterTabsInfoPreorders",$(this).attr("id")+","+$(this).parents(".preorders_block_global").attr("id_pre"),0,1))},tabs_trips=function(e){var t=$(this).attr("id");(0!=t?$(this).parents(".mm_w-trips").addClass("active-trips-menu"):($(this).parents(".mm_w-trips").removeClass("active-trips-menu"),$(this).parents(".mm_w-trips").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")),$(this).is(".active"))?($(this).parents(".mm_w-trips").removeClass("active-trips-menu"),$(this).parents(".mm_w-trips").next().empty().hide(),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active")):0!=t&&($(this).parents(".mm_w-trips").next().empty().append('<div class="b_loading_small" style="position:relative; left: calc(50% - 30px); "><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(this).parents(".mm_w-trips").next().slideDown("slow"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active"),$(this).parents(".js-tabs-menu").find(".tabs_"+e.data.key+"[id="+t+"]").addClass("active"),AjaxClient("tours","tabs_info","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&id="+$(this).parents(".trips_block_global").attr("id_trips"),"AfterTabsInfoTrips",$(this).attr("id")+","+$(this).parents(".trips_block_global").attr("id_trips"),0,1))},tabs_task=function(e){var t=$(this).attr("id");$(this).is(".active")||($(".form"+e.data.key+" .px_bg").empty().append('<div class="b_loading_small" style="position:relative;"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),$(".form"+e.data.key+" .js-tabs-menu").find(".tabs_"+e.data.key).removeClass("active"),$(".form"+e.data.key+" .js-tabs-menu").find(".tabs_"+e.data.key+"[id="+t+"]").addClass("active"),AjaxClient("task","tabs_info","GET","url="+window.location.href+"&id_tabs="+$(this).attr("id")+"&tk="+$(".form"+e.data.key+" .h111").attr("mor")+"&id="+$(".form"+e.data.key+" .h111").attr("for"),"AfterTabsInfoTask",$(this).attr("id")+","+e.data.key,0))},savedefault=function(e){if($("#save").length){var t=e.attr("defaultv");e.val()!=t&&$("#save").attr("save","1"),1==$("#save").attr("save")&&($(".add_nar").show(),$(".pod_nar").hide())}};function send_form_users(){var e=0;$(".sourse_error,.sourse_error1,#name_b,#name_b1,#login_b,#password_b").removeClass("error_formi"),""==$("#sourse_b").val()&&($(".sourse_error").addClass("error_formi"),e++),""==$("#radio_bk").val()&&($(".sourse_error1").addClass("error_formi"),e++),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),e++),""==$("#name_b1").val()&&($("#name_b1").addClass("error_formi"),e++),""==$("#login_b").val()&&($("#login_b").addClass("error_formi"),e++),""==$("#password_b").val()&&($("#password_b").addClass("error_formi"),e++),0==e&&$(this).is(".greeen")&&$("#lalala_add_form").submit()}function send_form_reports(){var e=0;$("#name_b,#phone_b").removeClass("error_formi"),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),e++),""==$("#phone_b").val()&&($("#phone_b").addClass("error_formi"),e++),0==e&&$(this).is(".greeen")&&$("#lalala_add_form").submit()}function send_form_operator(){var e=0;$("#name_b").removeClass("error_formi"),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),e++),$(".js-company-xxc i").is(".active_task_cb")||(alert_message("error","Заполните Организацию"),e++),0==e&&$(this).is(".greeen")&&$("#lalala_add_form").submit()}function send_form_clients(){var e=0;$(".sourse_error,#name_b,#otziv_area_adaxx,#phone_b,#day_b,#email_b,#company_b").removeClass("error_formi"),$(".new_search_add_book").removeClass("error_2019_in"),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),e++),""==$("#phone_b").val()&&($("#phone_b").addClass("error_formi"),e++),""==$("#day_b").val()&&($("#day_b").addClass("error_formi"),e++),0==e&&$(this).is(".greeen")&&$("#lalala_add_form").submit()}function send_form_booking(){var e=0;$(".sourse_error,.sourse_error1,#name_b,#otziv_area_adaxx,#phone_b,#name_client_b,#date_hidden_table_gr2").removeClass("error_formi"),$(".new_search_add_book").removeClass("error_2019_in"),0!=$("#radio_bk").length&&""==$("#radio_bk").val()&&($(".sourse_error1").addClass("error_formi"),e++),""==$("#sourse_b").val()&&($(".sourse_error").addClass("error_formi"),e++),""==$("#name_b").val()&&($("#name_b").addClass("error_formi"),e++),0==$("[name=client_new1_search]").val()?""==$("#name_client_b").val()&&($("#name_client_b").addClass("error_formi"),e++):"0"!=$("[name=id_search_client1]").val()&&""!=$("[name=id_search_client1]").val()||($(".new_search_add_book").addClass("error_2019_in"),e++),""==$("#date_hidden_table_gr2").val()&&($("#date_hidden_table_gr1").addClass("error_formi"),e++),0==e&&$(this).is(".greeen")&&$("#lalala_add_form").submit()}function radio_checkbox_no_yes(){if(null==$(this).parents(".radioselect").find(".radio_b").attr("readonly")){var e=$(this).parents(".radio_material"),t=e.attr("radio_id");if(e.is(".active_radio"))e.removeClass("active_radio"),e.find(".radio_"+t).val(0).change(),$(this).parents(".radioselect").find(".radio_b").val("").change();else{$(this).parents(".radioselect").find(".radio_material").each(function(e,t){$(this).removeClass("active_radio");var i=$(this).attr("radio_id");$(this).find(".radio_"+i).val(0).change()}),e.addClass("active_radio"),e.find(".radio_"+t).val(1).change(),$(this).parents(".radioselect").find(".radio_b").val(t).change()}}}function wallet_checkbox(){if(null==$(this).parents(".cha_1").find(".sourse_b").attr("readonly")){var e=$(this).parents(".wallet_material"),t=e.attr("wall_id");e.is(".active_wall")?(e.removeClass("active_wall"),e.find(".yop_"+t).val(0)):(e.addClass("active_wall"),e.find(".yop_"+t).val(1));var i=$(this).parents(".cha_77").find(".wallet_material"),a="",n=0;i.each(function(e,t){$(this).hasClass("active_wall")&&(a=0==n?$(this).attr("wall_id"):a+","+$(this).attr("wall_id"),n++)}),$(this).parents(".cha_77").find(".sourse_b").val(a)}}function radio_checkbox(){if(null==$(this).parents(".radioselect").find(".radio_b").attr("readonly")){var e=$(this).parents(".radio_material"),t=e.attr("radio_id");if(!e.is(".active_radio")){$(this).parents(".radioselect").find(".radio_material").each(function(e,t){$(this).removeClass("active_radio");var i=$(this).attr("radio_id");$(this).find(".radio_"+i).val(0).change()}),e.addClass("active_radio"),e.find(".radio_"+t).val(1).change(),$(this).parents(".radioselect").find(".radio_b").val(t).change()}}}function UploadInvoice_old(){var e=$(this).attr("id_upload");$("[name=myfiles"+e+"]").trigger("click")}function AfterSendMM(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&(0==$(".sego_mess").length&&$(".padding_mess").append('<div class="dialog_clear"></div><div class="message_date"><div><span class="sego_mess">сегодня</span></div></div>'),$(".padding_mess").append('<div class="dialog_clear"></div>'+e.echo),scroll_to_bottom(2e3),$("#otziv_area").val(""))}function AfterCardClient(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){if(1==t){if($(".js-buy-turs-client").parents(".block-add-tours").find(".b_loading_small").remove(),$(".js-buy-turs-client").parents(".block-add-tours").append(e.echo),$(".tot_buy_id").val(e.id_tabs),$(".tot_buy_type").val(e.tabs),1==e.tabs){if(0!=(r=AddDellList($(".tot_fly_id").val(),e.id_tabs,"add"))&&$(".tot_fly_id").val(r),0<$(".js-fly-my-tours").find(".info-client-ruler[id_rules="+e.id_tabs+"]").length)$(".js-fly-my-tours").find(".info-client-ruler[id_rules="+e.id_tabs+"]").remove();else{var i=parseFloat($(".tot_fly_count").val());$(".tot_fly_count").val(i+1)}UpdateNumberTuris()}$(".js-fly-my-tours").show()}if(2==t){$(".js-fly-turs-client").parents(".block-add-tours").find(".b_loading_small").remove(),$(".js-fly-turs-client").parents(".buy_turs").show();var a=e.id_tabs.split(",");if(1==a.length){if(0!=(r=AddDellList($(".tot_fly_id").val(),e.id_tabs,"add"))){$(".tot_fly_id").val(r);i=parseFloat($(".tot_fly_count").val());if($(".tot_fly_count").val(i+1),0<$(".js-buy-my-tours").find("[id_rules="+e.id_tabs+"]").length)(o=$(".js-buy-my-tours").find("[id_rules="+e.id_tabs+"]")).is("[type_co=1]")?(o.find(".choice-radio i").removeClass("active_task_cb"),o.find(".js-loli-butt").removeClass("active_pass"),o.find(".loli_turs input").val(0),o.addClass("active-turist-turs")):$(".js-fly-turs-client").parents(".buy_turs").before(e.echo1),UpdateNumberTuris();else $(".js-fly-turs-client").parents(".buy_turs").before(e.echo1),UpdateNumberTuris()}}else for(var n=e.echo1.split("/2/"),s=0;s<a.length;s++){var r;if(0!=(r=AddDellList($(".tot_fly_id").val(),a[s],"add"))){$(".tot_fly_id").val(r);var o;i=parseFloat($(".tot_fly_count").val());if($(".tot_fly_count").val(i+1),0<$(".js-buy-my-tours").find("[id_rules="+a[s]+"]").length)(o=$(".js-buy-my-tours").find("[id_rules="+a[s]+"]")).is("[type_co=1]")?(o.find(".choice-radio i").removeClass("active_task_cb"),o.find(".js-loli-butt").removeClass("active_pass"),o.find(".loli_turs input").val(0),o.addClass("active-turist-turs")):$(".js-fly-turs-client").parents(".buy_turs").before(n[s]),UpdateNumberTuris();else $(".js-fly-turs-client").parents(".buy_turs").before(n[s]),UpdateNumberTuris()}}}ToolTip()}}function AfterNofi(e,t){if(nprogress=0,"update"==e.status){var i=0,a="";0!=$(".message_block").length&&(i=$(".message_block").attr("id_content"),a=$("[dmes_e]:last").attr("dmes_e")),AjaxClient("notification","notification","GET",e="tk="+e.token+"&id_dialog="+i+"&date="+a,"AfterNotification","1",0)}"update_task"==e.status&&AjaxClient("task","update_task_even","GET",e="tk="+e.token1,"AfterCloudTask","1",0)}function AfterDellTask(e,t){null!=t&&("string"==typeof t?t=t.split(","):t[0]=t),"reg"==e.status&&WindowLogin(),"ok"==e.status&&0<$(".js-global-task-link").length&&$('.task_block_global[id_task="'+t[0]+'"]').slideUp("slow",function(){$('.task_block_global[id_task="'+t[0]+'"]').remove()})}function AfterDellImageInvoice(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".img_invoice").find("[sop="+t+"]").remove(),0==$(".img_invoice").find("li").length&&($(".img_invoice").hide(),$(".dollor_yes").before('<div class="attach_no">нет товарного чека</div>')))}function AfterDellImageReports(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".img_invoice").find("[sop="+t+"]").remove(),0==$(".img_invoice").find("li").length&&$(".img_invoice").hide())}function AfterDellImageSupply(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".img_ssoply").find("[sop="+t+"]").remove(),0==$(".img_ssoply").find("li").length&&$(".img_ssoply").hide())}function AfterTabsInfoPreorders(e,t){null!=t&&("string"==typeof t?t=t.split(","):t[0]=t),"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".preorders_block_global[id_pre="+t[1]+"]").find(".px_bg_trips").empty().append(e.query),NumberBlockFile(),ToolTip(),3!=t[0]&&4!=t[0]||($(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli)))}function AfterTabsInfoTrips(e,t){null!=t&&("string"==typeof t?t=t.split(","):t[0]=t),"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".trips_block_global[id_trips="+t[1]+"]").find(".px_bg_trips").empty().append(e.query),NumberBlockFile(),ToolTip(),3!=t[0]&&4!=t[0]||($(".slct").unbind("click.sys"),$(".slct").bind("click.sys",slctclick),$(".drop").find("li").unbind("click"),$(".drop").find("li").bind("click",dropli)))}function AfterUpdateOrg(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status)for(var i=["js-glo-n-","js-glo-d-","js-glo-a-","js-glo-t-","js-glo-e-","js-glo-in-","js-glo-kp-","js-glo-og-","js-glo-ok-","js-glo-rs-","js-glo-bi-","js-glo-ba-","js-glo-ko-"],a=e.echo.split("/-"),n=0,s=0,r=0;r<a.length;r++)"0"!=a[r]&&"dell"!=a[r]&&($("."+i[r]+t).empty().show().append(a[r]),!(0<$(".js-buy-my-tours").length)||r<5?$("."+i[r]+t).empty().show().append(a[r]):($("."+i[r]+t).empty().show().append(a[r]),5<=r&&r<9&&"—"!=a[r]&&"0"!=a[r]&&n++,0!=n?($(".label-empty-code-"+t).hide(),$(".label-filled-code-"+t).show()):($(".label-empty-code-"+t).show(),$(".label-filled-code-"+t).hide()),9<=r&&r<13&&"—"!=a[r]&&"0"!=a[r]&&s++,0!=s?($(".label-empty-rek-"+t).hide(),$(".label-filled-rek-"+t).show()):($(".label-empty-rek-"+t).show(),$(".label-filled-rek-"+t).hide()))),"dell"==a[r]&&1==r&&$("."+i[r]+t).hide()}function AfterClientEshe(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".js-eshe-client-x").before(e.echo),1==e.eshe?$(".js-eshe-client-x").attr("pg",e.pg).empty().append("<span>показать еще</span>"):($(".js-eshe-client-x").hide(),$(".js-eshe-client-x").empty().append("<span>показать еще</span>")),ToolTip())}function click_mmmt(){nall_buy_tips()}function AfterUpdateCash(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".sdat-cash").remove(),$(".js-kuda-dd").prepend(e.echo),0!=".js-kuda-dd1".length&&($(".sdat-cash1").remove(),$(".js-kuda-dd1").prepend(e.echo1)),$(".money-summ span").attr("old_number",ctrim($(".money-summ span").text())),$(".money-summ span").empty().append(e.cash),$(".js-number-minus").attr("old_number",ctrim($(".js-number-minus").text())),$(".js-number-minus").empty().append(e.minus),$(".js-number-plus").attr("old_number",ctrim($(".js-number-plus").text())),$(".js-number-plus").empty().append(e.plus),number_animate(),ToolTip())}function AfterUpdateFinance(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status)for(var i=["js-fin-0","js-fin-1","js-fin-2","js-fin-3"],a=t.split(","),n=0;n<4;n++)"0"!=a[n]&&(0==n&&($("."+i[n]).empty().show().append(e.echo),animation_graf()),1==n&&(window.chart2.data=e.chart2),2==n&&(window.chart.data=e.chart,setTimeout(function(){legendCreate()},1e3)),3==n&&(window.chart1.data=e.chart1,setTimeout(function(){legendCreate1()},1e3)))}function AfterUpdateUser(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status)for(var i=["js-glu-f-","js-glu-d-","js-glu-s-","js-glu-fs-","js-glu-fe-","js-glu-t-","js-glu-pol-","js-glu-latin-","js-glu-ints-","js-glu-intn-","js-glu-intk-","js-glu-intko-","js-glu-intd-","js-glu-ines-","js-glu-inen-","js-glu-inek-","js-glu-ineko-"],a=e.echo.split("/-"),n=0,s=0,r=0;r<a.length;r++)"0"!=a[r]&&"dell"!=a[r]&&($("."+i[r]+t).empty().show().append(a[r]),0<$(".js-buy-my-tours").length?r<8?6==r?(1==a[r]&&($("."+i[r]+t).empty().show().append("(MR)"),$("."+i[r]+t).attr("data-tooltip","мистер")),2==a[r]&&($("."+i[r]+t).empty().show().append("(MRS)"),$("."+i[r]+t).attr("data-tooltip","миссис"))):$("."+i[r]+t).empty().show().append(a[r]):($("."+i[r]+t).empty().show().append(a[r]),8<=r&&r<13&&"—"!=a[r]&&"0"!=a[r]&&n++,0!=n?($(".label-empty-int-"+t).hide(),$(".label-filled-int-"+t).show()):($(".label-empty-int-"+t).show(),$(".label-filled-int-"+t).hide()),13<=r&&r<17&&"—"!=a[r]&&"0"!=a[r]&&s++,0!=s?($(".label-empty-inn-"+t).hide(),$(".label-filled-inn-"+t).show()):($(".label-empty-inn-"+t).show(),$(".label-filled-inn-"+t).hide())):$("."+i[r]+t).empty().show().append(a[r])),"dell"==a[r]&&2==r&&$("."+i[r]+t).hide()}function AfterMyTask(e,t){if("reg"==e.status&&WindowLogin(),"error"==e.status){var i=$('.task_clock_selection[id_task="'+t+'"]').find(".js-choice-task-y"),a=i.find("i"),n=i.find("input").val();a.is(":visible")&&(0!=n||a.is(".active_task_cb")?(i.find("input").val(0),i.find(".choice-radio i").removeClass("active_task_cb")):(i.find("input").val(1),i.find(".choice-radio i").addClass("active_task_cb"),i.find(".choice-head").empty().append("Вы взялись за выполнение")))}}function AfterCheckCash(e,t){if("reg"==e.status&&WindowLogin(),"error"==e.status){var i=$('.buy_block_global[id_buy="'+t+'"]').find(".js-status-cash-more"),a=i.find("i"),n=i.find("input").val();a.is(":visible")&&(0!=n||a.is(".active_task_cb")?(i.find("input").val(0),i.find(".choice-radio i").removeClass("active_task_cb")):(i.find("input").val(1),i.find(".choice-radio i").addClass("active_task_cb"))),alert_message("error","Ошибка!")}}function AfterConstBuy(e,t){if("reg"==e.status&&WindowLogin(),"error"==e.status){var i=$('.buy_block_global[id_buy="'+t+'"]').find(".js-choice-buy-y"),a=i.find("i"),n=i.find("input").val();a.is(":visible")&&(0!=n||a.is(".active_task_cb")?(i.find("input").val(0),i.find(".choice-radio i").removeClass("active_task_cb")):(i.find("input").val(1),i.find(".choice-radio i").addClass("active_task_cb")))}}function AfterUpdateImageReports(e,t){nprogress=0,"reg"==e.status?WindowLogin():"ok"==e.status&&($(".img_invoice").find("ul").empty().append(e.echo),$(".img_invoice").show(),ToolTip(),0!=$(".img_invoice").find("li").length&&$(".attach_no").remove())}function AfterUpdateImageInvoice(e,t){nprogress=0,"reg"==e.status?WindowLogin():"ok"==e.status&&($(".img_invoice").find("ul").empty().append(e.echo),$(".img_invoice").show(),ToolTip(),0!=$(".img_invoice").find("li").length&&$(".attach_no").remove())}function AfterUpdateImageSupply(e,t){nprogress=0,"reg"==e.status?WindowLogin():"ok"==e.status&&($(".img_ssoply").find("ul").empty().append(e.echo),$(".img_ssoply").show(),ToolTip())}function AfterDellBoo(e,t){nprogress=0,"reg"==e.status?WindowLogin():"ok"==e.status?$("[rel_notib="+t+"]").remove():$("[rel_notib="+t+"]").show()}function AfterSearchClientT(e,t){if($(".b_loading_small").remove(),$(".js-icon-load").show(),"ok"==e.status){$(".js-eshe-client-x").attr("pg",1),$(".js-eshe-client-x").attr("start",0),$(".list-scroll-client").find(".list_client_choice").remove(),$(".list-scroll-client").prepend(e.query);for(var i=$(".js-choice-yyy").attr("id_rel").split(","),a=0;a<i.length;a++)$(".list_client_choice[rel_notib="+i[a]+"]").addClass("yesss-ch");""==e.query?$(".js-message-search-cc").show():$(".js-message-search-cc").hide(),1==e.eshe?$(".js-eshe-client-x").show():$(".js-eshe-client-x").hide()}else $(".list-scroll-client").hide()}function AfterUpdatePreBiAdd(e,t){"reg"==e.status?WindowLogin():"ok"==e.status&&($(".preorders_block_global[id_pre="+t+"]").empty().append(e.echo),""!=e.echo_more&&null!=e.echo_more&&($(".preorders_block_global[id_pre="+t+"]").find(".px_bg_trips").empty().append(e.echo_more),$(".preorders_block_global[id_pre="+t+"]").find(".px_bg_trips").show()))}function AfterUpdateTaskBiAdd(e,t){"reg"==e.status?WindowLogin():"ok"==e.status&&($(".js-message-task-search").slideUp("slow"),$(".js-global-task-link").prepend(e.echo),setTimeout(function(){$(".new-say ").removeClass("new-say")},4e3))}function AfterUpdateTaskBi(e,t){"reg"==e.status?WindowLogin():"ok"==e.status&&($(".task_block_global[id_task="+t+"]").after(e.echo),$(".new-say").prev(".task_block_global").remove(),setTimeout(function(){$(".new-say ").removeClass("new-say")},4e3))}function AfterDellNot(e,t){if(nprogress=0,"reg"==e.status)WindowLogin();else if("ok"==e.status){if($("[rel_noti="+t+"]").remove(),$(".noti_block").is(":visible")){var i=parseInt(trim_number($(".noti_block").find(".noti_coc").text()));""!=i&&0!=i&&(0==--i&&($(".noti_block").remove(),$(".view__not").hide(),$(".not_li").find("i").hide()),$(".noti_block").find(".noti_coc").empty().append(i),$(".not_li").find("i").empty().append(i))}}else $("[rel_noti="+t+"]").show()}function AfterVVN(e,t){"reg"==e.status&&WindowLogin(),"ok"==e.status&&($(".noti_block").find(".scro").empty().append(e.echo),$(".noti_block").find(".noti_coc").empty().append(e.not),$(".noti_block").find(".noti_co").show(),$(".notif_div_2018").on("click",".del_notif",DellNotif))}function AfterCloudTask(a,e){if("reg"==a.status&&WindowLogin(),"ok"==a.status){$(".users_rule").attr("tas",a.key);for(var n=0;n<4;n++)$(".js-ring-"+n).find(".task_clock_selection").each(function(e,t){var i=$(this).attr("id_task");-1==a.cloud_day[n].indexOf(i)&&$(".js-ring-"+n).find("[id_task="+i+"]").remove()});var t=0;for(n=0;n<4;n++)0==a.cloud_day[n].length&&($(".js-ring-"+n).hide(),3!=n&&t++);$.each(a.cloud,function(e,t){if(0<$(".js-ring-"+t[0]).find('.task_clock_selection[id_task="'+t[2]+'"]').length){var i=$('.task_clock_selection[id_task="'+t[2]+'"]');3!=e&&1!=t[1]&&2!=t[1]||i.find(".ring-comm").empty().append(t[5]),3!=e?i.find(".task__time1").empty().append(t[6]):i.find(".red__task").empty().append(t[6]),2==t[1]&&(0==t[7]?(i.find(".choice-head").empty().append("Забрать задачу на себя"),i.find(".choice-radio i").removeClass("active_task_cb").show(),i.find(".choice-radio input").val(0)):1==t[8]?(i.find(".choice-head").empty().append("Вы взялись за выполнение"),i.find(".choice-radio i").show().addClass("active_task_cb"),i.find(".choice-radio input").val(1)):(i.find(".choice-head").empty().append("Задачу выполняет → <strong>"+t[7]+"</strong>"),i.find(".choice-radio input").val(0),i.find(".choice-radio i").removeClass("active_task_cb").hide()))}else{var a=$(".js-ring-"+t[0]);a.show();var n="",s="",r="";if(3==t[0]&&(s="red_all",r="task-ring"),3==t[1]&&(3!=t[0]&&(r="birthday-ring"),n='<div id_task="'+t[2]+'" class="new-task task_clock_selection '+r+" "+s+'"><div class="task_clock_selection1"><div class="clock_cbb"><i></i></div><div class="why_task_cbb">',3!=t[0]?n+="<span>День рождения</span>":n=n+"<span>Задача №"+t[2]+"</span>",n=n+', <span class="js-client ring-user js-glu-f-'+t[11]+'" iod="'+t[11]+'">«'+t[4]+"»</span>",3==t[0]?n=n+'<div class="ring-comm">'+t[5]+"</div>":n+='<div class="ring-comm"></div>',n+='</div><div class="ring-time">',3==t[0]&&(n=n+'<span class="red__task">'+t[6]+"</span>"),n=n+'<div rel_taskk="'+t[2]+'" data-tooltip="Отметить как выполнена" class="task__click1"></div></div></div></div>'),5==t[1]||4==t[1]){if(5==t[1])var o="flyend-ring",l="fly-ring-end";else o="flystart-ring",l="fly-ring-start";if(3==t[0])o="task-ring",l="";n='<div id_task="'+t[2]+'" class="new-task task_clock_selection '+o+" "+s+'"><div class="task_clock_selection1"><div class="clock_cbb"><i></i></div><div class="why_task_cbb">',n=(n=3!=t[0]?n+'<a href="booking/'+t[9]+'/"><strong>'+t[10]+"</strong></a>":n+"<span>Задача №"+t[2]+"</span>")+', <span class="js-client ring-user js-glu-f-'+t[11]+'" iod="'+t[11]+'">«'+t[4]+"»</span>",3==t[0]&&(n=n+'<div><a href="booking/'+t[9]+'/"><strong>'+t[10]+"</strong></a></div>"),3==t[0]?n=n+'<div class="ring-comm">'+t[5]+"</div>":n+='<div class="ring-comm"></div>',n+='</div><div class="ring-time">',n=(n=3!=t[0]?n+'<div class="task__time1 '+l+'">'+t[6]+"</div>":n+'<span class="red__task">'+t[6]+"</span>")+'<div rel_taskk="'+t[2]+'" data-tooltip="Отметить как выполнена" class="task__click1"></div></div></div></div>'}if(6==t[1]||7==t[1]){if(7==t[1])o="flyend-ring",l="fly-ring-end";else o="flystart-ring",l="fly-ring-start";if(3==t[0])o="task-ring",l="";n='<div id_task="'+t[2]+'" class="new-task task_clock_selection '+o+" "+s+'"><div class="task_clock_selection1"><div class="clock_cbb"><i></i></div><div class="why_task_cbb">',n=3!=t[0]?n+'<a href="tours/.id-'+t[9]+'"><strong>'+t[10]+"</strong></a>":n+"<span>Задача №"+t[2]+"</span>";var c=t[11].split("-");n=1==c[0]?n+', <span class="js-client ring-user js-glu-f-'+c[1]+'" iod="'+c[1]+'">«'+t[4]+"»</span>":n+', <span class="js-org ring-user js-glo-f-'+c[1]+'" iod="'+c[1]+'">«'+t[4]+"»</span>",3==t[0]&&(n=n+'<div><a href="tours/.id-'+t[9]+'"><strong>'+t[10]+"</strong></a></div>"),3==t[0]?n=n+'<div class="ring-comm">'+t[5]+"</div>":n+='<div class="ring-comm"></div>',n+='</div><div class="ring-time">',n=3!=t[0]?n+'<div class="task__time1 '+l+'">'+t[6]+"</div>":n+'<span class="red__task">'+t[6]+"</span>",n+="</div></div></div>"}if(9==t[1]){o="flychat-ring",l="";if(3==t[0])o="task-ring",l="";n='<div id_task="'+t[2]+'" class="new-task task_clock_selection '+o+" "+s+'"><div class="task_clock_selection1"><div class="clock_cbb"><i></i></div><div class="why_task_cbb">',n=3!=t[0]?n+'<a href="tours/.id-'+t[9]+'"><strong>'+t[10]+"</strong></a>":n+"<span>Задача №"+t[2]+"</span>",3!=t[0]&&(n+=', <span class="ring-user">Узнать впечатление по туру</span>'),3==t[0]&&(n=n+'<div><a href="tours/.id-'+t[9]+'"><strong>'+t[10]+"</strong></a></div>"),3==t[0]?n=n+'<div class="ring-comm">'+t[5]+"</div>":n+='<div class="ring-comm"></div>',n+='</div><div class="ring-time">',n=(n=3!=t[0]?n+'<div class="task__time1 '+l+'"></div>':n+'<span class="red__task">'+t[6]+"</span>")+'<div rel_taskk="'+t[2]+'" data-tooltip="Отметить как выполнена" class="task__click1"></div></div></div></div>'}if(8==t[1]){o="flymoney-ring",l="";if(3==t[0])o="task-ring",l="";n='<div id_task="'+t[2]+'" class="new-task task_clock_selection '+o+" "+s+'"><div class="task_clock_selection1"><div class="clock_cbb"><i></i></div><div class="why_task_cbb">',n=3!=t[0]?n+'<a href="tours/.id-'+t[9]+'"><strong>'+t[10]+"</strong></a>":n+"<span>Задача №"+t[2]+"</span>",3!=t[0]&&(n+=', <span class="ring-user">Срок оплаты от клиента</span>'),3==t[0]&&(n=n+'<div><a href="tours/.id-'+t[9]+'"><strong>'+t[10]+"</strong></a></div>"),3==t[0]?n=n+'<div class="ring-comm">'+t[5]+"</div>":n+='<div class="ring-comm"></div>',n+='</div><div class="ring-time">',n=3!=t[0]?n+'<div class="task__time1 '+l+'"></div>':n+'<span class="red__task">'+t[6]+"</span>",n+="</div></div></div>"}if(10==t[1]){o="flymoney-ring",l="";if(3==t[0])o="task-ring",l="";n='<div id_task="'+t[2]+'" class="new-task task_clock_selection '+o+" "+s+'"><div class="task_clock_selection1"><div class="clock_cbb"><i></i></div><div class="why_task_cbb">',n=3!=t[0]?n+'<a href="tours/.id-'+t[9]+'"><strong>'+t[10]+"</strong></a>":n+"<span>Задача №"+t[2]+"</span>",3!=t[0]&&(n+=', <span class="ring-user">Срок оплаты туроператору</span>'),3==t[0]&&(n=n+'<div><a href="tours/.id-'+t[9]+'"><strong>'+t[10]+"</strong></a></div>"),3==t[0]?n=n+'<div class="ring-comm">'+t[5]+"</div>":n+='<div class="ring-comm"></div>',n+='</div><div class="ring-time">',n=3!=t[0]?n+'<div class="task__time1 '+l+'"></div>':n+'<span class="red__task">'+t[6]+"</span>",n+="</div></div></div>"}if(1==t[1]||2==t[1]){if(1==t[1])var d="task-ring",u="Задача",p="";else{d="task-ring-all",u="Общая задача";if(0==t[7])p='<div class="ring-comm-option"><div class="input-choice-click-task"><div class="choice-head">Забрать задачу на себя</div><div class="choice-radio"><div class="center_vert1"><i class=""></i><input name="" id="" value="0" type="hidden"></div></div></div></div>';else if(1==t[8])p='<div class="ring-comm-option"><div class="input-choice-click-task js-choice-task-y"><div class="choice-head">Вы взялись за выполнение</div><div class="choice-radio"><div class="center_vert1"><i class="active_task_cb"></i><input name="" id="" value="1" type="hidden"></div></div></div></div>';else p='<div class="ring-comm-option"><div class="input-choice-click-task"><div class="choice-head">Задачу выполняет → <strong>'+t[7]+'</strong></div><div class="choice-radio"><div class="center_vert1"><i style="display:none;" class="active_task_cb"></i><input name="" id="" value="0" type="hidden"></div></div></div></div>'}n='<div id_task="'+t[2]+'" class="new-task task_clock_selection '+d+"  "+s+'"><div class="task_clock_selection1"><div class="clock_cbb"><i></i></div><div class="why_task_cbb"><span>'+u+" №"+t[2]+"</span>",0!=t[3]&&(1==t[3]&&(n=n+', <span class="js-client ring-user js-glu-f-'+t[11]+'" iod="'+t[11]+'">«'+t[4]+"»</span>"),2==t[3]&&(n=n+', <span class="js-org ring-user js-glo-n-'+t[11]+'" iod="'+t[11]+'">«'+t[4]+"»</span>")),n=n+'<div class="ring-comm">'+t[5]+"</div>"+p+'</div><div class="ring-time">',n=(n=3==t[0]?n+'<span class="red__task">'+t[6]+"</span>":n+'<div class="task__time1">'+t[6]+"</div>")+'<div rel_taskk="'+t[2]+'" data-tooltip="Отметить как выполнена" class="task__click1"></div></div></div></div>'}a.find(".block-ring-x").prepend(n),setTimeout(function(){$('.task_clock_selection[id_task="'+t[2]+'"]').removeClass("new-task")},4e3)}});for(n=0;n<4;n++){var i=$(".js-ring-"+n).find(".eshe-ring"),s=i.attr("max"),r=$(".js-ring-"+n).find(".task_clock_selection").length,o=parseInt(r)-parseInt(s),l=0,c=0;if(i.is(":visible"))l=1;if(i.is(".active-ring"))c=1;0==l&&s<r&&(i.show(),i.find(".ring-x1").empty().append("еще "+o),$(".js-ring-"+n).find(".task_clock_selection").removeClass("max-day-ring"),$(".js-ring-"+n).find(".task_clock_selection").each(function(e,t){s<=e&&$(this).addClass("max-day-ring").hide()})),1==l&&0==c&&(i.find(".ring-x1").empty().append("еще "+o),$(".js-ring-"+n).find(".task_clock_selection").removeClass("max-day-ring"),$(".js-ring-"+n).find(".task_clock_selection").each(function(e,t){s<=e&&$(this).addClass("max-day-ring").hide()})),1==l&&1==c&&(i.find(".ring-x1").empty().append("еще "+o),$(".js-ring-"+n).find(".task_clock_selection").removeClass("max-day-ring"),$(".js-ring-"+n).find(".task_clock_selection").each(function(e,t){s<=e&&$(this).addClass("max-day-ring")})),r<=s&&i.hide()}3==t?($(".task-left").css("width","100%"),$(".task-right").hide()):($(".task-left").css("width","50%"),$(".task-right").show())}}function AfterNotification(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){if($(".users_rule").attr("not",e.tk),0==e.not)$(".not_li").find("i").empty(),$(".not_li").find("i").hide(),$(".view__not").hide();else if($(".not_li").find("i").empty().append(e.not),$(".not_li").find("i").show(),$(".view__not").show(),$("#chatAudio")[0].play(),$(".view__not").length)if($(".noti_block").is(":visible"))$(".noti_block").find(".scro").empty().append('<div class="loader_inter"><div></div><div></div><div></div><div></div></div>'),AjaxClient("notification","view_notification","GET",e="","AfterVVN",1,0);else $(".menu1").append('<div class="noti_block"><div class="title_noti"><ul class="t_ul"><li>Новое уведомление</li><li><i class="noti_co" style="display:none;"><span class="noti_coc"></span></i></li></ul></div><div class="scro">'+e.echo+"</div></div>"),setTimeout(function(){$(".noti_block").remove()},5e3);0==e.echo_m?($(".mess_li").find("i").empty(),$(".mess_li").hide()):($(".mess_li").find("i").empty().append(e.echo_m),$(".mess_li").find("i").show(),$("#chatAudio")[0].play(),0!=$(".message_block").length&&(0==$(".sego_mess").length&&$(".padding_mess").append('<div class="dialog_clear"></div><div class="message_date"><div><span class="sego_mess">сегодня</span></div></div>'),$(".padding_mess").append('<div class="dialog_clear"></div>'+e.echo_dialog),scroll_to_bottom(2e3)))}}function AfterMESS(e,t){if("reg"==e.status&&WindowLogin(),"ok"==e.status){$(".content_block").attr("n",e.n_st),$(".history_message").attr("s_m",e.poo);var i=document.body,a=i.scrollHeight;$(".padding_mess").prepend(e.echo),window.scrollTo(0,i.scrollHeight-a+i.scrollTop),1==e.eshe?($(".padding_mess").prepend($(".history_message")),$(".history_message").show()):$(".history_message").remove()}"error"==e.status&&$(".history_message").remove()}function AfterTest(e,t){$(".js-cloud").empty().append(e.test)}function AfterSaveAnswer(e,t){"reg"==e.status&&WindowLogin(),"error"==e.status&&$("[op_rel="+t+"]").find(".save_anna").show()}$(function(){$(window).on("resize",windowSize),$(".loader_ada").remove(),$(".loader_ada1").remove(),$(".date_picker_xe").inputmask("datetime",{mask:"1.2.y",placeholder:"dd.mm.yyyy",separator:".",alias:"dd.mm.yyyy"}),$("body").on("change keyup input click",".js-date-nait2,.js-date-nait1",date_nait),$("body").on("change keyup input click",".js-add-tender-form",AddFormTender),$("body").on("change keyup input click",".js-add-plane-form",AddFormPlane),$("body").on("change keyup input click",".js-edit-tender-form",EditFormTender),$("body").on("change keyup input click",".js-edit-eico",edit_eico_list),$("body").on("change",".js-list-vibor",update_edit_input_eico),$("body").on("change keyup input click",".js-choice-task-y",choice_task_you),$("body").on("change keyup input click",".task__click1",YesTask1),$("body").on("change keyup input click",".js-password-butt",password_butt),$("body").on("change keyup input click",".js-click-mmmt",click_mmmt),$("body").on("change keyup input click",".js-loli-butt",loli_butt),$("body").on("change keyup input click",".js-drop-search li",drop_search),$("body").on("change keyup input click",".js-open-search",open_search),$("body").on("change keyup input click",".js-exit-win",close_close_window),$("body").on("change keyup input click",".tabsss_org",tabs_org),$("body").on("change keyup input click",".tabsss",tabs_client),$("body").on("change keyup input click",".tabs_003U",{key:"003U"},tabs_task),$("body").on("change keyup input click",".tabs_004U",{key:"004U"},tabs_trips),$("body").on("change keyup input click",".tabs_005U",{key:"005U"},tabs_preorders),$("body").on("change keyup input click",".js-eshe-ring",js_eshe_ring),$("body").on("change keyup input click",".tabsss_choice",tabs_client_choice),$("body").on("change keyup input click",".js-search-global-page",js_search_global_page),$("body").on("change keyup input click",".list_client_choice",click_client_choice),$("body").on("change keyup input click",".js-new_open_client",clients_adds),$("body").on("change keyup input click",".rrube_choice",rrube_choice),$("body").on("change keyup input click",".js-choice-yyy",choice_client_end),$("body").on("change keyup input click",".js-eshe-client-x",eshe_say_client),$("body").on("keyup",".js-choice-keyup",js_choice_keyup),$("body").on("change keyup input click",".task_clock_selection i",open_task),$("body").on("change keyup input click",".task_block_global .ggh-e",open_task1),$("body").on("change keyup input click",".js-taa",open_task_new),$("body").on("change keyup input click",".task_block_global .task-b-number",open_task1),$("body").on("change keyup input click",".tabsss1",tabs_client_add),$(".cha_1").on("change keyup input click",".wallet_checkbox",wallet_checkbox),$(".l_photo").on("change keyup input click",".invoice_upload",UploadInvoice_old),$(".content").on("change",".sc_sc_loos2",function(){var e=$(this).parents("form").attr("id_sc");file=this.files[0],file&&function(e,i){var t=new XMLHttpRequest;t.onload=t.onerror=function(){200==this.status?($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide(),$(".scap_load_"+i).after(),alert_message("ok","ваш профиль обновлен"),autoReloadHak()):($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide())},t.upload.onprogress=function(e){$("[id_upload="+i+"]").hide(),$(".scap_load_"+i).show();var t=Math.round(100*e.loaded/e.total);$(".scap_load_"+i).find(".scap_load__").width(t+"%")},t.open("POST","users/upload.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",i),t.send(a)}(file,e);return!1}),$("body").on("focus click",".input_new_2019",InputFocusNew1),$("body").on("blur",".input_new_2019",InputBlurNew1),$("body").on("change keyup input click",".radio_checkbox",radio_checkbox),$("body").on("change keyup input click",".radio_checkbox_no_yes",radio_checkbox_no_yes),$("body").on("change keyup input click",".js-buy-del-pre",js_buy_del_pre),$(".js-finance-operation").on("change keyup input click",".js-choice-buy-y",choice_buy_you),$(".js-finance-operation").on("change keyup input click",".js-buy-del-fin",js_buy_del_fin),$(".js-cash-cloud").on("change keyup input click",".js-buy-del-cash",js_buy_del_cash),$(".js-finance-operation").on("change keyup input click",".js-buy-edit-fin",js_buy_edit_fin),$("body").on("change keyup input click",".js-buy-edit-preorders",js_buy_edit_pre),$("body").on("change keyup input click",".js-buy-transfer-preorders",js_buy_transfer_pre),$("body").on("change keyup input click",".js-place-finance",plane_edit),$(".index_booking").on("change keyup input click",".send_form_clients",send_form_clients),$(".index_booking").on("change keyup input click",".send_form_booking",send_form_booking),$(".index_booking").on("change keyup input click",".send_form_operator",send_form_operator),$(".index_booking").on("change keyup input click",".send_form_users",send_form_users),$(".index_booking").on("change keyup input click",".send_form_reports",send_form_reports),jQuery(".scrollbar-inner").scrollbar(),ToolTip(),$(".label_s").bind("change keyup input click",label_show),$(".save_button2").bind("change keyup input click",send_meee),$(".content").on("click",".send_mess",SendMessage),$(".help_user").on("click",".send_mess",SendMessage),$(".div_dialog").on("click",".dialog_a",function(e){if(0==$(e.target).closest(".del_dialog").length){var t=$(this).attr("rel_diagol");$(this).attr("href","/message/dialog/"+t+"/"),$(this).trigger("Click")}});$(".count_mask").bind("change keyup input click",validate11),$(".count_mask1").bind("change keyup input click",validate12),$(".messa_form_a").on("change",".invoice_file_photo",function(){var e=$(this).parents("form").attr("id_a");return file=this.files[0],file&&function(e,t){var i=new XMLHttpRequest;i.onload=i.onerror=function(){200==this.status?($("[id_upload_a1="+t+"]").next().find(".b_loading_circle_wrapper_small").hide(),$("[id_upload_a1="+t+"]").show(),UpdateImageInvoiceAkt(t,1)):($("[id_upload_a1="+t+"]").next().find(".b_loading_circle_wrapper_small").hide(),$("[id_upload_a1="+t+"]").show())},i.upload.onprogress=function(e){$("[id_upload_a1="+t+"]").hide(),$("[id_upload_a1="+t+"]").next().find(".b_loading_circle_wrapper_small").show()},i.open("POST","invoices/upload_photo.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",t),i.send(a)}(file,e),!1}),$(".messa_form_a").on("change",".invoice_file_akt",function(){var e=$(this).parents("form").attr("id_a");return file=this.files[0],file&&function(e,t){var i=new XMLHttpRequest;i.onload=i.onerror=function(){200==this.status?($("[id_upload_a="+t+"]").next().find(".b_loading_circle_wrapper_small").hide(),$("[id_upload_a="+t+"]").show(),UpdateImageInvoiceAkt(t,0)):($("[id_upload_a="+t+"]").next().find(".b_loading_circle_wrapper_small").hide(),$("[id_upload_a="+t+"]").show())},i.upload.onprogress=function(e){$("[id_upload_a="+t+"]").hide(),$("[id_upload_a="+t+"]").next().find(".b_loading_circle_wrapper_small").show()},i.open("POST","invoices/upload_akt.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",t),i.send(a)}(file,e),!1}),$(".invoice_block").on("click",".add_akt_defect",function(){var e=$(this).attr("id_upload_a");$("[name=myfileakt"+e+"]").trigger("click")}),$(".invoice_block").on("click",".add_akt_defect1",function(){var e=$(this).attr("id_upload_a1");$("[name=myfilephoto"+e+"]").trigger("click")}),$(".img_invoice_div").on("click",".del_image_invoice",DellImageInvoice),$(".img_invoice_div").on("click",".del_image_reports",DellImageReports),$(".img_invoice_div").on("click",".invoice_upload",function(){var e=$(this).attr("id_upload");$("[name=myfile"+e+"]").trigger("click")}),$(".content").on("change",".sc_sc_loo12",function(){var e=$(this).parents("form").attr("id_sc");return file=this.files[0],file&&function(e,i){var t=new XMLHttpRequest;t.onload=t.onerror=function(){200==this.status?($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide(),UpdateImageInvoice(i)):($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide())},t.upload.onprogress=function(e){$("[id_upload="+i+"]").hide(),$(".scap_load_"+i).show();var t=Math.round(100*e.loaded/e.total);$(".scap_load_"+i).find(".scap_load__").width(t)},t.open("POST","booking/upload.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",i),t.send(a)}(file,e),!1}),$("body").on("click",".soply_upload",function(){var e=$(this).attr("id_upload");$("[name=myfile"+e+"]").trigger("click")}),$("body").on("change",".sc_sc_loo11",function(){var e=$(this).parents("form").attr("id_sc");return file=this.files[0],file&&function(e,i){var t=new XMLHttpRequest;t.onload=t.onerror=function(){200==this.status?($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide(),UpdateImageSupply(i)):($("[id_upload="+i+"]").show(),$(".scap_load_"+i).find(".scap_load__").width(0),$(".scap_load_"+i).hide())},t.upload.onprogress=function(e){$("[id_upload="+i+"]").hide(),$(".scap_load_"+i).show();var t=Math.round(100*e.loaded/e.total);$(".scap_load_"+i).find(".scap_load__").width(t)},t.open("POST","supply/upload.php",!0);var a=new FormData;a.append("thefile",e),a.append("id",i),t.send(a)}(file,e),!1}),$(".pay_imp").on("click",".naryd_upload",UploadScan),$(".pay_imp").on("change",".sc_sc_loo",UploadScanChange),jQuery(document).on("focus click",".input_new_2018",InputFocusNew),jQuery(document).on("blur",".input_new_2018",InputBlurNew),jQuery(document).on("keyup",".input_new_2018",KeyUpInput),jQuery(document).on("focus click",".js-choice-keyup",InputFocusNewTours),jQuery(document).on("blur",".js-choice-keyup",InputBlurNewTours),$(".notif_imp").on("click",".del_notif",DellNotif),$(".notif_div_2018").on("click",".del_notif",DellNotif),$(".booking_div").on("click",".del_booking_",DellBooking),$(".clients_block").on("click",".del_clients_",DellClients),$(".clients_org").on("click",".del_org_",DellOrg),$(".place-wrapper").on("click",".task__click",YesTask),$(".fox_search_result1").on("change keyup input click",".string_res",string_res1),$(".js-buy-my-tours").on("change keyup input click",".js-dell-buy-tours",js_dell_buy_tours),$(".js-fly-my-tours").on("change keyup input click",".js-dell-fly-tours",js_dell_fly_tours),$("body").on("change keyup input click",".js-add-finance",js_add_finance),$("body").on("change keyup input click",".js-add-cash",js_add_cash),$("body").on("change keyup input click",".js-add-cash-form",js_add_cash_form),idleTimer=null,timerS=null,timerH=null,idleState=!1,idleWait=18e5,idTimeStampe=0,ExitSystem(),window.is_session="umatravel.club",idleTimerx=null,timerSx=null,idleStatex=!1,idleWait_start=1e4,idleWait_stop=3e5,idleWait_end=12e4,idleWait_yes=idleWait_start,idTimeStampex=0,NotifSystem(),$('<audio id="chatAudio"><source src="notify.ogg" type="audio/ogg"><source src="notify.mp3" type="audio/mpeg"><source src="notify.wav" type="audio/wav"></audio>').appendTo("body"),nprogress=0,setInterval(function(){$this=inWindow(".Effectbbo"),0!=inWindow(".Effectbbo").length&&setTimeout(function(){$this.removeClass("yes_bbs1")},5e3)},1e3),$(".menu_top,.smeta2").on("click",".drops li",function(){var e=$(this).parent().attr("data_src"),t=$(this).find("a").attr("rel"),i=$(this).find("a").attr("rel");$(this).parent().is(".no_active")?$(this).parent().parent().find("input").val(i).change():e!=t&&($(this).parent().find("li").removeClass("sel_active_sss"),$(this).addClass("sel_active_sss"),$(this).parent().attr("data_src",i),$(this).parent().parent().find("input").val(i).change())}),animation_teps(),$(".del_dialog").bind("click",del_dialog),$(".view__not i").bind("click",view_notification),$("#lalala_add_form").on("change keyup input click",".error_formi",function(){$this=$(this),setTimeout(function(){$this.removeClass("error_formi")},2e3)}),window.show_search=0,$(document).mouseup(function(e){0==$(e.target).closest(".search_seb").length&&0==$(e.target).closest(".icon3").length&&1==window.show_search&&($(".icon1").show(),$(".search_seb").hide(),$(".search_seb").width("60px"),window.show_search=0,$("var.highlight").each(function(){$(this).after($(this).html()).remove()})),0==$(e.target).closest(".history_act_mat").length&&0==$(e.target).closest(".edit_panel11_mat").length&&0==$(e.target).closest(".history_icon_level").length&&$(".history_act_mat").is(":visible")&&$(".history_act_mat").hide();var t=$(".noti_block"),i=$(".box-modal");0===t.has(e.target).length&&0===i.has(e.target).length&&$(".noti_block").is(":visible")&&($(".noti_block").remove(),$(".view__not").hide(),$(".not_li").find("i").hide())}),$("#search_text").keypress(function(e){13==e.keyCode&&dosearch()}),$("#otziv_area").keypress(function(e){13==e.keyCode&&send_meee()}),$("#search_text").keyup(function(){var e=new Date;time_keyup=e.getTime(),$("#search_text").val()!=term&&($("#search_text").val().length>=minlen?setTimeout(function(){var e=new Date;time_search=e.getTime(),time_search-time_keyup>=keyint&&dosearch()},keyint):$(".result_s").hide())}),$(".cal_223").bind("click",function(){$(this).prev(".calendar_t").trigger("focus")}),$("#email_formi").keyup(function(){""!=$("#email_formi").val()||$("#email_formi").addClass("error_formi")}),$("#password_formi,#email_formi").keypress(function(e){13==e.keyCode&&$("#yes1").trigger("click")}),$("#password_formi").keyup(function(){""==$("#password_formi").val()||0==$("#password_formi").val()?$("#password_formi").addClass("error_formi"):$("#password_formi").removeClass("error_formi")}),$("#yes1").on("click",function(){var e=$("#email_formi").val(),t=[0,0];$("#email_formi").removeClass("error_formi"),$("#password_formi").removeClass("error_formi"),""!=e||($("#email_formi").addClass("error_formi"),t[0]=1),""!=$("#password_formi").val()&&0!=$("#password_formi").val()||($("#password_formi").addClass("error_formi"),t[1]=1),0==t[0]&&0==t[1]&&$("#pod_form").submit()}),$(".fox_dell1").on("click",function(){t.val(""),$(".fox_dell1").hide(),$(".div_result1").hide(),$(".end_search1").hide(),$("[name=id_search_client1]").val(0).trigger("click")});var t=$("#fox_search_client_i1");t.keyup(function(){1<=jQuery.trim(t.val().length)?$(".fox_dell1").show():$(".fox_dell1").hide(),delays(function(){if(3<=jQuery.trim(t.val().length)){var e="url="+window.location.href+"&search="+encodeURIComponent(t.val());$(".fox_dell1").hide().after('<div class="b_loading_small"><div class="b_loading_circle_wrapper_small"><div class="b_loading_circle_one_small"></div><div class="b_loading_circle_one_small b_loading_circle_delayed_small"></div></div></div>'),AjaxClient("booking","search_client","GET",e,"AfterSearchClient1",1,0)}},800)}),$(".menu1").on("click",".menu3_prime li",function(){$(this).children("a")[0].click()}),$(".hide_left,.mobile").on("click",function(){var e=0;$(".iss").is(".big,.small")&&(e=1),0==e?$(".left_menu").is(":visible")?($(".iss").addClass("small"),$.cookie("iss","s",{expires:60,path:"/"})):($(".iss").addClass("big"),$.cookie("iss","b",{expires:60,path:"/"})):$(".iss").is(".big")?($(".iss").removeClass("big"),$(".iss").addClass("small"),$.cookie("iss","s",{expires:60,path:"/"})):($(".iss").removeClass("small"),$(".iss").addClass("big"),$.cookie("iss","b",{expires:60,path:"/"})),sl_message_width()}),$(document).mouseup(function(e){var t,i=$(".select_box");0===i.has(e.target).length&&($(".drop_box").css("transform","scaleY(0)"),$(".slct_box").removeClass("active")),0===(t=$(".form-rate-ok")).has(e.target).length&&t.removeClass("show-form-rate"),0===(t=$(".form-rate-ok1")).has(e.target).length&&t.removeClass("show-form-rate1");var a=$(".menu_supply");0===i.has(e.target).length&&(a.find(".drops").css("transform","scaleY(0)"),a.find(".drops").removeClass("active_menu_s"));var n=$(".loll_drop");0===n.has(e.target).length&&(n.css("transform","scaleY(0)"),""==$(".post_p").val()?($(".loll_div").addClass("required_in_2018"),$(".b-loading-message").empty().append("нет связи с поставщиком").show()):($("[name=number_soply]").val($("[name=number_soply]").attr("val_old")),$(".loll_drop").empty(),$(".b-loading-message").hide()))}),window.slctclick_box1=function(){if(null==$(this).parents(".select_box").find("input").attr("readonly")){$(this).is(".active")?($(this).removeClass("active"),$(this).next().css("transform","scaleY(0)")):($(this).addClass("active"),$(this).next().css("transform","scaleY(1)"));var i=$(this).attr("data_src");$(".slct_box").each(function(e,t){$(this).attr("data_src");$(this).attr("data_src")!=i&&($(this).removeClass("active"),$(this).next().css("transform","scaleY(0)"))})}},$(".slct_box").bind("click",slctclick_box1),window.dropli_box1=function(){var e=$(this).parent().parent().find(".slct_box").attr("data_src"),t=$(this).find("a").attr("rel"),i=$(this).find("a").text(),a=$(this).find("a").attr("rel");e!=t?($(this).parent().find("li").removeClass("sel_active"),$(this).addClass("sel_active"),$(this).parent().parent().find(".slct_box").removeClass("active").empty().append(i),$(this).parent().parent().find(".slct_box").attr("data_src",a),$(this).parent().parent().find(".drop_box").css("transform","scaleY(0)"),$(this).parent().parent().find("input").val(a).change(),savedefault($(this).parent().parent().find("input"))):($(this).parent().parent().find(".drop_box").css("transform","scaleY(0)"),$(this).parent().parent().find(".slct_box").removeClass("active"))},$(".drop_box").find("li").bind("click",dropli_box1),$(document).mouseup(function(e){var t=$(".select"),i=$(".js-drop-search"),a=$(".js-open-search");0!==t.has(e.target).length||i.is(e.target)||a.is(e.target)||($(".drop").css("transform","scaleY(0)"),$(".drop-radio").css("transform","scaleY(0)"),$(".slct").removeClass("active"),$(".drop").parents(".input-search-list").find("i").removeClass("open-search-active"),$(".drop-radio").parents(".input-search-list").find("i").removeClass("open-search-active"))}),window.slctclick=function(){if(null==$(this).parents(".select").find("input").attr("readonly")){$(this).is(".active")?($(this).removeClass("active"),$(this).next().css("transform","scaleY(0)")):($(this).addClass("active"),$(this).next().css("transform","scaleY(1)"));var i=$(this).attr("list_number");return $(".slct").each(function(e,t){$(this).attr("data_src");$(this).attr("list_number")!=i&&($(this).removeClass("active"),$(this).next().css("transform","scaleY(0)"))}),$(".drop-search").each(function(e,t){$(this).parents(".input-search-list").find("i").removeClass("open-search-active"),$(this).css("transform","scaleY(0)")}),!1}},$(".slct").bind("click.sys",slctclick),window.dropli=function(){var e=$(this).parent().parent().find(".slct").attr("data_src"),t=$(this).find("a").attr("rel"),i=$(this).find("a").text(),a=$(this).find("a").attr("rel");e!=t?(0!=a?$(this).parents(".left_drop").find("label").addClass("active_label"):$(this).parents(".left_drop").find("label").removeClass("active_label"),$(this).parent().find("li").removeClass("sel_active"),$(this).addClass("sel_active"),$(this).parents(".left_drop").removeClass("required_in_2018"),$(this).parent().parent().find(".slct").removeClass("active").empty().append(i),$(this).parent().parent().find(".slct").attr("data_src",a),$(this).parent().parent().find(".drop").css("transform","scaleY(0)"),$(this).parent().parent().find("input").val(a).change()):($(this).parent().parent().find(".drop").css("transform","scaleY(0)"),$(this).parent().parent().find(".slct").removeClass("active"))},$(".drop").find("li").bind("click",dropli),window.dropliradio=function(){$(this).parent().parent().find(".slct").attr("data_src"),$(this).find("a").attr("rel"),$(this).find("a").text(),$(this).find("a").attr("rel");var e=$(this).parents(".drop-radio");$(this).find("i").is(".active_task_cb")?$(this).find("i").removeClass("active_task_cb"):$(this).find("i").addClass("active_task_cb");var i="",a="";e.find("li").each(function(e,t){$(this).find("i").is(".active_task_cb")&&(a=""==i?(i=$(this).find("a").attr("rel"),$(this).find("a").text()):(i=i+","+$(this).find("a").attr("rel"),a+", "+$(this).find("a").text()))}),e.is(".js-no-nul-select")&&""==i&&(e.find("li").each(function(e,t){a=""==i?(i=$(this).find("a").attr("rel"),$(this).find("a").text()):(i=i+","+$(this).find("a").attr("rel"),a+", "+$(this).find("a").text())}),e.find("i").addClass("active_task_cb")),$(this).parent().parent().find(".slct").empty().append(a),$(this).parent().parent().find(".slct").attr("data_src",i),$(this).parent().parent().find("input").val(i).change()},$(".drop-radio").find("li").bind("click",dropliradio);$("#sort2").bind("change",function(){$.cookie("su_2",null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r"),2==$(this).val()&&$("#date_table").show()});$("#sort1").bind("change",function(){$.cookie("su_1",null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_1",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort_stock3").bind("change",function(){$.cookie("su_st_3",null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_st_3",$(this).val(),"add"),$(".show_sort_stock").removeClass("active_supply"),$(".show_sort_stock").addClass("active_supply")});$("#sort_stock1").bind("change",function(){$.cookie("su_st_1",null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_st_1",$(this).val(),"add"),$(".show_sort_stock").removeClass("active_supply"),$(".show_sort_stock").addClass("active_supply")});$("#sort3").bind("change",function(){$.cookie("su_3",null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_3",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort4").bind("change",function(){$.cookie("su_4",null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_4",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5").bind("change",function(){$.cookie("su_5",null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort6").bind("change",function(){$.cookie("su_6",null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_6",$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort1c").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_1c"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_1c"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2c").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2c"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2c"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort3c").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_3c"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_3c"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort4c").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_4c"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_4c"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5c").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5c"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5c"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#name_stock_search").bind("change keyup input click",function(){var e=$(".content").attr("iu");$.cookie("su_7c"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7c"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")}),$("#name_stock_search_tours").bind("change keyup input click",function(){var e=$(".content").attr("iu");$.cookie("su_7cu"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7cu"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")}),$("#name_stock_search_toursi").bind("change keyup input click",function(){var e=$(".content").attr("iu");$.cookie("su_7xcu"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7xcu"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")}),$("#name_stock_search_preorders").bind("change keyup input click",function(){var e=$(".content").attr("iu");$.cookie("su_7pp"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7pp"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort1co").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_1co"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_1co"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5co").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5co"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5co"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#name_stock_searcho").bind("change keyup input click",function(){var e=$(".content").attr("iu");$.cookie("su_7co"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_7co"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5tu").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5tu"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5tu"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5cc").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5cc"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5cc"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5bc").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5bc"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5bc"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5pr").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5pr"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5pr"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort4tu").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_4tu"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_4tu"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort4pr").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_4pr"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_4pr"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort3tu").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_3tu"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_3tu"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2tu").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2tu"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2tu"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2tu_nn").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2tu_nn"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2tu_nn"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2pr").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2pr"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2pr"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2cc").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2cc"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2cc"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2bc").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2bc"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2bc"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2bccash").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2cash"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2cash"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort4bccash").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_4bccash"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_4bccash"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5bccash").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5bccash"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5bccash"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort1tu").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_1tu"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_1tu"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2ta").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2ta"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2ta"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort1ta").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_1ta"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_1ta"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort4ta").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_4ta"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_4ta"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort3ta").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_3ta"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_3ta"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")}),$("#sort3pr").bind("change",e);var e=function(){var e=$(".content").attr("iu");$.cookie("su_3pr"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_3pr"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")};$("#sort3pr").bind("change",e);$("#sort5ta").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5ta"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5ta"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2s").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2s"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2s"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2f_x").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2f_x"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2f_x"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort2f").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_2f"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_2f"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")});$("#sort5s").bind("change",function(){var e=$(".content").attr("iu");$.cookie("su_5s"+e,null,{path:"/",domain:window.is_session,secure:!1}),CookieList("su_5s"+e,$(this).val(),"add"),$(".js-reload-top").removeClass("active-r"),$(".js-reload-top").addClass("active-r")})}),window.Modernizr=function(d,s){function e(e){h.cssText=e}function r(e,t){return typeof e===t}function o(e,t){for(var i in e)if(h[e[i]]!==s)return"pfx"!=t||e[i];return!1}function t(e,t,i){var a=e.charAt(0).toUpperCase()+e.substr(1),n=(e+" "+v.join(a+" ")+a).split(" ");return r(t,"string")||r(t,"undefined")?o(n,t):function(e,t,i){for(var a in e){var n=t[e[a]];if(n!==s)return!1===i?e[a]:r(n,"function")?n.bind(i||t):n}return!1}(n=(e+" "+g.join(a+" ")+a).split(" "),t,i)}function i(e,t,i,a){var n,s,r,o=d.createElement("div"),l=d.body,c=l||d.createElement("body");if(parseInt(i,10))for(;i--;)(r=d.createElement("div")).id=a?a[i]:p+(i+1),o.appendChild(r);return n=["­","<style>",e,"</style>"].join(""),o.id=p,(l?o:c).innerHTML+=n,c.appendChild(o),l||(c.style.background="",u.appendChild(c)),s=t(o,e),l?o.parentNode.removeChild(o):c.parentNode.removeChild(c),!!s}var a,n,l={},u=d.documentElement,p="modernizr",c=d.createElement(p),h=c.style,f=" -webkit- -moz- -o- -ms- ".split(" "),m="Webkit Moz O ms",v=m.split(" "),g=m.toLowerCase().split(" "),_={},y=[],b=y.slice,k={}.hasOwnProperty;n=r(k,"undefined")||r(k.call,"undefined")?function(e,t){return t in e&&r(e.constructor.prototype[t],"undefined")}:function(e,t){return k.call(e,t)},Function.prototype.bind||(Function.prototype.bind=function(a){var n=this;if("function"!=typeof n)throw new TypeError;var s=b.call(arguments,1),r=function(){if(this instanceof r){function e(){}e.prototype=n.prototype;var t=new e,i=n.apply(t,s.concat(b.call(arguments)));return Object(i)===i?i:t}return n.apply(a,s.concat(b.call(arguments)))};return r});var $,w,x;$=[,"csstransforms3d"],w=[,["@media (",f.join("transform-3d),("),p,")","{#csstransforms3d{left:9px;position:absolute;height:3px;}}"].join("")].join(""),i(w,function(e,t){for(var i=d.styleSheets[d.styleSheets.length-1],a=(i&&(i.cssRules&&i.cssRules[0]?i.cssRules[0].cssText:i.cssText),e.childNodes),n={};x--;)n[a[x].id]=a[x];l.csstransforms3d=9===(n.csstransforms3d&&n.csstransforms3d.offsetLeft)&&3===n.csstransforms3d.offsetHeight},x=$.length,$);for(var C in _.csstransforms3d=function(){var e=!!t("perspective");return e&&"webkitPerspective"in u.style&&(e=l.csstransforms3d),e},_.csstransitions=function(){return t("transition")},_)n(_,C)&&(a=C.toLowerCase(),l[a]=_[C](),y.push((l[a]?"":"no-")+a));return e(""),c=null,function(e,t){function r(e){var t,i={},a=e.createElement,n=(0,e.createDocumentFragment)();e.createElement=function(e){var t=(i[e]||(i[e]=a(e))).cloneNode();return c.shivMethods&&t.canHaveChildren&&!s.test(e)?n.appendChild(t):t},e.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+("string"==typeof(t=c.elements)?t.split(" "):t).join().replace(/\w+/g,function(e){return i[e]=a(e),n.createElement(e),'c("'+e+'")'})+");return n}")(c,n)}function i(e){var t,i,a,n,s;return e.documentShived||(c.shivCSS&&!o&&(a="article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block}audio{display:none}canvas,video{display:inline-block;*display:inline;*zoom:1}[hidden]{display:none}audio[controls]{display:inline-block;*display:inline;*zoom:1}mark{background:#FF0;color:#000}",n=(i=e).createElement("p"),s=i.getElementsByTagName("head")[0]||i.documentElement,n.innerHTML="x<style>"+a+"</style>",t=!!s.insertBefore(n.lastChild,s.firstChild)),l||(t=!r(e)),t&&(e.documentShived=t)),e}var o,l,a,n=e.html5||{},s=/^<|^(?:button|form|map|select|textarea)$/i;(a=t.createElement("a")).innerHTML="<xyz></xyz>",o="hidden"in a,l=1==a.childNodes.length||function(){try{t.createElement("a")}catch(e){return!0}var e=t.createDocumentFragment();return void 0===e.cloneNode||void 0===e.createDocumentFragment||void 0===e.createElement}();var c={elements:n.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:!1!==n.shivCSS,shivMethods:!1!==n.shivMethods,type:"default",shivDocument:i};e.html5=c,i(t)}(this,d),l._version="2.5.3",l._prefixes=f,l._domPrefixes=g,l._cssomPrefixes=v,l.testProp=function(e){return o([e])},l.testAllProps=t,l.testStyles=i,u.className=u.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(" js "+y.join(" ")),l}(this.document),function(e,p){function u(e){return"[object Function]"==n.call(e)}function h(e){return"string"==typeof e}function f(){}function m(e){return!e||"loaded"==e||"complete"==e||"uninitialized"==e}function v(){var e=b.shift();k=1,e?e.t?_(function(){("c"==e.t?g.injectCss:g.injectJs)(e.s,0,e.a,e.x,e.e,1)},0):(e(),v()):k=0}function t(e,t,i,a,n){return k=0,t=t||"j",h(e)?function(i,a,e,t,n,s,r){function o(e){if(!c&&m(l.readyState)&&(u.r=c=1,k||v(),l.onload=l.onreadystatechange=null,e))for(var t in"img"!=i&&_(function(){w.removeChild(l)},50),C[a])C[a].hasOwnProperty(t)&&C[a][t].onload()}r=r||g.errorTimeout;var l={},c=0,d=0,u={t:e,s:a,e:n,a:s,x:r};1===C[a]&&(d=1,C[a]=[],l=p.createElement(i)),"object"==i?l.data=a:(l.src=a,l.type=i),l.width=l.height="0",l.onerror=l.onload=l.onreadystatechange=function(){o.call(this,d)},b.splice(t,0,u),"img"!=i&&(d||2===C[a]?(w.insertBefore(l,$?null:y),_(o,r)):C[a].push(l))}("c"==t?l:r,e,t,this.i++,i,a,n):(b.splice(this.i++,0,e),1==b.length&&v()),this}function o(){var e=g;return e.loader={load:t,i:0},e}var i,g,a=p.documentElement,_=e.setTimeout,y=p.getElementsByTagName("script")[0],n={}.toString,b=[],k=0,s="MozAppearance"in a.style,$=s&&!!p.createRange().compareNode,w=$?a:y.parentNode,r=(a=e.opera&&"[object Opera]"==n.call(e.opera),a=!!p.attachEvent&&!a,s?"object":a?"script":"img"),l=a?"script":r,c=Array.isArray||function(e){return"[object Array]"==n.call(e)},x=[],C={},j={timeout:function(e,t){return t.length&&(e.timeout=t[0]),e}};(g=function(e){function d(e,t,i,a,n){var s=function(e){e=e.split("!");var t,i,a,n=x.length,s=e.pop(),r=e.length;for(s={url:s,origUrl:s,prefixes:e},i=0;i<r;i++)a=e[i].split("="),(t=j[a.shift()])&&(s=t(s,a));for(i=0;i<n;i++)s=x[i](s);return s}(e),r=s.autoCallback;s.url.split(".").pop().split("?").shift(),s.bypass||(t=t&&(u(t)?t:t[e]||t[a]||t[e.split("/").pop().split("?")[0]]||v),s.instead?s.instead(e,t,i,a,n):(C[s.url]?s.noexec=!0:C[s.url]=1,i.load(s.url,s.forceCSS||!s.forceJS&&"css"==s.url.split(".").pop().split("?").shift()?"c":void 0,s.noexec,s.attrs,s.timeout),(u(t)||u(r))&&i.load(function(){o(),t&&t(s.origUrl,n,a),r&&r(s.origUrl,n,a),C[s.url]=2})))}function t(e,t){function i(i,e){if(i){if(h(i))e||(o=function(){var e=[].slice.call(arguments);l.apply(this,e),c()}),d(i,o,t,0,s);else if(Object(i)===i)for(n in a=function(){var e,t=0;for(e in i)i.hasOwnProperty(e)&&t++;return t}(),i)i.hasOwnProperty(n)&&(e||--a||(u(o)?o=function(){var e=[].slice.call(arguments);l.apply(this,e),c()}:o[n]=function(t){return function(){var e=[].slice.call(arguments);t&&t.apply(this,e),c()}}(l[n])),d(i[n],o,t,n,s))}else e||c()}var a,n,s=!!e.test,r=e.load||e.both,o=e.callback||f,l=o,c=e.complete||f;i(s?e.yep:e.nope,!!r),r&&i(r)}var i,a,n=this.yepnope.loader;if(h(e))d(e,0,n,0);else if(c(e))for(i=0;i<e.length;i++)h(a=e[i])?d(a,0,n,0):c(a)?g(a):Object(a)===a&&t(a,n);else Object(e)===e&&t(e,n)}).addPrefix=function(e,t){j[e]=t},g.addFilter=function(e){x.push(e)},g.errorTimeout=1e4,null==p.readyState&&p.addEventListener&&(p.readyState="loading",p.addEventListener("DOMContentLoaded",i=function(){p.removeEventListener("DOMContentLoaded",i,0),p.readyState="complete"},0)),e.yepnope=o(),e.yepnope.executeStack=v,e.yepnope.injectJs=function(e,t,i,a,n,s){var r,o,l=p.createElement("script");a=a||g.errorTimeout;for(o in l.src=e,i)l.setAttribute(o,i[o]);t=s?v:t||f,l.onreadystatechange=l.onload=function(){!r&&m(l.readyState)&&(r=1,t(),l.onload=l.onreadystatechange=null)},_(function(){r||t(r=1)},a),n?l.onload():y.parentNode.insertBefore(l,y)},e.yepnope.injectCss=function(e,t,i,a,n,s){var r;a=p.createElement("link"),t=s?v:t||f;for(r in a.href=e,a.rel="stylesheet",a.type="text/css",i)a.setAttribute(r,i[r]);n||(y.parentNode.insertBefore(a,y),_(t,0))}}(this,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))};var isIE=-1!=navigator.appVersion.indexOf("MSIE"),isWin=-1!=navigator.appVersion.toLowerCase().indexOf("win"),isOpera=-1!=navigator.userAgent.indexOf("Opera");function ControlVersion(){var t,e;try{t=(e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7")).GetVariable("$version")}catch(e){}if(!t)try{e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"),t="WIN 6,0,21,0",e.AllowScriptAccess="always",t=e.GetVariable("$version")}catch(e){}if(!t)try{t=(e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3")).GetVariable("$version")}catch(e){}if(!t)try{e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3"),t="WIN 3,0,18,0"}catch(e){}if(!t)try{e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash"),t="WIN 2,0,0,11"}catch(e){t=-1}return t}function GetSwfVer(){var e=-1;if(null!=navigator.plugins&&0<navigator.plugins.length){if(navigator.plugins["Shockwave Flash 2.0"]||navigator.plugins["Shockwave Flash"]){var t=navigator.plugins["Shockwave Flash 2.0"]?" 2.0":"",i=navigator.plugins["Shockwave Flash"+t].description.split(" "),a=i[2].split("."),n=a[0],s=a[1],r=i[3];""==r&&(r=i[4]),"d"==r[0]?r=r.substring(1):"r"==r[0]&&0<(r=r.substring(1)).indexOf("d")&&(r=r.substring(0,r.indexOf("d")));e=n+"."+s+"."+r}}else-1!=navigator.userAgent.toLowerCase().indexOf("webtv/2.6")?e=4:-1!=navigator.userAgent.toLowerCase().indexOf("webtv/2.5")?e=3:-1!=navigator.userAgent.toLowerCase().indexOf("webtv")?e=2:isIE&&isWin&&!isOpera&&(e=ControlVersion());return e}function DetectFlashVer(e,t,i){if(versionStr=GetSwfVer(),-1==versionStr)return!1;if(0!=versionStr){versionArray=isIE&&isWin&&!isOpera?(tempArray=versionStr.split(" "),tempString=tempArray[1],tempString.split(",")):versionStr.split(".");var a=versionArray[0],n=versionArray[1],s=versionArray[2];if(a>parseFloat(e))return!0;if(a==parseFloat(e)){if(n>parseFloat(t))return!0;if(n==parseFloat(t)&&s>=parseFloat(i))return!0}return!1}}function AC_AddExtension(e,t){return-1!=e.indexOf("?")?e.replace(/\?/,t+"?"):e+t}function AC_Generateobj(e,t,i){var a="";if(isIE&&isWin&&!isOpera){for(var n in a+="<object ",e)a+=n+'="'+e[n]+'" ';for(var n in a+=">",t)a+='<param name="'+n+'" value="'+t[n]+'" /> ';a+="</object>"}else{for(var n in a+="<embed ",i)a+=n+'="'+i[n]+'" ';a+="> </embed>"}document.write(a)}function AC_FL_RunContent(){var e=AC_GetArgs(arguments,".swf","movie","clsid:d27cdb6e-ae6d-11cf-96b8-444553540000","application/x-shockwave-flash");AC_Generateobj(e.objAttrs,e.params,e.embedAttrs)}function AC_SW_RunContent(){var e=AC_GetArgs(arguments,".dcr","src","clsid:166B1BCA-3F9C-11CF-8075-444553540000",null);AC_Generateobj(e.objAttrs,e.params,e.embedAttrs)}function AC_GetArgs(e,t,i,a,n){var s=new Object;s.embedAttrs=new Object,s.params=new Object,s.objAttrs=new Object;for(var r=0;r<e.length;r+=2){switch(e[r].toLowerCase()){case"classid":break;case"pluginspage":s.embedAttrs[e[r]]=e[r+1];break;case"src":case"movie":e[r+1]=AC_AddExtension(e[r+1],t),s.embedAttrs.src=e[r+1],s.params[i]=e[r+1];break;case"onafterupdate":case"onbeforeupdate":case"onblur":case"oncellchange":case"onclick":case"ondblclick":case"ondrag":case"ondragend":case"ondragenter":case"ondragleave":case"ondragover":case"ondrop":case"onfinish":case"onfocus":case"onhelp":case"onmousedown":case"onmouseup":case"onmouseover":case"onmousemove":case"onmouseout":case"onkeypress":case"onkeydown":case"onkeyup":case"onload":case"onlosecapture":case"onpropertychange":case"onreadystatechange":case"onrowsdelete":case"onrowenter":case"onrowexit":case"onrowsinserted":case"onstart":case"onscroll":case"onbeforeeditfocus":case"onactivate":case"onbeforedeactivate":case"ondeactivate":case"type":case"codebase":case"id":s.objAttrs[e[r]]=e[r+1];break;case"width":case"height":case"align":case"vspace":case"hspace":case"class":case"title":case"accesskey":case"name":case"tabindex":s.embedAttrs[e[r]]=s.objAttrs[e[r]]=e[r+1];break;default:s.embedAttrs[e[r]]=s.params[e[r]]=e[r+1]}}return s.objAttrs.classid=a,n&&(s.embedAttrs.type=n),s}!function(p){var n={defaults:{width:"100%",size:"medium",themes:[],placeholder:"Select an item",removable:!1,empty:!1,search:!1,ajax:!1,data:{},scrollContainer:null,zIndex:null},setup:function(e){var t=Object.keys(this.defaults),i=Object.keys(e),a=!0;i.forEach(function(e){-1===p.inArray(e,t)&&(console.error("selectMania | wrong setup settings"),a=!1)}),a&&(this.defaults=p.extend(!0,{},n.defaults,e))}},r={internalSettings:function(e,t){return t.multiple=!1,t.values=[],t.multiple=e.is("[multiple]"),t.disabled=e.is("[disabled]"),e.find("option:selected").each(function(){t.values.push({value:this.value,text:this.text})}),t},getAttrSettings:function(i){var a={};return["width","size","placeholder","removable","empty","search","scrollContainer","zIndex"].forEach(function(e){if(i.is("[data-"+e+"]")){var t=i.attr("data-"+e);"true"!==t&&"false"!==t||(t="true"===t),a[e]=t}}),a},initialize:function(e,t){var i=p.extend(!0,{},t),a=this.getAttrSettings(e);if((i=p.extend(i,a)).empty&&e.val(""),i=this.internalSettings(e,i),this.controlSettings(e,i)){var n=o.build(e,i);n.data("selectMania-originalSelect",e),e.data("selectMania-element",n),!1!==i.ajax&&this.initAjax(n,i),this.updateClean(n),e.addClass("select-mania-original"),n.insertBefore(e),e.appendTo(n),l.bind(n)}},update:function(e){var t=e.data("selectMania-element"),i=t.find(".select-mania-values").first(),a=t.data("selectMania-dropdown").find(".select-mania-items").first();e.is("[disabled]")?t.addClass("select-mania-disabled"):t.removeClass("select-mania-disabled"),t.find(".select-mania-value").remove(),a.empty(),e.find("option:selected").each(function(){p(this).is(":selected")&&i.append(o.buildValue({value:this.value,text:this.text}))}),a.append(o.buildItemList(e.children())),this.updateClean(t),l.bind(t)},destroy:function(e){var t=e.data("selectMania-element");e.insertAfter(t),t.remove(),e.removeClass("select-mania-original")},openDropdown:function(e){var t=e.closest(".select-mania");if(t.is("[data-selectMania-scrollContainer]")){var i=p(t.attr("data-selectMania-scrollContainer"));r.positionDropdown(e),e.addClass("select-mania-absolute"),i.off("scroll.selectMania").on("scroll.selectMania",function(){i.off("scroll.selectMania"),r.closeDropdown(p(".select-mania-dropdown.open"))}),p(window).off("resize.selectMania").on("resize.selectMania",function(){r.positionDropdown(e)})}e.stop().addClass("open").slideDown(100),e.find(".select-mania-items").scrollTop(0),this.focusSearch(e),p(document).off("keydown.selectMania").on("keydown.selectMania",l.keyboardControl)},closeDropdown:function(e){var t=e.data("selectMania-element");if(p(document).off("keydown.selectMania"),e.find(".select-mania-item").removeClass("select-mania-hover"),e.hasClass("select-mania-absolute")){var i=e.data("selectMania-element").find(".select-mania-inner").first();e.removeClass("open").hide().insertAfter(i),p(window).off("resize.selectMania");var a=p(t.attr("data-selectMania-scrollContainer"));0<a.length&&a.off("scroll.selectMania")}else e.stop().removeClass("open").slideUp(100)},positionDropdown:function(e){var t=e.data("selectMania-element"),i=e.find(".select-mania-items"),a=i.scrollTop(),n=t.offset(),s=t.outerWidth(),r=t.outerHeight();e.appendTo("body").css({position:"absolute",top:n.top+r,left:n.left,width:s}),i.scrollTop(a)},selectItem:function(e){var t=e.closest(".select-mania-dropdown"),i=t.data("selectMania-element"),a=i.data("selectMania-originalSelect");if(!e.is(".select-mania-selected")){var n=e.attr("data-value"),s=o.buildValue({value:n,text:e.text()});i.is(".select-mania-multiple")?(i.find(".select-mania-values").append(s),r.addMultipleVal(a,n)):(t.find(".select-mania-item").removeClass("select-mania-selected"),i.find(".select-mania-values .select-mania-value").remove(),i.find(".select-mania-values").append(s),a.val(n)),e.addClass("select-mania-selected"),a.trigger("change")}t.is(".select-mania-absolute")&&r.positionDropdown(t),i.is(".select-mania-multiple")||r.closeDropdown(t),r.updateClean(i),l.bind(i)},focusSearch:function(e){e.find(".select-mania-search-input").focus()},addMultipleVal:function(e,t){var i=e.val();i instanceof Array||(i=[]),i.push(t),e.val(i)},removeMultipleVal:function(e,t){var i=e.val();i instanceof Array||(i=[]),i.splice(p.inArray(t,i),1),e.val(i)},updateClean:function(e){var t=e.data("selectMania-originalSelect");null!==t.val()&&0<t.val().length?e.find(".select-mania-clear-icon").show():e.find(".select-mania-clear-icon").hide()},doSearch:function(e){var t=e.data("selectMania-dropdown"),i=t.find(".select-mania-search-input").first().val().toLowerCase().trim();""!==i?(t.find(".select-mania-item").each(function(){-1!==p(this).text().toLowerCase().indexOf(i)?p(this).removeClass("select-mania-hidden"):p(this).addClass("select-mania-hidden")}),t.find(".select-mania-group").each(function(){0<p(this).find(".select-mania-item:not(.select-mania-hidden)").length?p(this).removeClass("select-mania-hidden"):p(this).addClass("select-mania-hidden")})):t.find(".select-mania-group, .select-mania-item").removeClass("select-mania-hidden")},doSearchAjax:function(t){var i=this,e=t.data("selectMania-dropdown").find(".select-mania-search-input").first().val();t.data("selectMania-ajaxReady",!1),t.data("selectMania-ajaxPage",1),i.dropdownLoading(t),t.data("selectMania-ajaxFunction")(e,1,t.data("selectMania-ajaxData"),function(e){i.dropdownLoading(t,!0),r.replaceItems(t,e),l.bind(t),i.initAjax(t)})},addItems:function(e,t){this.addOrReplaceItems(e,t,!1)},replaceItems:function(e,t){this.addOrReplaceItems(e,t,!0)},addOrReplaceItems:function(e,t,i){var a=e.data("selectMania-dropdown"),n=e.data("selectMania-originalSelect"),s=a.find(".select-mania-items"),r=p(t);this.getVal(e).forEach(function(e){r.filter(function(){return p(this).attr("value")===e.value&&p(this).text()===e.text}).prop("selected",!0)}),$builtItems=o.buildItemList(r),!0===i&&(n.find("option").remove(":not(:checked)"),s.empty()),s.append($builtItems),n.append(r),l.bind(e)},initAjax:function(e,t){"object"==typeof t&&(t.hasOwnProperty("ajax")&&"function"==typeof t.ajax&&e.data("selectMania-ajaxFunction",t.ajax),t.hasOwnProperty("data")&&"object"==typeof t.data&&e.data("selectMania-ajaxData",t.data)),e.data("selectMania-ajaxPage",1),e.data("selectMania-ajaxReady",!0),e.data("selectMania-ajaxScrollDone",!1)},dropdownLoading:function(e,t){var i=!1;void 0!==t&&!0===t&&(i=!0);var a=e.find(".select-mania-items-container").first();if(a.find(".icon-loading-container").remove(),!0!==i){var n=p('<div class="icon-loading-container"></div>');n.append('<i class="icon-loading"></i>'),a.append(n)}},getVal:function(e){var t=[];return e.find(".select-mania-value").each(function(){var e=p(this).find(".select-mania-value-text").first().text();t.push({value:p(this).attr("data-value"),text:e})}),t},clear:function(e){var t=e.data("selectMania-dropdown");e.find(".select-mania-value").remove(),t.find(".select-mania-item").removeClass("select-mania-selected");var i=e.data("selectMania-originalSelect");e.is(".select-mania-multiple")?i.val([]):i.val("")},setVal:function(i,e){var a=this,n=i.data("selectMania-originalSelect");a.clear(i),1<e.length&&!i.is(".select-mania-multiple")&&(e=e.slice(0,1)),e.forEach(function(e){var t=p.extend({value:"",text:"",selected:!0},e);a.setOneValSelectMania(i,t),a.setOneValOriginal(n,t)}),a.updateClean(i),l.bind(i)},setOneValSelectMania:function(e,t){var i=o.buildValue(t);e.find(".select-mania-values").append(i);var a=e.find('.select-mania-item[data-value="'+t.value+'"]').filter(function(){return p(this).text()===t.text});0<a.length&&a.first().addClass("select-mania-selected")},setOneValOriginal:function(e,t){var i=e.find('option[value="'+t.value+'"]').filter(function(){return p(this).text()===t.text});if(i.length<1){var a=o.buildOption(t);e.append(a)}else{i.first()[0].selected=!0}},controlTarget:function(e,t){return-1===p.inArray("isSelect",t)||e.is("select")?-1===p.inArray("isInitialized",t)||e.hasClass("select-mania-original")?-1!==p.inArray("notInitialized",t)&&e.hasClass("select-mania-original")?(console.error("selectMania | ignore because already initialized"),console.log(e[0]),!1):!(-1!==p.inArray("isSingle",t)&&1<e.length)||(console.error("selectMania | check method can be called on single element only"),console.log(e[0]),!1):(console.error("selectMania | select is not initialized"),console.log(e[0]),!1):(console.error("selectMania | invalid select element"),console.log(e[0]),!1)},controlSettings:function(e,t){return!1!==t.ajax&&"function"!=typeof t.ajax?(t.ajax=!1,console.error("selectMania | invalid ajax function"),console.log(e[0]),console.log(t),!1):-1===p.inArray(t.size,["tiny","small","medium","large"])?(t.size="medium",console.error("selectMania | invalid size"),console.log(e[0]),console.log(t),!1):null!==t.scrollContainer&&p(t.scrollContainer).length<1?(t.scrollContainer=null,console.error("selectMania | invalid scroll container"),console.log(e[0]),console.log(t),!1):!(null!==t.zIndex&&(isNaN(parseInt(t.zIndex))||!isFinite(t.zIndex)))||(t.zIndex=null,console.error("selectMania | invalid z-index"),console.log(e[0]),console.log(t),!1)},controlValues:function(e,t){return t instanceof Array||(console.error("selectMania | values parameter is not a valid array"),console.log(e[0]),console.log(t),!1)},navigateItem:function(e,t){var i=e.closest(".select-mania"),a=e.find(".select-mania-items"),n=".select-mania-item:not(.select-mania-disabled):not(.select-mania-hidden)";i.hasClass("select-mania-multiple")&&(n+=":not(.select-mania-selected)");var s=e.find(n),r=e.find(n+".select-mania-hover"),o=p();if(0<r.length?"next"===t?o=s.slice(s.index(r)+1).first():"previous"===t&&(o=s.slice(0,s.index(r)).last()):o=s.first(),0<o.length){e.find(".select-mania-item").removeClass("select-mania-hover"),o.addClass("select-mania-hover");var l=o.position(),c=o.outerHeight(!0),d=a.height(),u=a.scrollTop();l.top<0?a.scrollTop(u+l.top):l.top+c>d&&a.scrollTop(u+l.top+c-d)}}},o={build:function(e,t){var i="select-mania-"+t.size,a='style="width:'+t.width+';"',n=p('<div class="select-mania '+i+'" '+a+"></div>");t.multiple&&n.addClass("select-mania-multiple"),t.disabled&&n.addClass("select-mania-disabled"),t.themes instanceof Array&&0<t.themes.length&&t.themes.forEach(function(e){n.addClass("select-mania-theme-"+e)}),!1!==t.ajax&&n.addClass("select-mania-ajax"),null!==t.scrollContainer&&n.attr("data-selectMania-scrollContainer",t.scrollContainer);var s=this.buildInner(t),r=this.buildDropdown(e,t);return n.append(s).append(r),n.data("selectMania-dropdown",r),r.data("selectMania-element",n),n},buildInner:function(e){var t=this,i=p('<div class="select-mania-inner"></div>'),a=p('<div class="select-mania-values"></div>'),n=p('<div class="select-mania-placeholder">'+e.placeholder+"</div>");a.append(n),e.values.forEach(function(e){a.append(t.buildValue(e))}),i.append(a);var s=p('<div class="select-mania-clear"></div>');return(e.removable||e.multiple)&&s.append('<i class="select-mania-clear-icon icon-cross">'),i.append(s),i.append('<div class="select-mania-add"><i class="select-mania-add-icon icon-add"></div>'),i.append(p('<div class="select-mania-arrow"><i class="select-mania-arrow-icon icon-arrow-down"></i></div>')),i},buildValue:function(e){var t='<div class="select-mania-value"  data-value="'+e.value+'"><div class="select-mania-value-text">'+e.text+'</div><div class="select-mania-value-clear"><i class="select-mania-value-clear-icon icon-cross"></i></div></div>';return p(t)},buildOption:function(e){var t=p('<option value="'+e.value+'">'+e.text+"</option>");return t[0].selected=e.selected,t},buildDropdown:function(e,t){var i="select-mania-"+t.size,a=p('<div class="select-mania-dropdown '+i+'"></div>');if(t.multiple&&a.addClass("select-mania-multiple"),t.search){var n=p('<div class="select-mania-dropdown-search"></div>');n.append('<input class="select-mania-search-input" />'),a.append(n)}var s=p('<div class="select-mania-items-container"></div>'),r=p('<div class="select-mania-items"></div>');return r.append(this.buildItemList(e.children())),s.append(r),a.append(s),t.themes instanceof Array&&0<t.themes.length&&t.themes.forEach(function(e){a.addClass("select-mania-theme-"+e)}),null!==t.zIndex&&a.css("z-index",t.zIndex),a},buildItemList:function(e){var t=this,i=p();return e.each(function(){p(this).is("optgroup")?i=i.add(t.buildItemGroup(p(this))):p(this).is("option")&&(i=i.add(t.buildItem(p(this))))}),i},buildItemGroup:function(e){var t=this,i=p('<div class="select-mania-group"></div>'),a=p('<div class="select-mania-group-inner"></div>'),n=p('<div class="select-mania-group-title"></div>');e.is("[data-icon]")&&n.append('<div class="select-mania-group-icon"><i class="'+e.attr("data-icon")+'"></i></div>'),n.append('<div class="select-mania-group-text">'+e.attr("label")+"</div>"),i.append(n);var s=e.is(":disabled");return s&&i.addClass("select-mania-disabled"),e.find("option").each(function(){a.append(t.buildItem(p(this),s))}),i.append(a),i},buildItem:function(e,t){var i=e[0],a=p('<div class="select-mania-item" data-value="'+i.value+'"></div>');return e.is("[class]")&&a.addClass(e.attr("class")),e.is("[data-icon]")&&a.append('<div class="select-mania-item-icon"><i class="'+e.attr("data-icon")+'"></i></div>'),a.append('<div class="select-mania-item-text">'+i.text+"</div>"),!e.is(":disabled")&&!0!==s.def(t)||a.addClass("select-mania-disabled"),e.is(":selected")&&a.addClass("select-mania-selected"),a}},l={bind:function(e){var t=this,i=e.data("selectMania-originalSelect"),a=e.data("selectMania-dropdown");e.is(".select-mania-disabled")?(i.off("focus.selectMania"),i.off("blur.selectMania"),e.find(".select-mania-clear-icon").off("click.selectMania"),e.find(".select-mania-value-clear-icon").off("click.selectMania"),e.find(".select-mania-inner").off("click.selectMania"),a.find(".select-mania-item:not(.select-mania-disabled)").off("mouseenter.selectMania"),a.find(".select-mania-item:not(.select-mania-disabled)").off("click.selectMania"),a.find(".select-mania-search-input").off("input.selectMania"),a.find(".select-mania-items").off("wheel.selectMania"),a.find(".select-mania-items").off("scroll.selectMania")):(p(document).off("click.selectMania").on("click.selectMania",t.documentClick),i.off("focus.selectMania").on("focus.selectMania",t.focus),i.off("blur.selectMania").on("blur.selectMania",t.blur),e.find(".select-mania-clear-icon").off("click.selectMania").on("click.selectMania",t.clearValues),e.find(".select-mania-value-clear-icon").off("click.selectMania").on("click.selectMania",t.clearValue),e.find(".select-mania-inner").off("click.selectMania").on("click.selectMania",t.dropdownToggle),a.find(".select-mania-item:not(.select-mania-disabled)").off("mouseenter.selectMania").on("mouseenter.selectMania",t.hoverItem),a.find(".select-mania-item:not(.select-mania-disabled)").off("click.selectMania").on("click.selectMania",t.itemSelection),a.find(".select-mania-search-input").off("input.selectMania").on("input.selectMania",t.inputSearch),a.find(".select-mania-items").off("wheel.selectMania").on("wheel.selectMania",t.scrollControl),e.is(".select-mania-ajax")&&a.find(".select-mania-items").off("scroll.selectMania").on("scroll.selectMania",t.scrollAjax))},dropdownToggle:function(e){e.stopPropagation();var t=p(this).closest(".select-mania").data("selectMania-dropdown");t.is(".open")?r.closeDropdown(t):(r.closeDropdown(p(".select-mania-dropdown.open")),r.openDropdown(t))},documentClick:function(e){p(e.target).closest(".select-mania-dropdown").length<1&&r.closeDropdown(p(".select-mania-dropdown.open"))},clearValues:function(e){e.stopPropagation();var t=p(this).closest(".select-mania"),i=t.data("selectMania-dropdown"),a=t.data("selectMania-originalSelect");r.clear(t),i.is(".select-mania-absolute")&&r.positionDropdown(i),a.trigger("change"),r.updateClean(t)},clearValue:function(e){e.stopPropagation();var t=p(this).closest(".select-mania"),i=t.data("selectMania-dropdown"),a=p(this).closest(".select-mania-value");i.find('.select-mania-item[data-value="'+a.attr("data-value")+'"]').removeClass("select-mania-selected"),a.remove();var n=t.data("selectMania-originalSelect");r.removeMultipleVal(n,a.attr("data-value")),i.is(".select-mania-absolute")&&r.positionDropdown(i),n.trigger("change"),r.updateClean(t)},itemSelection:function(){var e=p(this);r.selectItem(e)},inputSearch:function(){var e=p(this);$selectManiaEl=e.closest(".select-mania-dropdown").data("selectMania-element");var t=200;$selectManiaEl.is(".select-mania-ajax")&&(t=400),clearTimeout(e.data("selectMania-searchTimer")),e.data("selectMania-searchTimer",setTimeout(function(){$selectManiaEl.is(".select-mania-ajax")?r.doSearchAjax($selectManiaEl):r.doSearch($selectManiaEl)},t))},scrollAjax:function(e){var t=p(this),i=t.closest(".select-mania-dropdown").data("selectMania-element");if(!0!==i.data("selectMania-ajaxScrollDone")&&t.scrollTop()>=t[0].scrollHeight-t.outerHeight()-12&&!0===i.data("selectMania-ajaxReady")){var a=i.data("selectMania-ajaxPage")+1,n=i.find(".select-mania-search-input").first().val();i.data("selectMania-ajaxReady",!1),i.data("selectMania-ajaxPage",a),r.dropdownLoading(i),i.data("selectMania-ajaxFunction")(n,a,i.data("selectMania-ajaxData"),function(e){r.dropdownLoading(i,!0),""!==e.trim()?(r.addItems(i,e),l.bind(i),i.data("selectMania-ajaxReady",!0)):i.data("selectMania-ajaxScrollDone",!0)})}},scrollControl:function(e){var t=p(this);return e.originalEvent.deltaY<0?0<t.scrollTop():t.scrollTop()+t.innerHeight()<t[0].scrollHeight},focus:function(e){var t=p(this);t.data("selectMania-element").addClass("select-mania-focused"),t.off("keydown.selectMania").on("keydown.selectMania",l.keyboardOpening)},blur:function(e){var t=p(this);t.data("selectMania-element").removeClass("select-mania-focused"),t.off("keydown.selectMania")},hoverItem:function(e){var t=p(this);t.closest(".select-mania-dropdown").find(".select-mania-item").removeClass("select-mania-hover"),t.addClass("select-mania-hover")},keyboardOpening:function(e){var t=p(this),i=t.data("selectMania-element").data("selectMania-dropdown");i.hasClass("open")||-1===p.inArray(e.keyCode,[13,32,37,38,39,40])||(e.preventDefault(),e.stopPropagation(),t.blur(),r.openDropdown(i))},keyboardControl:function(e){var t=p(".select-mania-dropdown.open").first();if(0<t.length&&-1!==p.inArray(e.keyCode,[9,13,27,38,40]))switch(e.preventDefault(),e.stopPropagation(),e.keyCode){case 13:var i=t.find(".select-mania-item:not(.select-mania-disabled):not(.select-mania-hidden).select-mania-hover").first();0<i.length&&r.selectItem(i);break;case 9:case 27:r.closeDropdown(t);break;case 38:r.navigateItem(t,"previous");break;case 40:r.navigateItem(t,"next")}}},s={def:function(e){return void 0===e?null:e}},i={init:function(e){var t=p.extend(!0,{},n.defaults,e);return this.each(function(){var e=p(this);r.controlTarget(e,["isSelect","notInitialized"])&&r.initialize(e,t)})},update:function(){return this.each(function(){var e=p(this);r.controlTarget(e,["isInitialized"])&&r.update(e)})},destroy:function(){return this.each(function(){var e=p(this);r.controlTarget(e,["isInitialized"])&&r.destroy(e)})},check:function(){if(r.controlTarget(this,["isSingle"]))return this.hasClass("select-mania-original")},get:function(){if(r.controlTarget(this,["isSingle","isInitialized"])){var e=this.data("selectMania-element");return r.getVal(e)}},set:function(e){if(r.controlTarget(this,["isSingle","isInitialized"])&&r.controlValues(this,e)){var t=this.data("selectMania-element");r.setVal(t,e)}},clear:function(){return this.each(function(){var e=p(this);if(r.controlTarget(e,["isInitialized"])){var t=e.data("selectMania-element");r.clear(t),e.trigger("change"),r.updateClean(t)}})},setup:function(){return this.each(function(){var e=p(this);if(r.controlTarget(e,["isInitialized"])){var t=e.data("selectMania-element");r.clear(t),e.trigger("change"),r.updateClean(t)}})}};p.fn.selectMania=function(e){if(!(this.length<1)){if(i[e]){var t=Array.prototype.slice.call(arguments,1);return i[e].apply(this,t)}if("object"==typeof e||!e)return i.init.apply(this,arguments);console.error("selectMania | wrong method called"),console.log(this)}},p.extend({selectManiaSetup:function(e){n.setup(e)}})}(jQuery),function(j){j.fn.circliful=function(x,e){var C=j.extend({fgcolor:"#556b2f",bgcolor:"#eee",fill:!1,width:15,dimension:200,fontsize:15,percent:50,animationstep:1,iconsize:"20px",iconcolor:"#999",border:"default",complete:null},x);return this.each(function(){var a,i,e=["fgcolor","bgcolor","fill","width","dimension","fontsize","animationstep","endPercent","icon","iconcolor","iconsize","border"],n={},s="",r=0,o=j(this),l=!1;if(o.addClass("circliful"),i=o,j.each(e,function(e,t){null!=i.data(t)?n[t]=i.data(t):n[t]=j(C).attr(t),"fill"==t&&null!=i.data("fill")&&(l=!0)}),null!=o.data("text")&&(a=o.data("text"),null!=o.data("icon")&&(s=j("<i></i>").addClass("fa "+j(this).data("icon")).css({color:n.iconcolor,"font-size":n.iconsize})),null!=o.data("type")&&"half"==(b=j(this).data("type"))?$(o,"circle-text-half",n.dimension/1.45):$(o,"circle-text",n.dimension)),null!=o.data("text-pr")&&(a=o.data("text-pr"),$(o,"circle-text-pr",n.dimension)),null!=j(this).data("total")&&null!=j(this).data("part")){var t=j(this).data("total")/100;percent=(j(this).data("part")/t/100).toFixed(3),r=(j(this).data("part")/t).toFixed(3)}else null!=j(this).data("percent")?(percent=j(this).data("percent")/100,r=j(this).data("percent")):percent=C.percent/100;null!=j(this).data("info")&&(j(this).data("info"),null!=j(this).data("type")?(b=j(this).data("type"),w(o,"half"==b?.9:1.25)):w(o,1.25)),j(this).width(n.dimension+"px");var c=j("<canvas></canvas>").attr({width:n.dimension,height:n.dimension}).appendTo(j(this)).get(0),d=c.getContext("2d"),u=c.width/2,p=c.height/2,h=(n.percent,Math.PI,c.width/2.5),f=2.3*Math.PI,m=0,v=0===n.animationstep?r:0,g=Math.max(n.animationstep,0),_=2*Math.PI,y=Math.PI/2,b="",k=!0;function $(e,t,i){j("<span></span>").appendTo(e).addClass(t).text(a).prepend(s).css({"line-height":i+"px","font-size":n.fontsize+"px"})}function w(e,t){j("<span></span>").appendTo(e).addClass("circle-info-half").css("line-height",n.dimension*t+"px")}null!=j(this).data("type")&&"half"==(b=j(this).data("type"))&&(f=2*Math.PI,m=3.13,_=+Math.PI,y=Math.PI/.996),function e(t){d.clearRect(0,0,c.width,c.height),d.beginPath(),d.arc(u,p,h,m,f,!1),d.lineWidth=n.width+1,d.strokeStyle=n.bgcolor,d.stroke(),l&&(d.fillStyle=n.fill,d.fill()),d.beginPath(),d.arc(u,p,h,-y,_*t-y,!1),"outline"==n.border?d.lineWidth=n.width+13:"inline"==n.border&&(d.lineWidth=n.width-13),d.strokeStyle=n.fgcolor,d.stroke(),v<r&&(v+=g,requestAnimationFrame(function(){e(Math.min(v,r)/100)},o)),v==r&&k&&void 0!==x&&j.isFunction(x.complete)&&(x.complete(),k=!1)}(v/100)})}}(jQuery);var date_graf=function(){$("#date_hidden_table_gr1").val()>$("#date_hidden_table_gr2").val()&&($("#date_hidden_table_gr2").val(""),$("#date_table_gr2").val(""))},edit_grafik_click=function(){return $(this).is("[for]")&&$.isNumeric($(this).attr("for"))&&$.arcticmodal({type:"ajax",url:"forms/form_edit_grafic.php?id="+$(this).attr("for"),afterLoading:function(e,t){},afterLoadingOnShow:function(e,t){},afterClose:function(e,t){clearInterval(timerId)}}),!1};function alert_message(e,t){var i=1;$(".alert_wrapper .div-box").find(".alert-message").each(function(){value=$(this).attr("alert-id"),value>i&&(i=value)}),$(".alert_wrapper .div-box").prepend(function(){$(this).find(".alert-message ").addClass("show-alert")},'<div alert-id="'+(i+1)+'" class="  alert-message '+e+'-a"><div class="alert-icon"></div><div class="alert-content">'+t+'</div><div class="alert-close js-alert-close"></div></div>'),setTimeout(function(){$(".alert-message[alert-id="+(i+1)+"]").addClass("show-alert")},500),setTimeout(function(){$(".alert-message[alert-id="+(i+1)+"]").addClass("hide-alert"),setTimeout(function(){$(".alert-message[alert-id="+(i+1)+"]").remove()},500)},5e3)}function HistoryN1(){$(".history_act_mat").hide();var e=$(this).parents(".edit_panel11_mat").find(".history_act_mat");e.is(":visible")?e.slideUp("slow"):e.slideDown("slow")}function Zindex(){var i=50;$(".js-zindex").each(function(e,t){$(this).css("z-index",i),i--})}!function(e){"function"==typeof define&&define.amd?define([],function(){return e()}):"object"==typeof exports?module.exports=e():e()}(function(){!function(t,i){"use strict";function e(e){return this.core=t(e).data("lightGallery"),this.$el=t(e),this.core.s=t.extend({},a,this.core.s),this.init(),this}var a={fullScreen:!0};e.prototype.init=function(){var e="";if(this.core.s.fullScreen){if(!(i.fullscreenEnabled||i.webkitFullscreenEnabled||i.mozFullScreenEnabled||i.msFullscreenEnabled))return;e='<span class="lg-fullscreen lg-icon"></span>',this.core.$outer.find(".lg-toolbar").append(e),this.fullScreen()}},e.prototype.requestFullscreen=function(){var e=i.documentElement;e.requestFullscreen?e.requestFullscreen():e.msRequestFullscreen?e.msRequestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen&&e.webkitRequestFullscreen()},e.prototype.exitFullscreen=function(){i.exitFullscreen?i.exitFullscreen():i.msExitFullscreen?i.msExitFullscreen():i.mozCancelFullScreen?i.mozCancelFullScreen():i.webkitExitFullscreen&&i.webkitExitFullscreen()},e.prototype.fullScreen=function(){var e=this;t(i).on("fullscreenchange.lg webkitfullscreenchange.lg mozfullscreenchange.lg MSFullscreenChange.lg",function(){e.core.$outer.toggleClass("lg-fullscreen-on")}),this.core.$outer.find(".lg-fullscreen").on("click.lg",function(){i.fullscreenElement||i.mozFullScreenElement||i.webkitFullscreenElement||i.msFullscreenElement?e.exitFullscreen():e.requestFullscreen()})},e.prototype.destroy=function(){this.exitFullscreen(),t(i).off("fullscreenchange.lg webkitfullscreenchange.lg mozfullscreenchange.lg MSFullscreenChange.lg")},t.fn.lightGallery.modules.fullscreen=e}(jQuery,(window,document))}),function(e){"function"==typeof define&&define.amd?define([],function(){return e()}):"object"==typeof exports?module.exports=e():e()}(function(){!function(c,d){"use strict";function e(e){return this.core=c(e).data("lightGallery"),this.core.s=c.extend({},t,this.core.s),this.$el=c(e),this.$thumbOuter=null,this.thumbOuterWidth=0,this.thumbTotalWidth=this.core.$items.length*(this.core.s.thumbWidth+this.core.s.thumbMargin),this.thumbIndex=this.core.index,this.left=0,this.init(),this}var t={thumbnail:!0,animateThumb:!0,currentPagerPosition:"middle",thumbWidth:100,thumbContHeight:100,thumbMargin:5,exThumbImage:!1,showThumbByDefault:!0,toogleThumb:!0,pullCaptionUp:!0,enableThumbDrag:!0,enableThumbSwipe:!0,swipeThreshold:50,loadYoutubeThumbnail:!0,youtubeThumbSize:1,loadVimeoThumbnail:!0,vimeoThumbSize:"thumbnail_small",loadDailymotionThumbnail:!0};e.prototype.init=function(){var e=this;this.core.s.thumbnail&&1<this.core.$items.length&&(this.core.s.showThumbByDefault&&setTimeout(function(){e.core.$outer.addClass("lg-thumb-open")},700),this.core.s.pullCaptionUp&&this.core.$outer.addClass("lg-pull-caption-up"),this.build(),this.core.s.animateThumb?(this.core.s.enableThumbDrag&&!this.core.isTouch&&this.core.doCss()&&this.enableThumbDrag(),this.core.s.enableThumbSwipe&&this.core.isTouch&&this.core.doCss()&&this.enableThumbSwipe(),this.thumbClickable=!1):this.thumbClickable=!0,this.toogle(),this.thumbkeyPress())},e.prototype.build=function(){function t(e,t,i){var a,n=r.core.isVideo(e,i)||{},s="";n.youtube||n.vimeo||n.dailymotion?n.youtube?a=r.core.s.loadYoutubeThumbnail?"//img.youtube.com/vi/"+n.youtube[1]+"/"+r.core.s.youtubeThumbSize+".jpg":t:n.vimeo?r.core.s.loadVimeoThumbnail?(a="//i.vimeocdn.com/video/error_"+l+".jpg",s=n.vimeo[1]):a=t:n.dailymotion&&(a=r.core.s.loadDailymotionThumbnail?"//www.dailymotion.com/thumbnail/video/"+n.dailymotion[1]:t):a=t,o+='<div data-vimeo-id="'+s+'" class="lg-thumb-item" style="width:'+r.core.s.thumbWidth+"px; margin-right: "+r.core.s.thumbMargin+'px"><img src="'+a+'" /></div>',s=""}var e,r=this,o="",l="";switch(this.core.s.vimeoThumbSize){case"thumbnail_large":l="640";break;case"thumbnail_medium":l="200x150";break;case"thumbnail_small":l="100x75"}if(r.core.$outer.addClass("lg-has-thumb"),r.core.$outer.find(".lg").append('<div class="lg-thumb-outer"><div class="lg-thumb group"></div></div>'),r.$thumbOuter=r.core.$outer.find(".lg-thumb-outer"),r.thumbOuterWidth=r.$thumbOuter.width(),r.core.s.animateThumb&&r.core.$outer.find(".lg-thumb").css({width:r.thumbTotalWidth+"px",position:"relative"}),this.core.s.animateThumb&&r.$thumbOuter.css("height",r.core.s.thumbContHeight+"px"),r.core.s.dynamic)for(var i=0;i<r.core.s.dynamicEl.length;i++)t(r.core.s.dynamicEl[i].src,r.core.s.dynamicEl[i].thumb,i);else r.core.$items.each(function(e){r.core.s.exThumbImage?t(c(this).attr("href")||c(this).attr("data-src"),c(this).attr(r.core.s.exThumbImage),e):t(c(this).attr("href")||c(this).attr("data-src"),c(this).find("img").attr("src"),e)});r.core.$outer.find(".lg-thumb").html(o),(e=r.core.$outer.find(".lg-thumb-item")).each(function(){var t=c(this),e=t.attr("data-vimeo-id");e&&c.getJSON("//www.vimeo.com/api/v2/video/"+e+".json?callback=?",{format:"json"},function(e){t.find("img").attr("src",e[0][r.core.s.vimeoThumbSize])})}),e.eq(r.core.index).addClass("active"),r.core.$el.on("onBeforeSlide.lg.tm",function(){e.removeClass("active"),e.eq(r.core.index).addClass("active")}),e.on("click.lg touchend.lg",function(){var e=c(this);setTimeout(function(){(!r.thumbClickable||r.core.lgBusy)&&r.core.doCss()||(r.core.index=e.index(),r.core.slide(r.core.index,!1,!0))},50)}),r.core.$el.on("onBeforeSlide.lg.tm",function(){r.animateThumb(r.core.index)}),c(d).on("resize.lg.thumb orientationchange.lg.thumb",function(){setTimeout(function(){r.animateThumb(r.core.index),r.thumbOuterWidth=r.$thumbOuter.width()},200)})},e.prototype.setTranslate=function(e){this.core.$outer.find(".lg-thumb").css({transform:"translate3d(-"+e+"px, 0px, 0px)"})},e.prototype.animateThumb=function(e){var t=this.core.$outer.find(".lg-thumb");if(this.core.s.animateThumb){var i;switch(this.core.s.currentPagerPosition){case"left":i=0;break;case"middle":i=this.thumbOuterWidth/2-this.core.s.thumbWidth/2;break;case"right":i=this.thumbOuterWidth-this.core.s.thumbWidth}this.left=(this.core.s.thumbWidth+this.core.s.thumbMargin)*e-1-i,this.left>this.thumbTotalWidth-this.thumbOuterWidth&&(this.left=this.thumbTotalWidth-this.thumbOuterWidth),this.left<0&&(this.left=0),this.core.lGalleryOn?(t.hasClass("on")||this.core.$outer.find(".lg-thumb").css("transition-duration",this.core.s.speed+"ms"),this.core.doCss()||t.animate({left:-this.left+"px"},this.core.s.speed)):this.core.doCss()||t.css("left",-this.left+"px"),this.setTranslate(this.left)}},e.prototype.enableThumbDrag=function(){var t=this,i=0,a=0,n=!1,s=!1,r=0;t.$thumbOuter.addClass("lg-grab"),t.core.$outer.find(".lg-thumb").on("mousedown.lg.thumb",function(e){t.thumbTotalWidth>t.thumbOuterWidth&&(e.preventDefault(),i=e.pageX,n=!0,t.core.$outer.scrollLeft+=1,--t.core.$outer.scrollLeft,t.thumbClickable=!1,t.$thumbOuter.removeClass("lg-grab").addClass("lg-grabbing"))}),c(d).on("mousemove.lg.thumb",function(e){n&&(r=t.left,s=!0,a=e.pageX,t.$thumbOuter.addClass("lg-dragging"),(r-=a-i)>t.thumbTotalWidth-t.thumbOuterWidth&&(r=t.thumbTotalWidth-t.thumbOuterWidth),r<0&&(r=0),t.setTranslate(r))}),c(d).on("mouseup.lg.thumb",function(){s?(s=!1,t.$thumbOuter.removeClass("lg-dragging"),t.left=r,Math.abs(a-i)<t.core.s.swipeThreshold&&(t.thumbClickable=!0)):t.thumbClickable=!0,n&&(n=!1,t.$thumbOuter.removeClass("lg-grabbing").addClass("lg-grab"))})},e.prototype.enableThumbSwipe=function(){var t=this,i=0,a=0,n=!1,s=0;t.core.$outer.find(".lg-thumb").on("touchstart.lg",function(e){t.thumbTotalWidth>t.thumbOuterWidth&&(e.preventDefault(),i=e.originalEvent.targetTouches[0].pageX,t.thumbClickable=!1)}),t.core.$outer.find(".lg-thumb").on("touchmove.lg",function(e){t.thumbTotalWidth>t.thumbOuterWidth&&(e.preventDefault(),a=e.originalEvent.targetTouches[0].pageX,n=!0,t.$thumbOuter.addClass("lg-dragging"),s=t.left,(s-=a-i)>t.thumbTotalWidth-t.thumbOuterWidth&&(s=t.thumbTotalWidth-t.thumbOuterWidth),s<0&&(s=0),t.setTranslate(s))}),t.core.$outer.find(".lg-thumb").on("touchend.lg",function(){t.thumbTotalWidth>t.thumbOuterWidth&&n?(n=!1,t.$thumbOuter.removeClass("lg-dragging"),Math.abs(a-i)<t.core.s.swipeThreshold&&(t.thumbClickable=!0),t.left=s):t.thumbClickable=!0})},e.prototype.toogle=function(){var e=this;e.core.s.toogleThumb&&(e.core.$outer.addClass("lg-can-toggle"),e.$thumbOuter.append('<span class="lg-toogle-thumb lg-icon"></span>'),e.core.$outer.find(".lg-toogle-thumb").on("click.lg",function(){e.core.$outer.toggleClass("lg-thumb-open")}))},e.prototype.thumbkeyPress=function(){var t=this;c(d).on("keydown.lg.thumb",function(e){38===e.keyCode?(e.preventDefault(),t.core.$outer.addClass("lg-thumb-open")):40===e.keyCode&&(e.preventDefault(),t.core.$outer.removeClass("lg-thumb-open"))})},e.prototype.destroy=function(){this.core.s.thumbnail&&1<this.core.$items.length&&(c(d).off("resize.lg.thumb orientationchange.lg.thumb keydown.lg.thumb"),this.$thumbOuter.remove(),this.core.$outer.removeClass("lg-has-thumb"))},c.fn.lightGallery.modules.Thumbnail=e}(jQuery,window,document)}),$(function(){$(".material-prime-v2").on("click",".history_icon_level",HistoryN1)}),$(function(){Zindex()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
